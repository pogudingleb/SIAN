    |\^/|     Maple 2021 (X86 64 LINUX)
._|\|   |/|_. Copyright (c) Maplesoft, a division of Waterloo Maple Inc. 2021
 \  MAPLE  /  All rights reserved. Maple is a trademark of
 <____ ____>  Waterloo Maple Inc.
      |       Type ? for help.
# Example (with initial conditions assumed being unknown) from Section 3 of "Examples of testing global identifiability of biological and biomedical models with the DAISY software"
# by M.P. Saccomani, S. Audoly, G. Bellu, L. D'Angio

# read "../IdentifiabilityODE.mpl";
> read "../generate_tr_bases.mpl";
Warning, (in IdentifiabilityODE) `degrees` is implicitly declared local
|../generate_tr_bases.mpl:321|
Warning, (in IdentifiabilityODE) `degree_table` is implicitly declared local
|../generate_tr_bases.mpl:451|
Warning, (in IdentifiabilityODE) `occurrence_table` is implicitly declared local
|../generate_tr_bases.mpl:452|


> sigma := [
>   diff(x1(t), t) = -(k3 + k7) * x1(t) + k4 * x2(t),
>   diff(x2(t), t) = k3 * x1(t) - (k4 + a * k5 + b * d * k5) * x2(t) + k6 * x3(t) + k6 * x4(t) + k5 * x2(t) * x3(t) + k5 * x2(t) * x4(t),
>   diff(x3(t), t) = a * k5 * x2(t) - k6 * x3(t) - k5 * x2(t) * x3(t),
>   diff(x4(t), t) = b * d * k5 * x2(t) - k6 * x4(t) - k5 * x2(t) * x4(t),
>   diff(x5(t), t) = k7 * x1(t),
>   y1(t) = x5(t)
>   # y2(t) = a,
>   # y3(t) = b,
>   # y4(t) = d
> ];
          d                                       d
sigma := [-- x1(t) = -(k3 + k7) x1(t) + k4 x2(t), -- x2(t) = k3 x1(t)
          dt                                      dt

     - (b d k5 + a k5 + k4) x2(t) + k6 x3(t) + k6 x4(t) + k5 x2(t) x3(t)

                       d
     + k5 x2(t) x4(t), -- x3(t) = a k5 x2(t) - k6 x3(t) - k5 x2(t) x3(t),
                       dt

    d                                                    d
    -- x4(t) = b d k5 x2(t) - k6 x4(t) - k5 x2(t) x4(t), -- x5(t) = k7 x1(t),
    dt                                                   dt

    y1(t) = x5(t)]


# IdentifiabilityODE(sigma, GetParameters(sigma), substitute_tr_basis=true):
> IdentifiabilityODE(sigma, GetParameters(sigma), "new_logs/Tumor", sub_transc=true):

=======================================================
0. Extracting states, inputs, outputs, and parameters from the system
=======================================================

=== Input info ===
State variables:          [x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t)]
Input variables:          []
Parameters in equations:  [a, b, d, k3, k4, k5, k6, k7]
===================


=======================================================
1. Constructing the maximal polynomial system
=======================================================
memory used=32.7MB, alloc=108.3MB, time=0.49

=======================================================
2. Truncating the polynomial system based on the Jacobian condition
=======================================================
Bound D_1 for testing the rank of the Jacobian probabilistically:  91728000
Orders of prolongations of the outputs (beta) =  [11]
Orders of prolongations of the state variables (alpha) =  [10, 9, 8, 8, 11]

=======================================================
3. Assessing local identifiability
=======================================================
memory used=97.2MB, alloc=117.8MB, time=1.15
memory used=132.7MB, alloc=120.8MB, time=1.54
Locally identifiable paramters:  [k3, k4, k5, k6, k7, x1(0), x2(0), x5(0)]
Nonidentifiable parameter:  [a, b, d, x3(0), x4(0)]
Number of transcendence basis choices before "filtering": 15180
Number of transcendence basis choices after "filtering": 969

=======================================================
Creating Truncated system (old)
=======================================================
Bound D_2 for assessing global identifiability:  525956485400000000000000
Random sample for the outputs and inputs is generated from  [a = 303938192878090296280967, b = 427266454119211156692759, d = 385162044349261270221679, k3 = 322230479389951715490591, k4 = 460463290414919595214993, k5 = 503255790937193844306183, k6 = 217524010146490796364592, k7 = 17278763823283717694616, x1_0 = 377472314302892020499524, x2_0 = 29330244211150329602963, x3_0 = 428744704534256719819600, x4_0 = 368446701358726335456757, x5_0 = 155594324239109048355708]
The polynomial system widehat{E^t} contains  52 equations in  54  variables
Algebraically independent parameters (candidates) [a, b, d]

=======================================================
Substituting transcendence basis.
=======================================================
memory used=215.9MB, alloc=156.1MB, time=2.32
Algebraically independent parameters (candidates) [a, b, x3(0)]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {a, b}
Algebraically independent parameters among derivatives: {x3(0)}
	Adding ODEs: [diff(a(t),t) = 0, diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = a(t), y_faux2(t) = b(t)]
	New system: [diff(a(t),t) = 0, diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a(t)*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a(t)*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = a(t), y_faux2(t) = b(t)]

=== Input info ===
State variables:          [a(t), b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t), y_faux2(t)]
Input variables:          []
Parameters in equations:  [d, k3, k4, k5, k6, k7]
===================

memory used=266.3MB, alloc=156.1MB, time=2.96
memory used=319.3MB, alloc=156.1MB, time=3.60
memory used=436.9MB, alloc=191.8MB, time=4.39
	Adding new y-equations: [y_faux3_0 = x3_0]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-a_0, a_1, y_faux2_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a_0*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a_0-x3_0-x4_0)*x2_1+x2_0*(b_1*d+a_1-x3_1-x4_1))*k5-x1_1*k3+k4*x2_1-k6*x3_1-k6*x4_1+x2_2, -a_0*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a_0-x3_0-x4_0)*x2_2+(b_2*d+a_2-x3_2-x4_2)*x2_0+2*x2_1*(b_1*d+a_1-x3_1-x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, a_2, b_2, ((-a_1+x3_1)*x2_0-x2_1*(a_0-x3_0))*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a_0-x3_0-x4_0)*x2_3+(b_3*d+a_3-x3_3-x4_3)*x2_0+(3*b_2*d+3*a_2-3*x3_2-3*x4_2)*x2_1+3*x2_2*(b_1*d+a_1-x3_1-x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, a_3, b_3, ((x3_2-a_2)*x2_0+(2*x3_1-2*a_1)*x2_1-x2_2*(a_0-x3_0))*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a_0-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(a_4-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3+4*a_3)*x2_1+(-6*x3_2-6*x4_2+6*a_2)*x2_2-4*x2_3*(x3_1+x4_1-a_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, a_4, b_4, ((x3_3-a_3)*x2_0+(3*x3_2-3*a_2)*x2_1+(3*x3_1-3*a_1)*x2_2+x2_3*(-a_0+x3_0))*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(-x3_0-x4_0+a_0)*x2_5+(a_5-x3_5-x4_5)*x2_0+(5*a_4-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3+10*a_3)*x2_2+(-10*x3_2-10*x4_2+10*a_2)*x2_3-5*x2_4*(x3_1+x4_1-a_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, a_5, b_5, ((x3_4-a_4)*x2_0+(4*x3_3-4*a_3)*x2_1+(6*x3_2-6*a_2)*x2_2+(4*x3_1-4*a_1)*x2_3+x2_4*(-a_0+x3_0))*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(-x3_0-x4_0+a_0)*x2_6+(a_6-x3_6-x4_6)*x2_0+(6*a_5-6*x3_5-6*x4_5)*x2_1+(15*a_4-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3+20*a_3)*x2_3+(-15*x3_2-15*x4_2+15*a_2)*x2_4-6*x2_5*(x3_1+x4_1-a_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, a_6, b_6, ((x3_5-a_5)*x2_0+(5*x3_4-5*a_4)*x2_1+(10*x3_3-10*a_3)*x2_2+(10*x3_2-10*a_2)*x2_3+(5*x3_1-5*a_1)*x2_4+x2_5*(-a_0+x3_0))*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(-x3_0-x4_0+a_0)*x2_7+(a_7-x3_7-x4_7)*x2_0+(7*a_6-7*x3_6-7*x4_6)*x2_1+(21*a_5-21*x3_5-21*x4_5)*x2_2+(35*a_4-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3+35*a_3)*x2_4+(-21*x3_2-21*x4_2+21*a_2)*x2_5-7*x2_6*(x3_1+x4_1-a_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, a_7, b_7, ((x3_6-a_6)*x2_0+(6*x3_5-6*a_5)*x2_1+(15*x3_4-15*a_4)*x2_2+(20*x3_3-20*a_3)*x2_3+(15*x3_2-15*a_2)*x2_4+(6*x3_1-6*a_1)*x2_5+x2_6*(-a_0+x3_0))*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -a_1+y_faux1_1, -a_2+y_faux1_2, -a_3+y_faux1_3, -a_4+y_faux1_4, -a_5+y_faux1_5, -a_6+y_faux1_6, -a_7+y_faux1_7, -b_1+y_faux2_1, -b_2+y_faux2_2, -b_3+y_faux2_3, -b_4+y_faux2_4, -b_5+y_faux2_5, -b_6+y_faux2_6, -b_7+y_faux2_7, y_faux3_0-x3_0]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = a_0, y_faux1_1 = a_1, y_faux1_2 = a_2, y_faux1_3 = a_3, y_faux1_4 = a_4, y_faux1_5 = a_5, y_faux1_6 = a_6, y_faux1_7 = a_7, y_faux1_8 = a_8, y_faux1_9 = a_9, y_faux1_10 = a_10, y_faux1_11 = a_11, y_faux1_12 = a_12, y_faux1_13 = a_13, y_faux1_14 = a_14, y_faux2_0 = b_0, y_faux2_1 = b_1, y_faux2_2 = b_2, y_faux2_3 = b_3, y_faux2_4 = b_4, y_faux2_5 = b_5, y_faux2_6 = b_6, y_faux2_7 = b_7, y_faux2_8 = b_8, y_faux2_9 = b_9, y_faux2_10 = b_10, y_faux2_11 = b_11, y_faux2_12 = b_12, y_faux2_13 = b_13, y_faux2_14 = b_14, y_faux3_0 = x3_0]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability:  723190167600000000000000
Random sample for the outputs and inputs is generated from  [d = 499056980273638251603627, k3 = 99618127067424315817994, k4 = 132023165494383736823001, k5 = 657546909009942153401913, k6 = 432576252789177687113021, k7 = 463799610224795528670527, a_0 = 469028846221328636079233, b_0 = 560150808243417515527270, x1_0 = 546295791384810196425669, x2_0 = 410747684341102967251245, x3_0 = 429777587092863951439661, x4_0 = 40076651017325222317861, x5_0 = 53709354695292083848768]
The polynomial system widehat{E^t} contains  83 equations in  68  variables
             "new_logs/Tumor/transcendence_2_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [a, b, x3_1]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {a, b}
Algebraically independent parameters among derivatives: {x3_1}
	Adding ODEs: [diff(a(t),t) = 0, diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = a(t), y_faux2(t) = b(t)]
	New system: [diff(a(t),t) = 0, diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a(t)*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a(t)*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = a(t), y_faux2(t) = b(t)]

=== Input info ===
State variables:          [a(t), b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t), y_faux2(t)]
Input variables:          []
Parameters in equations:  [d, k3, k4, k5, k6, k7]
===================

memory used=557.0MB, alloc=183.8MB, time=5.43
memory used=672.1MB, alloc=183.8MB, time=6.53
memory used=773.4MB, alloc=183.8MB, time=7.42
	Adding new y-equations: [y_faux3_0 = x3_1]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-a_0, a_1, y_faux2_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a_0*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a_0-x3_0-x4_0)*x2_1+x2_0*(b_1*d+a_1-x3_1-x4_1))*k5-x1_1*k3+k4*x2_1-k6*x3_1-k6*x4_1+x2_2, -a_0*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a_0-x3_0-x4_0)*x2_2+(b_2*d+a_2-x3_2-x4_2)*x2_0+2*x2_1*(b_1*d+a_1-x3_1-x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, a_2, b_2, ((-a_1+x3_1)*x2_0-x2_1*(a_0-x3_0))*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a_0-x3_0-x4_0)*x2_3+(b_3*d+a_3-x3_3-x4_3)*x2_0+(3*b_2*d+3*a_2-3*x3_2-3*x4_2)*x2_1+3*x2_2*(b_1*d+a_1-x3_1-x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, a_3, b_3, ((x3_2-a_2)*x2_0+(2*x3_1-2*a_1)*x2_1-x2_2*(a_0-x3_0))*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a_0-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(a_4-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3+4*a_3)*x2_1+(-6*x3_2-6*x4_2+6*a_2)*x2_2-4*x2_3*(x3_1+x4_1-a_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, a_4, b_4, ((x3_3-a_3)*x2_0+(3*x3_2-3*a_2)*x2_1+(3*x3_1-3*a_1)*x2_2+x2_3*(-a_0+x3_0))*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(-x3_0-x4_0+a_0)*x2_5+(a_5-x3_5-x4_5)*x2_0+(5*a_4-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3+10*a_3)*x2_2+(-10*x3_2-10*x4_2+10*a_2)*x2_3-5*x2_4*(x3_1+x4_1-a_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, a_5, b_5, ((x3_4-a_4)*x2_0+(4*x3_3-4*a_3)*x2_1+(6*x3_2-6*a_2)*x2_2+(4*x3_1-4*a_1)*x2_3+x2_4*(-a_0+x3_0))*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(-x3_0-x4_0+a_0)*x2_6+(a_6-x3_6-x4_6)*x2_0+(6*a_5-6*x3_5-6*x4_5)*x2_1+(15*a_4-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3+20*a_3)*x2_3+(-15*x3_2-15*x4_2+15*a_2)*x2_4-6*x2_5*(x3_1+x4_1-a_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, a_6, b_6, ((x3_5-a_5)*x2_0+(5*x3_4-5*a_4)*x2_1+(10*x3_3-10*a_3)*x2_2+(10*x3_2-10*a_2)*x2_3+(5*x3_1-5*a_1)*x2_4+x2_5*(-a_0+x3_0))*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(-x3_0-x4_0+a_0)*x2_7+(a_7-x3_7-x4_7)*x2_0+(7*a_6-7*x3_6-7*x4_6)*x2_1+(21*a_5-21*x3_5-21*x4_5)*x2_2+(35*a_4-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3+35*a_3)*x2_4+(-21*x3_2-21*x4_2+21*a_2)*x2_5-7*x2_6*(x3_1+x4_1-a_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, a_7, b_7, ((x3_6-a_6)*x2_0+(6*x3_5-6*a_5)*x2_1+(15*x3_4-15*a_4)*x2_2+(20*x3_3-20*a_3)*x2_3+(15*x3_2-15*a_2)*x2_4+(6*x3_1-6*a_1)*x2_5+x2_6*(-a_0+x3_0))*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -a_1+y_faux1_1, -a_2+y_faux1_2, -a_3+y_faux1_3, -a_4+y_faux1_4, -a_5+y_faux1_5, -a_6+y_faux1_6, -a_7+y_faux1_7, -b_1+y_faux2_1, -b_2+y_faux2_2, -b_3+y_faux2_3, -b_4+y_faux2_4, -b_5+y_faux2_5, -b_6+y_faux2_6, -b_7+y_faux2_7, y_faux3_0-x3_1]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = a_0, y_faux1_1 = a_1, y_faux1_2 = a_2, y_faux1_3 = a_3, y_faux1_4 = a_4, y_faux1_5 = a_5, y_faux1_6 = a_6, y_faux1_7 = a_7, y_faux1_8 = a_8, y_faux1_9 = a_9, y_faux1_10 = a_10, y_faux1_11 = a_11, y_faux1_12 = a_12, y_faux1_13 = a_13, y_faux1_14 = a_14, y_faux2_0 = b_0, y_faux2_1 = b_1, y_faux2_2 = b_2, y_faux2_3 = b_3, y_faux2_4 = b_4, y_faux2_5 = b_5, y_faux2_6 = b_6, y_faux2_7 = b_7, y_faux2_8 = b_8, y_faux2_9 = b_9, y_faux2_10 = b_10, y_faux2_11 = b_11, y_faux2_12 = b_12, y_faux2_13 = b_13, y_faux2_14 = b_14, y_faux3_0 = x3_1]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability:  723190167600000000000000
Random sample for the outputs and inputs is generated from  [d = 309964054398491909130946, k3 = 238539972194041420567910, k4 = 723130599131426878409829, k5 = 172101417685237253950932, k6 = 314957909684921914626496, k7 = 397432442786967999294912, a_0 = 603122628332904448395051, b_0 = 571320202314528216986365, x1_0 = 715474571601306213470674, x2_0 = 696931664443082634274353, x3_0 = 254582946569554011861777, x4_0 = 701996539034591559675373, x5_0 = 692191562523652209873596]
The polynomial system widehat{E^t} contains  83 equations in  68  variables
             "new_logs/Tumor/transcendence_3_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [a, b, x3_2]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {a, b}
Algebraically independent parameters among derivatives: {x3_2}
	Adding ODEs: [diff(a(t),t) = 0, diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = a(t), y_faux2(t) = b(t)]
	New system: [diff(a(t),t) = 0, diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a(t)*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a(t)*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = a(t), y_faux2(t) = b(t)]

=== Input info ===
State variables:          [a(t), b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t), y_faux2(t)]
Input variables:          []
Parameters in equations:  [d, k3, k4, k5, k6, k7]
===================

memory used=886.1MB, alloc=183.8MB, time=8.59
memory used=1000.3MB, alloc=183.8MB, time=9.51
memory used=1100.5MB, alloc=183.8MB, time=10.27
	Adding new y-equations: [y_faux3_0 = x3_2]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-a_0, a_1, y_faux2_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a_0*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a_0-x3_0-x4_0)*x2_1+x2_0*(b_1*d+a_1-x3_1-x4_1))*k5-x1_1*k3+k4*x2_1-k6*x3_1-k6*x4_1+x2_2, -a_0*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a_0-x3_0-x4_0)*x2_2+(b_2*d+a_2-x3_2-x4_2)*x2_0+2*x2_1*(b_1*d+a_1-x3_1-x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, a_2, b_2, ((-a_1+x3_1)*x2_0-x2_1*(a_0-x3_0))*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a_0-x3_0-x4_0)*x2_3+(b_3*d+a_3-x3_3-x4_3)*x2_0+(3*b_2*d+3*a_2-3*x3_2-3*x4_2)*x2_1+3*x2_2*(b_1*d+a_1-x3_1-x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, a_3, b_3, ((x3_2-a_2)*x2_0+(2*x3_1-2*a_1)*x2_1-x2_2*(a_0-x3_0))*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a_0-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(a_4-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3+4*a_3)*x2_1+(-6*x3_2-6*x4_2+6*a_2)*x2_2-4*x2_3*(x3_1+x4_1-a_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, a_4, b_4, ((x3_3-a_3)*x2_0+(3*x3_2-3*a_2)*x2_1+(3*x3_1-3*a_1)*x2_2+x2_3*(-a_0+x3_0))*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(-x3_0-x4_0+a_0)*x2_5+(a_5-x3_5-x4_5)*x2_0+(5*a_4-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3+10*a_3)*x2_2+(-10*x3_2-10*x4_2+10*a_2)*x2_3-5*x2_4*(x3_1+x4_1-a_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, a_5, b_5, ((x3_4-a_4)*x2_0+(4*x3_3-4*a_3)*x2_1+(6*x3_2-6*a_2)*x2_2+(4*x3_1-4*a_1)*x2_3+x2_4*(-a_0+x3_0))*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(-x3_0-x4_0+a_0)*x2_6+(a_6-x3_6-x4_6)*x2_0+(6*a_5-6*x3_5-6*x4_5)*x2_1+(15*a_4-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3+20*a_3)*x2_3+(-15*x3_2-15*x4_2+15*a_2)*x2_4-6*x2_5*(x3_1+x4_1-a_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, a_6, b_6, ((x3_5-a_5)*x2_0+(5*x3_4-5*a_4)*x2_1+(10*x3_3-10*a_3)*x2_2+(10*x3_2-10*a_2)*x2_3+(5*x3_1-5*a_1)*x2_4+x2_5*(-a_0+x3_0))*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(-x3_0-x4_0+a_0)*x2_7+(a_7-x3_7-x4_7)*x2_0+(7*a_6-7*x3_6-7*x4_6)*x2_1+(21*a_5-21*x3_5-21*x4_5)*x2_2+(35*a_4-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3+35*a_3)*x2_4+(-21*x3_2-21*x4_2+21*a_2)*x2_5-7*x2_6*(x3_1+x4_1-a_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, a_7, b_7, ((x3_6-a_6)*x2_0+(6*x3_5-6*a_5)*x2_1+(15*x3_4-15*a_4)*x2_2+(20*x3_3-20*a_3)*x2_3+(15*x3_2-15*a_2)*x2_4+(6*x3_1-6*a_1)*x2_5+x2_6*(-a_0+x3_0))*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -a_1+y_faux1_1, -a_2+y_faux1_2, -a_3+y_faux1_3, -a_4+y_faux1_4, -a_5+y_faux1_5, -a_6+y_faux1_6, -a_7+y_faux1_7, -b_1+y_faux2_1, -b_2+y_faux2_2, -b_3+y_faux2_3, -b_4+y_faux2_4, -b_5+y_faux2_5, -b_6+y_faux2_6, -b_7+y_faux2_7, y_faux3_0-x3_2]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = a_0, y_faux1_1 = a_1, y_faux1_2 = a_2, y_faux1_3 = a_3, y_faux1_4 = a_4, y_faux1_5 = a_5, y_faux1_6 = a_6, y_faux1_7 = a_7, y_faux1_8 = a_8, y_faux1_9 = a_9, y_faux1_10 = a_10, y_faux1_11 = a_11, y_faux1_12 = a_12, y_faux1_13 = a_13, y_faux1_14 = a_14, y_faux2_0 = b_0, y_faux2_1 = b_1, y_faux2_2 = b_2, y_faux2_3 = b_3, y_faux2_4 = b_4, y_faux2_5 = b_5, y_faux2_6 = b_6, y_faux2_7 = b_7, y_faux2_8 = b_8, y_faux2_9 = b_9, y_faux2_10 = b_10, y_faux2_11 = b_11, y_faux2_12 = b_12, y_faux2_13 = b_13, y_faux2_14 = b_14, y_faux3_0 = x3_2]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability:  723190167600000000000000
Random sample for the outputs and inputs is generated from  [d = 136169414741077592852306, k3 = 202961721662095651409349, k4 = 423070180449407095628248, k5 = 420454968550740365109540, k6 = 641994573483992784866206, k7 = 263095548618249012204712, a_0 = 668644679788959001038445, b_0 = 71747927432221384831691, x1_0 = 588195927182186172325170, x2_0 = 332827719131675438446389, x3_0 = 9329948188007907383162, x4_0 = 275174610318134134924517, x5_0 = 173048759588953094072659]
The polynomial system widehat{E^t} contains  83 equations in  68  variables
             "new_logs/Tumor/transcendence_4_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [a, b, x3_3]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {a, b}
Algebraically independent parameters among derivatives: {x3_3}
	Adding ODEs: [diff(a(t),t) = 0, diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = a(t), y_faux2(t) = b(t)]
	New system: [diff(a(t),t) = 0, diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a(t)*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a(t)*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = a(t), y_faux2(t) = b(t)]

=== Input info ===
State variables:          [a(t), b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t), y_faux2(t)]
Input variables:          []
Parameters in equations:  [d, k3, k4, k5, k6, k7]
===================

memory used=1212.3MB, alloc=183.8MB, time=11.53
memory used=1312.7MB, alloc=183.8MB, time=12.30
	Adding new y-equations: [y_faux3_0 = x3_3]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-a_0, a_1, y_faux2_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a_0*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a_0-x3_0-x4_0)*x2_1+x2_0*(b_1*d+a_1-x3_1-x4_1))*k5-x1_1*k3+k4*x2_1-k6*x3_1-k6*x4_1+x2_2, -a_0*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a_0-x3_0-x4_0)*x2_2+(b_2*d+a_2-x3_2-x4_2)*x2_0+2*x2_1*(b_1*d+a_1-x3_1-x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, a_2, b_2, ((-a_1+x3_1)*x2_0-x2_1*(a_0-x3_0))*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a_0-x3_0-x4_0)*x2_3+(b_3*d+a_3-x3_3-x4_3)*x2_0+(3*b_2*d+3*a_2-3*x3_2-3*x4_2)*x2_1+3*x2_2*(b_1*d+a_1-x3_1-x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, a_3, b_3, ((x3_2-a_2)*x2_0+(2*x3_1-2*a_1)*x2_1-x2_2*(a_0-x3_0))*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a_0-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(a_4-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3+4*a_3)*x2_1+(-6*x3_2-6*x4_2+6*a_2)*x2_2-4*x2_3*(x3_1+x4_1-a_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, a_4, b_4, ((x3_3-a_3)*x2_0+(3*x3_2-3*a_2)*x2_1+(3*x3_1-3*a_1)*x2_2+x2_3*(-a_0+x3_0))*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(-x3_0-x4_0+a_0)*x2_5+(a_5-x3_5-x4_5)*x2_0+(5*a_4-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3+10*a_3)*x2_2+(-10*x3_2-10*x4_2+10*a_2)*x2_3-5*x2_4*(x3_1+x4_1-a_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, a_5, b_5, ((x3_4-a_4)*x2_0+(4*x3_3-4*a_3)*x2_1+(6*x3_2-6*a_2)*x2_2+(4*x3_1-4*a_1)*x2_3+x2_4*(-a_0+x3_0))*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(-x3_0-x4_0+a_0)*x2_6+(a_6-x3_6-x4_6)*x2_0+(6*a_5-6*x3_5-6*x4_5)*x2_1+(15*a_4-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3+20*a_3)*x2_3+(-15*x3_2-15*x4_2+15*a_2)*x2_4-6*x2_5*(x3_1+x4_1-a_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, a_6, b_6, ((x3_5-a_5)*x2_0+(5*x3_4-5*a_4)*x2_1+(10*x3_3-10*a_3)*x2_2+(10*x3_2-10*a_2)*x2_3+(5*x3_1-5*a_1)*x2_4+x2_5*(-a_0+x3_0))*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(-x3_0-x4_0+a_0)*x2_7+(a_7-x3_7-x4_7)*x2_0+(7*a_6-7*x3_6-7*x4_6)*x2_1+(21*a_5-21*x3_5-21*x4_5)*x2_2+(35*a_4-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3+35*a_3)*x2_4+(-21*x3_2-21*x4_2+21*a_2)*x2_5-7*x2_6*(x3_1+x4_1-a_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, a_7, b_7, ((x3_6-a_6)*x2_0+(6*x3_5-6*a_5)*x2_1+(15*x3_4-15*a_4)*x2_2+(20*x3_3-20*a_3)*x2_3+(15*x3_2-15*a_2)*x2_4+(6*x3_1-6*a_1)*x2_5+x2_6*(-a_0+x3_0))*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -a_1+y_faux1_1, -a_2+y_faux1_2, -a_3+y_faux1_3, -a_4+y_faux1_4, -a_5+y_faux1_5, -a_6+y_faux1_6, -a_7+y_faux1_7, -b_1+y_faux2_1, -b_2+y_faux2_2, -b_3+y_faux2_3, -b_4+y_faux2_4, -b_5+y_faux2_5, -b_6+y_faux2_6, -b_7+y_faux2_7, y_faux3_0-x3_3]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = a_0, y_faux1_1 = a_1, y_faux1_2 = a_2, y_faux1_3 = a_3, y_faux1_4 = a_4, y_faux1_5 = a_5, y_faux1_6 = a_6, y_faux1_7 = a_7, y_faux1_8 = a_8, y_faux1_9 = a_9, y_faux1_10 = a_10, y_faux1_11 = a_11, y_faux1_12 = a_12, y_faux1_13 = a_13, y_faux1_14 = a_14, y_faux2_0 = b_0, y_faux2_1 = b_1, y_faux2_2 = b_2, y_faux2_3 = b_3, y_faux2_4 = b_4, y_faux2_5 = b_5, y_faux2_6 = b_6, y_faux2_7 = b_7, y_faux2_8 = b_8, y_faux2_9 = b_9, y_faux2_10 = b_10, y_faux2_11 = b_11, y_faux2_12 = b_12, y_faux2_13 = b_13, y_faux2_14 = b_14, y_faux3_0 = x3_3]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability:  723190167600000000000000
Random sample for the outputs and inputs is generated from  [d = 176262325781415739676820, k3 = 620503982308144506676101, k4 = 104780094511618118092531, k5 = 124529318079652945536192, k6 = 223127541532504637891529, k7 = 679650376499509877700568, a_0 = 610459418268967560784379, b_0 = 102454973514806132558941, x1_0 = 720909710527327821151123, x2_0 = 384399361094474135411250, x3_0 = 683369978883129200500504, x4_0 = 285723623404599455575032, x5_0 = 149439562532227632922565]
The polynomial system widehat{E^t} contains  83 equations in  68  variables
             "new_logs/Tumor/transcendence_5_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [a, b, x3_4]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {a, b}
Algebraically independent parameters among derivatives: {x3_4}
	Adding ODEs: [diff(a(t),t) = 0, diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = a(t), y_faux2(t) = b(t)]
	New system: [diff(a(t),t) = 0, diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a(t)*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a(t)*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = a(t), y_faux2(t) = b(t)]

=== Input info ===
State variables:          [a(t), b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t), y_faux2(t)]
Input variables:          []
Parameters in equations:  [d, k3, k4, k5, k6, k7]
===================

memory used=1431.6MB, alloc=183.8MB, time=13.42
memory used=1551.2MB, alloc=183.8MB, time=14.50
memory used=1651.7MB, alloc=183.8MB, time=15.27
	Adding new y-equations: [y_faux3_0 = x3_4]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-a_0, a_1, y_faux2_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a_0*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a_0-x3_0-x4_0)*x2_1+x2_0*(b_1*d+a_1-x3_1-x4_1))*k5-x1_1*k3+k4*x2_1-k6*x3_1-k6*x4_1+x2_2, -a_0*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a_0-x3_0-x4_0)*x2_2+(b_2*d+a_2-x3_2-x4_2)*x2_0+2*x2_1*(b_1*d+a_1-x3_1-x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, a_2, b_2, ((-a_1+x3_1)*x2_0-x2_1*(a_0-x3_0))*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a_0-x3_0-x4_0)*x2_3+(b_3*d+a_3-x3_3-x4_3)*x2_0+(3*b_2*d+3*a_2-3*x3_2-3*x4_2)*x2_1+3*x2_2*(b_1*d+a_1-x3_1-x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, a_3, b_3, ((x3_2-a_2)*x2_0+(2*x3_1-2*a_1)*x2_1-x2_2*(a_0-x3_0))*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a_0-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(a_4-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3+4*a_3)*x2_1+(-6*x3_2-6*x4_2+6*a_2)*x2_2-4*x2_3*(x3_1+x4_1-a_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, a_4, b_4, ((x3_3-a_3)*x2_0+(3*x3_2-3*a_2)*x2_1+(3*x3_1-3*a_1)*x2_2+x2_3*(-a_0+x3_0))*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(-x3_0-x4_0+a_0)*x2_5+(a_5-x3_5-x4_5)*x2_0+(5*a_4-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3+10*a_3)*x2_2+(-10*x3_2-10*x4_2+10*a_2)*x2_3-5*x2_4*(x3_1+x4_1-a_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, a_5, b_5, ((x3_4-a_4)*x2_0+(4*x3_3-4*a_3)*x2_1+(6*x3_2-6*a_2)*x2_2+(4*x3_1-4*a_1)*x2_3+x2_4*(-a_0+x3_0))*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(-x3_0-x4_0+a_0)*x2_6+(a_6-x3_6-x4_6)*x2_0+(6*a_5-6*x3_5-6*x4_5)*x2_1+(15*a_4-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3+20*a_3)*x2_3+(-15*x3_2-15*x4_2+15*a_2)*x2_4-6*x2_5*(x3_1+x4_1-a_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, a_6, b_6, ((x3_5-a_5)*x2_0+(5*x3_4-5*a_4)*x2_1+(10*x3_3-10*a_3)*x2_2+(10*x3_2-10*a_2)*x2_3+(5*x3_1-5*a_1)*x2_4+x2_5*(-a_0+x3_0))*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(-x3_0-x4_0+a_0)*x2_7+(a_7-x3_7-x4_7)*x2_0+(7*a_6-7*x3_6-7*x4_6)*x2_1+(21*a_5-21*x3_5-21*x4_5)*x2_2+(35*a_4-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3+35*a_3)*x2_4+(-21*x3_2-21*x4_2+21*a_2)*x2_5-7*x2_6*(x3_1+x4_1-a_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, a_7, b_7, ((x3_6-a_6)*x2_0+(6*x3_5-6*a_5)*x2_1+(15*x3_4-15*a_4)*x2_2+(20*x3_3-20*a_3)*x2_3+(15*x3_2-15*a_2)*x2_4+(6*x3_1-6*a_1)*x2_5+x2_6*(-a_0+x3_0))*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -a_1+y_faux1_1, -a_2+y_faux1_2, -a_3+y_faux1_3, -a_4+y_faux1_4, -a_5+y_faux1_5, -a_6+y_faux1_6, -a_7+y_faux1_7, -b_1+y_faux2_1, -b_2+y_faux2_2, -b_3+y_faux2_3, -b_4+y_faux2_4, -b_5+y_faux2_5, -b_6+y_faux2_6, -b_7+y_faux2_7, y_faux3_0-x3_4]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = a_0, y_faux1_1 = a_1, y_faux1_2 = a_2, y_faux1_3 = a_3, y_faux1_4 = a_4, y_faux1_5 = a_5, y_faux1_6 = a_6, y_faux1_7 = a_7, y_faux1_8 = a_8, y_faux1_9 = a_9, y_faux1_10 = a_10, y_faux1_11 = a_11, y_faux1_12 = a_12, y_faux1_13 = a_13, y_faux1_14 = a_14, y_faux2_0 = b_0, y_faux2_1 = b_1, y_faux2_2 = b_2, y_faux2_3 = b_3, y_faux2_4 = b_4, y_faux2_5 = b_5, y_faux2_6 = b_6, y_faux2_7 = b_7, y_faux2_8 = b_8, y_faux2_9 = b_9, y_faux2_10 = b_10, y_faux2_11 = b_11, y_faux2_12 = b_12, y_faux2_13 = b_13, y_faux2_14 = b_14, y_faux3_0 = x3_4]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability:  723190167600000000000000
Random sample for the outputs and inputs is generated from  [d = 614165898776608485991419, k3 = 497846196082980386259609, k4 = 140726219549747840099581, k5 = 614041828521746088382731, k6 = 457336608179540072760893, k7 = 721602343724829422988986, a_0 = 645501255783425491683550, b_0 = 614474781343069066829122, x1_0 = 120221076829236300756870, x2_0 = 286433424217350028501052, x3_0 = 385662428122334243285512, x4_0 = 44029477509019010909845, x5_0 = 668975508466614584165410]
The polynomial system widehat{E^t} contains  83 equations in  68  variables
             "new_logs/Tumor/transcendence_6_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [a, b, x3_5]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {a, b}
Algebraically independent parameters among derivatives: {x3_5}
	Adding ODEs: [diff(a(t),t) = 0, diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = a(t), y_faux2(t) = b(t)]
	New system: [diff(a(t),t) = 0, diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a(t)*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a(t)*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = a(t), y_faux2(t) = b(t)]

=== Input info ===
State variables:          [a(t), b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t), y_faux2(t)]
Input variables:          []
Parameters in equations:  [d, k3, k4, k5, k6, k7]
===================

memory used=1764.7MB, alloc=183.8MB, time=16.45
memory used=1868.7MB, alloc=183.8MB, time=17.33
	Adding new y-equations: [y_faux3_0 = x3_5]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-a_0, a_1, y_faux2_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a_0*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a_0-x3_0-x4_0)*x2_1+x2_0*(b_1*d+a_1-x3_1-x4_1))*k5-x1_1*k3+k4*x2_1-k6*x3_1-k6*x4_1+x2_2, -a_0*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a_0-x3_0-x4_0)*x2_2+(b_2*d+a_2-x3_2-x4_2)*x2_0+2*x2_1*(b_1*d+a_1-x3_1-x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, a_2, b_2, ((-a_1+x3_1)*x2_0-x2_1*(a_0-x3_0))*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a_0-x3_0-x4_0)*x2_3+(b_3*d+a_3-x3_3-x4_3)*x2_0+(3*b_2*d+3*a_2-3*x3_2-3*x4_2)*x2_1+3*x2_2*(b_1*d+a_1-x3_1-x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, a_3, b_3, ((x3_2-a_2)*x2_0+(2*x3_1-2*a_1)*x2_1-x2_2*(a_0-x3_0))*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a_0-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(a_4-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3+4*a_3)*x2_1+(-6*x3_2-6*x4_2+6*a_2)*x2_2-4*x2_3*(x3_1+x4_1-a_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, a_4, b_4, ((x3_3-a_3)*x2_0+(3*x3_2-3*a_2)*x2_1+(3*x3_1-3*a_1)*x2_2+x2_3*(-a_0+x3_0))*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(-x3_0-x4_0+a_0)*x2_5+(a_5-x3_5-x4_5)*x2_0+(5*a_4-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3+10*a_3)*x2_2+(-10*x3_2-10*x4_2+10*a_2)*x2_3-5*x2_4*(x3_1+x4_1-a_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, a_5, b_5, ((x3_4-a_4)*x2_0+(4*x3_3-4*a_3)*x2_1+(6*x3_2-6*a_2)*x2_2+(4*x3_1-4*a_1)*x2_3+x2_4*(-a_0+x3_0))*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(-x3_0-x4_0+a_0)*x2_6+(a_6-x3_6-x4_6)*x2_0+(6*a_5-6*x3_5-6*x4_5)*x2_1+(15*a_4-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3+20*a_3)*x2_3+(-15*x3_2-15*x4_2+15*a_2)*x2_4-6*x2_5*(x3_1+x4_1-a_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, a_6, b_6, ((x3_5-a_5)*x2_0+(5*x3_4-5*a_4)*x2_1+(10*x3_3-10*a_3)*x2_2+(10*x3_2-10*a_2)*x2_3+(5*x3_1-5*a_1)*x2_4+x2_5*(-a_0+x3_0))*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(-x3_0-x4_0+a_0)*x2_7+(a_7-x3_7-x4_7)*x2_0+(7*a_6-7*x3_6-7*x4_6)*x2_1+(21*a_5-21*x3_5-21*x4_5)*x2_2+(35*a_4-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3+35*a_3)*x2_4+(-21*x3_2-21*x4_2+21*a_2)*x2_5-7*x2_6*(x3_1+x4_1-a_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, a_7, b_7, ((x3_6-a_6)*x2_0+(6*x3_5-6*a_5)*x2_1+(15*x3_4-15*a_4)*x2_2+(20*x3_3-20*a_3)*x2_3+(15*x3_2-15*a_2)*x2_4+(6*x3_1-6*a_1)*x2_5+x2_6*(-a_0+x3_0))*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -a_1+y_faux1_1, -a_2+y_faux1_2, -a_3+y_faux1_3, -a_4+y_faux1_4, -a_5+y_faux1_5, -a_6+y_faux1_6, -a_7+y_faux1_7, -b_1+y_faux2_1, -b_2+y_faux2_2, -b_3+y_faux2_3, -b_4+y_faux2_4, -b_5+y_faux2_5, -b_6+y_faux2_6, -b_7+y_faux2_7, y_faux3_0-x3_5]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = a_0, y_faux1_1 = a_1, y_faux1_2 = a_2, y_faux1_3 = a_3, y_faux1_4 = a_4, y_faux1_5 = a_5, y_faux1_6 = a_6, y_faux1_7 = a_7, y_faux1_8 = a_8, y_faux1_9 = a_9, y_faux1_10 = a_10, y_faux1_11 = a_11, y_faux1_12 = a_12, y_faux1_13 = a_13, y_faux1_14 = a_14, y_faux2_0 = b_0, y_faux2_1 = b_1, y_faux2_2 = b_2, y_faux2_3 = b_3, y_faux2_4 = b_4, y_faux2_5 = b_5, y_faux2_6 = b_6, y_faux2_7 = b_7, y_faux2_8 = b_8, y_faux2_9 = b_9, y_faux2_10 = b_10, y_faux2_11 = b_11, y_faux2_12 = b_12, y_faux2_13 = b_13, y_faux2_14 = b_14, y_faux3_0 = x3_5]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability:  723190167600000000000000
Random sample for the outputs and inputs is generated from  [d = 154491230244533490903501, k3 = 709340445471165445855942, k4 = 541229193738716169287673, k5 = 325539612845024925724966, k6 = 691061777988008615477320, k7 = 485159667201308145857967, a_0 = 609702103353877629221122, b_0 = 487974176195593412336501, x1_0 = 68417793505906540697420, x2_0 = 375032154245114731937656, x3_0 = 244032212599646475053502, x4_0 = 352647040972841476804622, x5_0 = 251610969352221316000673]
The polynomial system widehat{E^t} contains  83 equations in  68  variables
             "new_logs/Tumor/transcendence_7_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [a, b, x3_6]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {a, b}
Algebraically independent parameters among derivatives: {x3_6}
	Adding ODEs: [diff(a(t),t) = 0, diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = a(t), y_faux2(t) = b(t)]
	New system: [diff(a(t),t) = 0, diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a(t)*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a(t)*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = a(t), y_faux2(t) = b(t)]

=== Input info ===
State variables:          [a(t), b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t), y_faux2(t)]
Input variables:          []
Parameters in equations:  [d, k3, k4, k5, k6, k7]
===================

memory used=1992.0MB, alloc=183.8MB, time=18.31
memory used=2107.5MB, alloc=183.8MB, time=19.42
memory used=2207.6MB, alloc=183.8MB, time=20.18
	Adding new y-equations: [y_faux3_0 = x3_6]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-a_0, a_1, y_faux2_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a_0*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a_0-x3_0-x4_0)*x2_1+x2_0*(b_1*d+a_1-x3_1-x4_1))*k5-x1_1*k3+k4*x2_1-k6*x3_1-k6*x4_1+x2_2, -a_0*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a_0-x3_0-x4_0)*x2_2+(b_2*d+a_2-x3_2-x4_2)*x2_0+2*x2_1*(b_1*d+a_1-x3_1-x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, a_2, b_2, ((-a_1+x3_1)*x2_0-x2_1*(a_0-x3_0))*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a_0-x3_0-x4_0)*x2_3+(b_3*d+a_3-x3_3-x4_3)*x2_0+(3*b_2*d+3*a_2-3*x3_2-3*x4_2)*x2_1+3*x2_2*(b_1*d+a_1-x3_1-x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, a_3, b_3, ((x3_2-a_2)*x2_0+(2*x3_1-2*a_1)*x2_1-x2_2*(a_0-x3_0))*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a_0-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(a_4-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3+4*a_3)*x2_1+(-6*x3_2-6*x4_2+6*a_2)*x2_2-4*x2_3*(x3_1+x4_1-a_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, a_4, b_4, ((x3_3-a_3)*x2_0+(3*x3_2-3*a_2)*x2_1+(3*x3_1-3*a_1)*x2_2+x2_3*(-a_0+x3_0))*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(-x3_0-x4_0+a_0)*x2_5+(a_5-x3_5-x4_5)*x2_0+(5*a_4-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3+10*a_3)*x2_2+(-10*x3_2-10*x4_2+10*a_2)*x2_3-5*x2_4*(x3_1+x4_1-a_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, a_5, b_5, ((x3_4-a_4)*x2_0+(4*x3_3-4*a_3)*x2_1+(6*x3_2-6*a_2)*x2_2+(4*x3_1-4*a_1)*x2_3+x2_4*(-a_0+x3_0))*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(-x3_0-x4_0+a_0)*x2_6+(a_6-x3_6-x4_6)*x2_0+(6*a_5-6*x3_5-6*x4_5)*x2_1+(15*a_4-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3+20*a_3)*x2_3+(-15*x3_2-15*x4_2+15*a_2)*x2_4-6*x2_5*(x3_1+x4_1-a_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, a_6, b_6, ((x3_5-a_5)*x2_0+(5*x3_4-5*a_4)*x2_1+(10*x3_3-10*a_3)*x2_2+(10*x3_2-10*a_2)*x2_3+(5*x3_1-5*a_1)*x2_4+x2_5*(-a_0+x3_0))*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(-x3_0-x4_0+a_0)*x2_7+(a_7-x3_7-x4_7)*x2_0+(7*a_6-7*x3_6-7*x4_6)*x2_1+(21*a_5-21*x3_5-21*x4_5)*x2_2+(35*a_4-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3+35*a_3)*x2_4+(-21*x3_2-21*x4_2+21*a_2)*x2_5-7*x2_6*(x3_1+x4_1-a_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, a_7, b_7, ((x3_6-a_6)*x2_0+(6*x3_5-6*a_5)*x2_1+(15*x3_4-15*a_4)*x2_2+(20*x3_3-20*a_3)*x2_3+(15*x3_2-15*a_2)*x2_4+(6*x3_1-6*a_1)*x2_5+x2_6*(-a_0+x3_0))*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -a_1+y_faux1_1, -a_2+y_faux1_2, -a_3+y_faux1_3, -a_4+y_faux1_4, -a_5+y_faux1_5, -a_6+y_faux1_6, -a_7+y_faux1_7, -b_1+y_faux2_1, -b_2+y_faux2_2, -b_3+y_faux2_3, -b_4+y_faux2_4, -b_5+y_faux2_5, -b_6+y_faux2_6, -b_7+y_faux2_7, y_faux3_0-x3_6]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = a_0, y_faux1_1 = a_1, y_faux1_2 = a_2, y_faux1_3 = a_3, y_faux1_4 = a_4, y_faux1_5 = a_5, y_faux1_6 = a_6, y_faux1_7 = a_7, y_faux1_8 = a_8, y_faux1_9 = a_9, y_faux1_10 = a_10, y_faux1_11 = a_11, y_faux1_12 = a_12, y_faux1_13 = a_13, y_faux1_14 = a_14, y_faux2_0 = b_0, y_faux2_1 = b_1, y_faux2_2 = b_2, y_faux2_3 = b_3, y_faux2_4 = b_4, y_faux2_5 = b_5, y_faux2_6 = b_6, y_faux2_7 = b_7, y_faux2_8 = b_8, y_faux2_9 = b_9, y_faux2_10 = b_10, y_faux2_11 = b_11, y_faux2_12 = b_12, y_faux2_13 = b_13, y_faux2_14 = b_14, y_faux3_0 = x3_6]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability:  723190167600000000000000
Random sample for the outputs and inputs is generated from  [d = 652314046406203241373161, k3 = 324835421827410665263239, k4 = 302963302691932926892967, k5 = 361672222144198246258332, k6 = 657777611408915740613374, k7 = 650201090847468944664152, a_0 = 275020133734774687817161, b_0 = 311681131982779587304921, x1_0 = 657159529385545554991110, x2_0 = 648793533417660609327356, x3_0 = 50603611557471508101685, x4_0 = 663320357067395378742134, x5_0 = 476784728201975959981468]
The polynomial system widehat{E^t} contains  83 equations in  68  variables
             "new_logs/Tumor/transcendence_8_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [a, b, x3_7]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {a, b}
Algebraically independent parameters among derivatives: {x3_7}
	Adding ODEs: [diff(a(t),t) = 0, diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = a(t), y_faux2(t) = b(t)]
	New system: [diff(a(t),t) = 0, diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a(t)*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a(t)*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = a(t), y_faux2(t) = b(t)]

=== Input info ===
State variables:          [a(t), b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t), y_faux2(t)]
Input variables:          []
Parameters in equations:  [d, k3, k4, k5, k6, k7]
===================

memory used=2322.3MB, alloc=183.8MB, time=21.38
memory used=2439.4MB, alloc=183.8MB, time=22.32
memory used=2539.8MB, alloc=183.8MB, time=23.08
	Adding new y-equations: [y_faux3_0 = x3_7]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-a_0, a_1, y_faux2_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a_0*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a_0-x3_0-x4_0)*x2_1+x2_0*(b_1*d+a_1-x3_1-x4_1))*k5-x1_1*k3+k4*x2_1-k6*x3_1-k6*x4_1+x2_2, -a_0*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a_0-x3_0-x4_0)*x2_2+(b_2*d+a_2-x3_2-x4_2)*x2_0+2*x2_1*(b_1*d+a_1-x3_1-x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, a_2, b_2, ((-a_1+x3_1)*x2_0-x2_1*(a_0-x3_0))*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a_0-x3_0-x4_0)*x2_3+(b_3*d+a_3-x3_3-x4_3)*x2_0+(3*b_2*d+3*a_2-3*x3_2-3*x4_2)*x2_1+3*x2_2*(b_1*d+a_1-x3_1-x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, a_3, b_3, ((x3_2-a_2)*x2_0+(2*x3_1-2*a_1)*x2_1-x2_2*(a_0-x3_0))*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a_0-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(a_4-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3+4*a_3)*x2_1+(-6*x3_2-6*x4_2+6*a_2)*x2_2-4*x2_3*(x3_1+x4_1-a_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, a_4, b_4, ((x3_3-a_3)*x2_0+(3*x3_2-3*a_2)*x2_1+(3*x3_1-3*a_1)*x2_2+x2_3*(-a_0+x3_0))*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(-x3_0-x4_0+a_0)*x2_5+(a_5-x3_5-x4_5)*x2_0+(5*a_4-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3+10*a_3)*x2_2+(-10*x3_2-10*x4_2+10*a_2)*x2_3-5*x2_4*(x3_1+x4_1-a_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, a_5, b_5, ((x3_4-a_4)*x2_0+(4*x3_3-4*a_3)*x2_1+(6*x3_2-6*a_2)*x2_2+(4*x3_1-4*a_1)*x2_3+x2_4*(-a_0+x3_0))*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(-x3_0-x4_0+a_0)*x2_6+(a_6-x3_6-x4_6)*x2_0+(6*a_5-6*x3_5-6*x4_5)*x2_1+(15*a_4-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3+20*a_3)*x2_3+(-15*x3_2-15*x4_2+15*a_2)*x2_4-6*x2_5*(x3_1+x4_1-a_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, a_6, b_6, ((x3_5-a_5)*x2_0+(5*x3_4-5*a_4)*x2_1+(10*x3_3-10*a_3)*x2_2+(10*x3_2-10*a_2)*x2_3+(5*x3_1-5*a_1)*x2_4+x2_5*(-a_0+x3_0))*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(-x3_0-x4_0+a_0)*x2_7+(a_7-x3_7-x4_7)*x2_0+(7*a_6-7*x3_6-7*x4_6)*x2_1+(21*a_5-21*x3_5-21*x4_5)*x2_2+(35*a_4-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3+35*a_3)*x2_4+(-21*x3_2-21*x4_2+21*a_2)*x2_5-7*x2_6*(x3_1+x4_1-a_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, a_7, b_7, ((x3_6-a_6)*x2_0+(6*x3_5-6*a_5)*x2_1+(15*x3_4-15*a_4)*x2_2+(20*x3_3-20*a_3)*x2_3+(15*x3_2-15*a_2)*x2_4+(6*x3_1-6*a_1)*x2_5+x2_6*(-a_0+x3_0))*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -a_1+y_faux1_1, -a_2+y_faux1_2, -a_3+y_faux1_3, -a_4+y_faux1_4, -a_5+y_faux1_5, -a_6+y_faux1_6, -a_7+y_faux1_7, -b_1+y_faux2_1, -b_2+y_faux2_2, -b_3+y_faux2_3, -b_4+y_faux2_4, -b_5+y_faux2_5, -b_6+y_faux2_6, -b_7+y_faux2_7, y_faux3_0-x3_7]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = a_0, y_faux1_1 = a_1, y_faux1_2 = a_2, y_faux1_3 = a_3, y_faux1_4 = a_4, y_faux1_5 = a_5, y_faux1_6 = a_6, y_faux1_7 = a_7, y_faux1_8 = a_8, y_faux1_9 = a_9, y_faux1_10 = a_10, y_faux1_11 = a_11, y_faux1_12 = a_12, y_faux1_13 = a_13, y_faux1_14 = a_14, y_faux2_0 = b_0, y_faux2_1 = b_1, y_faux2_2 = b_2, y_faux2_3 = b_3, y_faux2_4 = b_4, y_faux2_5 = b_5, y_faux2_6 = b_6, y_faux2_7 = b_7, y_faux2_8 = b_8, y_faux2_9 = b_9, y_faux2_10 = b_10, y_faux2_11 = b_11, y_faux2_12 = b_12, y_faux2_13 = b_13, y_faux2_14 = b_14, y_faux3_0 = x3_7]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability:  723190167600000000000000
Random sample for the outputs and inputs is generated from  [d = 485261904400607294771036, k3 = 677162388740982132322506, k4 = 639882256067970319236306, k5 = 694781044671366718360394, k6 = 204227073295714070836287, k7 = 47034129508067537350492, a_0 = 331188214171242242913124, b_0 = 238715410042885395087027, x1_0 = 407270715672002220653619, x2_0 = 624371840401271657985401, x3_0 = 326244866408752346217968, x4_0 = 653633898934277523526419, x5_0 = 185550123200471585900469]
The polynomial system widehat{E^t} contains  83 equations in  68  variables
             "new_logs/Tumor/transcendence_9_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [a, b, x4(0)]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {a, b}
Algebraically independent parameters among derivatives: {x4(0)}
	Adding ODEs: [diff(a(t),t) = 0, diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = a(t), y_faux2(t) = b(t)]
	New system: [diff(a(t),t) = 0, diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a(t)*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a(t)*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = a(t), y_faux2(t) = b(t)]

=== Input info ===
State variables:          [a(t), b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t), y_faux2(t)]
Input variables:          []
Parameters in equations:  [d, k3, k4, k5, k6, k7]
===================

memory used=2655.2MB, alloc=183.8MB, time=24.36
memory used=2755.9MB, alloc=183.8MB, time=25.12
	Adding new y-equations: [y_faux3_0 = x4_0]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-a_0, a_1, y_faux2_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a_0*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a_0-x3_0-x4_0)*x2_1+x2_0*(b_1*d+a_1-x3_1-x4_1))*k5-x1_1*k3+k4*x2_1-k6*x3_1-k6*x4_1+x2_2, -a_0*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a_0-x3_0-x4_0)*x2_2+(b_2*d+a_2-x3_2-x4_2)*x2_0+2*x2_1*(b_1*d+a_1-x3_1-x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, a_2, b_2, ((-a_1+x3_1)*x2_0-x2_1*(a_0-x3_0))*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a_0-x3_0-x4_0)*x2_3+(b_3*d+a_3-x3_3-x4_3)*x2_0+(3*b_2*d+3*a_2-3*x3_2-3*x4_2)*x2_1+3*x2_2*(b_1*d+a_1-x3_1-x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, a_3, b_3, ((x3_2-a_2)*x2_0+(2*x3_1-2*a_1)*x2_1-x2_2*(a_0-x3_0))*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a_0-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(a_4-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3+4*a_3)*x2_1+(-6*x3_2-6*x4_2+6*a_2)*x2_2-4*x2_3*(x3_1+x4_1-a_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, a_4, b_4, ((x3_3-a_3)*x2_0+(3*x3_2-3*a_2)*x2_1+(3*x3_1-3*a_1)*x2_2+x2_3*(-a_0+x3_0))*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(-x3_0-x4_0+a_0)*x2_5+(a_5-x3_5-x4_5)*x2_0+(5*a_4-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3+10*a_3)*x2_2+(-10*x3_2-10*x4_2+10*a_2)*x2_3-5*x2_4*(x3_1+x4_1-a_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, a_5, b_5, ((x3_4-a_4)*x2_0+(4*x3_3-4*a_3)*x2_1+(6*x3_2-6*a_2)*x2_2+(4*x3_1-4*a_1)*x2_3+x2_4*(-a_0+x3_0))*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(-x3_0-x4_0+a_0)*x2_6+(a_6-x3_6-x4_6)*x2_0+(6*a_5-6*x3_5-6*x4_5)*x2_1+(15*a_4-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3+20*a_3)*x2_3+(-15*x3_2-15*x4_2+15*a_2)*x2_4-6*x2_5*(x3_1+x4_1-a_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, a_6, b_6, ((x3_5-a_5)*x2_0+(5*x3_4-5*a_4)*x2_1+(10*x3_3-10*a_3)*x2_2+(10*x3_2-10*a_2)*x2_3+(5*x3_1-5*a_1)*x2_4+x2_5*(-a_0+x3_0))*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(-x3_0-x4_0+a_0)*x2_7+(a_7-x3_7-x4_7)*x2_0+(7*a_6-7*x3_6-7*x4_6)*x2_1+(21*a_5-21*x3_5-21*x4_5)*x2_2+(35*a_4-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3+35*a_3)*x2_4+(-21*x3_2-21*x4_2+21*a_2)*x2_5-7*x2_6*(x3_1+x4_1-a_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, a_7, b_7, ((x3_6-a_6)*x2_0+(6*x3_5-6*a_5)*x2_1+(15*x3_4-15*a_4)*x2_2+(20*x3_3-20*a_3)*x2_3+(15*x3_2-15*a_2)*x2_4+(6*x3_1-6*a_1)*x2_5+x2_6*(-a_0+x3_0))*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -a_1+y_faux1_1, -a_2+y_faux1_2, -a_3+y_faux1_3, -a_4+y_faux1_4, -a_5+y_faux1_5, -a_6+y_faux1_6, -a_7+y_faux1_7, -b_1+y_faux2_1, -b_2+y_faux2_2, -b_3+y_faux2_3, -b_4+y_faux2_4, -b_5+y_faux2_5, -b_6+y_faux2_6, -b_7+y_faux2_7, y_faux3_0-x4_0]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = a_0, y_faux1_1 = a_1, y_faux1_2 = a_2, y_faux1_3 = a_3, y_faux1_4 = a_4, y_faux1_5 = a_5, y_faux1_6 = a_6, y_faux1_7 = a_7, y_faux1_8 = a_8, y_faux1_9 = a_9, y_faux1_10 = a_10, y_faux1_11 = a_11, y_faux1_12 = a_12, y_faux1_13 = a_13, y_faux1_14 = a_14, y_faux2_0 = b_0, y_faux2_1 = b_1, y_faux2_2 = b_2, y_faux2_3 = b_3, y_faux2_4 = b_4, y_faux2_5 = b_5, y_faux2_6 = b_6, y_faux2_7 = b_7, y_faux2_8 = b_8, y_faux2_9 = b_9, y_faux2_10 = b_10, y_faux2_11 = b_11, y_faux2_12 = b_12, y_faux2_13 = b_13, y_faux2_14 = b_14, y_faux3_0 = x4_0]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability:  723190167600000000000000
Random sample for the outputs and inputs is generated from  [d = 437027580684196267463305, k3 = 597768894079882842319572, k4 = 35046798930178827392055, k5 = 421230911626621954398332, k6 = 665785611306486344090138, k7 = 210882291932237204607291, a_0 = 638192420691463800897966, b_0 = 114069792130500438630285, x1_0 = 13030169863134272090797, x2_0 = 87180891733931898180446, x3_0 = 659843241941762775629890, x4_0 = 216527874505114525798868, x5_0 = 378780107669181378247671]
The polynomial system widehat{E^t} contains  83 equations in  68  variables
            "new_logs/Tumor/transcendence_10_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [a, b, x4_1]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {a, b}
Algebraically independent parameters among derivatives: {x4_1}
	Adding ODEs: [diff(a(t),t) = 0, diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = a(t), y_faux2(t) = b(t)]
	New system: [diff(a(t),t) = 0, diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a(t)*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a(t)*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = a(t), y_faux2(t) = b(t)]

=== Input info ===
State variables:          [a(t), b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t), y_faux2(t)]
Input variables:          []
Parameters in equations:  [d, k3, k4, k5, k6, k7]
===================

memory used=2876.0MB, alloc=183.8MB, time=26.29
memory used=3000.6MB, alloc=183.8MB, time=27.34
memory used=3101.2MB, alloc=183.8MB, time=28.12
	Adding new y-equations: [y_faux3_0 = x4_1]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-a_0, a_1, y_faux2_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a_0*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a_0-x3_0-x4_0)*x2_1+x2_0*(b_1*d+a_1-x3_1-x4_1))*k5-x1_1*k3+k4*x2_1-k6*x3_1-k6*x4_1+x2_2, -a_0*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a_0-x3_0-x4_0)*x2_2+(b_2*d+a_2-x3_2-x4_2)*x2_0+2*x2_1*(b_1*d+a_1-x3_1-x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, a_2, b_2, ((-a_1+x3_1)*x2_0-x2_1*(a_0-x3_0))*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a_0-x3_0-x4_0)*x2_3+(b_3*d+a_3-x3_3-x4_3)*x2_0+(3*b_2*d+3*a_2-3*x3_2-3*x4_2)*x2_1+3*x2_2*(b_1*d+a_1-x3_1-x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, a_3, b_3, ((x3_2-a_2)*x2_0+(2*x3_1-2*a_1)*x2_1-x2_2*(a_0-x3_0))*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a_0-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(a_4-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3+4*a_3)*x2_1+(-6*x3_2-6*x4_2+6*a_2)*x2_2-4*x2_3*(x3_1+x4_1-a_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, a_4, b_4, ((x3_3-a_3)*x2_0+(3*x3_2-3*a_2)*x2_1+(3*x3_1-3*a_1)*x2_2+x2_3*(-a_0+x3_0))*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(-x3_0-x4_0+a_0)*x2_5+(a_5-x3_5-x4_5)*x2_0+(5*a_4-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3+10*a_3)*x2_2+(-10*x3_2-10*x4_2+10*a_2)*x2_3-5*x2_4*(x3_1+x4_1-a_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, a_5, b_5, ((x3_4-a_4)*x2_0+(4*x3_3-4*a_3)*x2_1+(6*x3_2-6*a_2)*x2_2+(4*x3_1-4*a_1)*x2_3+x2_4*(-a_0+x3_0))*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(-x3_0-x4_0+a_0)*x2_6+(a_6-x3_6-x4_6)*x2_0+(6*a_5-6*x3_5-6*x4_5)*x2_1+(15*a_4-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3+20*a_3)*x2_3+(-15*x3_2-15*x4_2+15*a_2)*x2_4-6*x2_5*(x3_1+x4_1-a_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, a_6, b_6, ((x3_5-a_5)*x2_0+(5*x3_4-5*a_4)*x2_1+(10*x3_3-10*a_3)*x2_2+(10*x3_2-10*a_2)*x2_3+(5*x3_1-5*a_1)*x2_4+x2_5*(-a_0+x3_0))*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(-x3_0-x4_0+a_0)*x2_7+(a_7-x3_7-x4_7)*x2_0+(7*a_6-7*x3_6-7*x4_6)*x2_1+(21*a_5-21*x3_5-21*x4_5)*x2_2+(35*a_4-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3+35*a_3)*x2_4+(-21*x3_2-21*x4_2+21*a_2)*x2_5-7*x2_6*(x3_1+x4_1-a_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, a_7, b_7, ((x3_6-a_6)*x2_0+(6*x3_5-6*a_5)*x2_1+(15*x3_4-15*a_4)*x2_2+(20*x3_3-20*a_3)*x2_3+(15*x3_2-15*a_2)*x2_4+(6*x3_1-6*a_1)*x2_5+x2_6*(-a_0+x3_0))*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -a_1+y_faux1_1, -a_2+y_faux1_2, -a_3+y_faux1_3, -a_4+y_faux1_4, -a_5+y_faux1_5, -a_6+y_faux1_6, -a_7+y_faux1_7, -b_1+y_faux2_1, -b_2+y_faux2_2, -b_3+y_faux2_3, -b_4+y_faux2_4, -b_5+y_faux2_5, -b_6+y_faux2_6, -b_7+y_faux2_7, y_faux3_0-x4_1]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = a_0, y_faux1_1 = a_1, y_faux1_2 = a_2, y_faux1_3 = a_3, y_faux1_4 = a_4, y_faux1_5 = a_5, y_faux1_6 = a_6, y_faux1_7 = a_7, y_faux1_8 = a_8, y_faux1_9 = a_9, y_faux1_10 = a_10, y_faux1_11 = a_11, y_faux1_12 = a_12, y_faux1_13 = a_13, y_faux1_14 = a_14, y_faux2_0 = b_0, y_faux2_1 = b_1, y_faux2_2 = b_2, y_faux2_3 = b_3, y_faux2_4 = b_4, y_faux2_5 = b_5, y_faux2_6 = b_6, y_faux2_7 = b_7, y_faux2_8 = b_8, y_faux2_9 = b_9, y_faux2_10 = b_10, y_faux2_11 = b_11, y_faux2_12 = b_12, y_faux2_13 = b_13, y_faux2_14 = b_14, y_faux3_0 = x4_1]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability:  723190167600000000000000
Random sample for the outputs and inputs is generated from  [d = 462327428208879389425235, k3 = 139564963000003875756734, k4 = 545128849236808427853137, k5 = 514757869875927773763099, k6 = 27891493334200582384457, k7 = 139506305037022057074069, a_0 = 196496885499589028105963, b_0 = 539657999062160745660028, x1_0 = 204973443242055203336506, x2_0 = 638194544267388366788106, x3_0 = 439298133531210769327109, x4_0 = 362644647484089089174649, x5_0 = 503813117177269223161393]
The polynomial system widehat{E^t} contains  83 equations in  68  variables
            "new_logs/Tumor/transcendence_11_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [a, b, x4_2]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {a, b}
Algebraically independent parameters among derivatives: {x4_2}
	Adding ODEs: [diff(a(t),t) = 0, diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = a(t), y_faux2(t) = b(t)]
	New system: [diff(a(t),t) = 0, diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a(t)*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a(t)*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = a(t), y_faux2(t) = b(t)]

=== Input info ===
State variables:          [a(t), b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t), y_faux2(t)]
Input variables:          []
Parameters in equations:  [d, k3, k4, k5, k6, k7]
===================

memory used=3217.9MB, alloc=183.8MB, time=29.35
memory used=3318.3MB, alloc=183.8MB, time=30.10
	Adding new y-equations: [y_faux3_0 = x4_2]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-a_0, a_1, y_faux2_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a_0*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a_0-x3_0-x4_0)*x2_1+x2_0*(b_1*d+a_1-x3_1-x4_1))*k5-x1_1*k3+k4*x2_1-k6*x3_1-k6*x4_1+x2_2, -a_0*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a_0-x3_0-x4_0)*x2_2+(b_2*d+a_2-x3_2-x4_2)*x2_0+2*x2_1*(b_1*d+a_1-x3_1-x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, a_2, b_2, ((-a_1+x3_1)*x2_0-x2_1*(a_0-x3_0))*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a_0-x3_0-x4_0)*x2_3+(b_3*d+a_3-x3_3-x4_3)*x2_0+(3*b_2*d+3*a_2-3*x3_2-3*x4_2)*x2_1+3*x2_2*(b_1*d+a_1-x3_1-x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, a_3, b_3, ((x3_2-a_2)*x2_0+(2*x3_1-2*a_1)*x2_1-x2_2*(a_0-x3_0))*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a_0-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(a_4-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3+4*a_3)*x2_1+(-6*x3_2-6*x4_2+6*a_2)*x2_2-4*x2_3*(x3_1+x4_1-a_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, a_4, b_4, ((x3_3-a_3)*x2_0+(3*x3_2-3*a_2)*x2_1+(3*x3_1-3*a_1)*x2_2+x2_3*(-a_0+x3_0))*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(-x3_0-x4_0+a_0)*x2_5+(a_5-x3_5-x4_5)*x2_0+(5*a_4-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3+10*a_3)*x2_2+(-10*x3_2-10*x4_2+10*a_2)*x2_3-5*x2_4*(x3_1+x4_1-a_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, a_5, b_5, ((x3_4-a_4)*x2_0+(4*x3_3-4*a_3)*x2_1+(6*x3_2-6*a_2)*x2_2+(4*x3_1-4*a_1)*x2_3+x2_4*(-a_0+x3_0))*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(-x3_0-x4_0+a_0)*x2_6+(a_6-x3_6-x4_6)*x2_0+(6*a_5-6*x3_5-6*x4_5)*x2_1+(15*a_4-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3+20*a_3)*x2_3+(-15*x3_2-15*x4_2+15*a_2)*x2_4-6*x2_5*(x3_1+x4_1-a_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, a_6, b_6, ((x3_5-a_5)*x2_0+(5*x3_4-5*a_4)*x2_1+(10*x3_3-10*a_3)*x2_2+(10*x3_2-10*a_2)*x2_3+(5*x3_1-5*a_1)*x2_4+x2_5*(-a_0+x3_0))*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(-x3_0-x4_0+a_0)*x2_7+(a_7-x3_7-x4_7)*x2_0+(7*a_6-7*x3_6-7*x4_6)*x2_1+(21*a_5-21*x3_5-21*x4_5)*x2_2+(35*a_4-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3+35*a_3)*x2_4+(-21*x3_2-21*x4_2+21*a_2)*x2_5-7*x2_6*(x3_1+x4_1-a_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, a_7, b_7, ((x3_6-a_6)*x2_0+(6*x3_5-6*a_5)*x2_1+(15*x3_4-15*a_4)*x2_2+(20*x3_3-20*a_3)*x2_3+(15*x3_2-15*a_2)*x2_4+(6*x3_1-6*a_1)*x2_5+x2_6*(-a_0+x3_0))*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -a_1+y_faux1_1, -a_2+y_faux1_2, -a_3+y_faux1_3, -a_4+y_faux1_4, -a_5+y_faux1_5, -a_6+y_faux1_6, -a_7+y_faux1_7, -b_1+y_faux2_1, -b_2+y_faux2_2, -b_3+y_faux2_3, -b_4+y_faux2_4, -b_5+y_faux2_5, -b_6+y_faux2_6, -b_7+y_faux2_7, y_faux3_0-x4_2]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = a_0, y_faux1_1 = a_1, y_faux1_2 = a_2, y_faux1_3 = a_3, y_faux1_4 = a_4, y_faux1_5 = a_5, y_faux1_6 = a_6, y_faux1_7 = a_7, y_faux1_8 = a_8, y_faux1_9 = a_9, y_faux1_10 = a_10, y_faux1_11 = a_11, y_faux1_12 = a_12, y_faux1_13 = a_13, y_faux1_14 = a_14, y_faux2_0 = b_0, y_faux2_1 = b_1, y_faux2_2 = b_2, y_faux2_3 = b_3, y_faux2_4 = b_4, y_faux2_5 = b_5, y_faux2_6 = b_6, y_faux2_7 = b_7, y_faux2_8 = b_8, y_faux2_9 = b_9, y_faux2_10 = b_10, y_faux2_11 = b_11, y_faux2_12 = b_12, y_faux2_13 = b_13, y_faux2_14 = b_14, y_faux3_0 = x4_2]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability:  723190167600000000000000
Random sample for the outputs and inputs is generated from  [d = 534700022413502554380223, k3 = 293367503043045835738370, k4 = 180893463826400499661046, k5 = 321604777187853626040752, k6 = 122140393538919202559110, k7 = 442464427404335716587169, a_0 = 503402230441861178464303, b_0 = 370704835195911063135019, x1_0 = 283375026016576513697521, x2_0 = 15307292012813423342187, x3_0 = 655812994056059539664584, x4_0 = 641683719312120765748427, x5_0 = 477344264407324220315785]
The polynomial system widehat{E^t} contains  83 equations in  68  variables
            "new_logs/Tumor/transcendence_12_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [a, b, x4_3]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {a, b}
Algebraically independent parameters among derivatives: {x4_3}
	Adding ODEs: [diff(a(t),t) = 0, diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = a(t), y_faux2(t) = b(t)]
	New system: [diff(a(t),t) = 0, diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a(t)*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a(t)*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = a(t), y_faux2(t) = b(t)]

=== Input info ===
State variables:          [a(t), b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t), y_faux2(t)]
Input variables:          []
Parameters in equations:  [d, k3, k4, k5, k6, k7]
===================

memory used=3440.8MB, alloc=183.8MB, time=31.24
memory used=3563.1MB, alloc=183.8MB, time=32.43
memory used=3663.3MB, alloc=183.8MB, time=33.19
	Adding new y-equations: [y_faux3_0 = x4_3]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-a_0, a_1, y_faux2_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a_0*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a_0-x3_0-x4_0)*x2_1+x2_0*(b_1*d+a_1-x3_1-x4_1))*k5-x1_1*k3+k4*x2_1-k6*x3_1-k6*x4_1+x2_2, -a_0*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a_0-x3_0-x4_0)*x2_2+(b_2*d+a_2-x3_2-x4_2)*x2_0+2*x2_1*(b_1*d+a_1-x3_1-x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, a_2, b_2, ((-a_1+x3_1)*x2_0-x2_1*(a_0-x3_0))*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a_0-x3_0-x4_0)*x2_3+(b_3*d+a_3-x3_3-x4_3)*x2_0+(3*b_2*d+3*a_2-3*x3_2-3*x4_2)*x2_1+3*x2_2*(b_1*d+a_1-x3_1-x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, a_3, b_3, ((x3_2-a_2)*x2_0+(2*x3_1-2*a_1)*x2_1-x2_2*(a_0-x3_0))*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a_0-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(a_4-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3+4*a_3)*x2_1+(-6*x3_2-6*x4_2+6*a_2)*x2_2-4*x2_3*(x3_1+x4_1-a_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, a_4, b_4, ((x3_3-a_3)*x2_0+(3*x3_2-3*a_2)*x2_1+(3*x3_1-3*a_1)*x2_2+x2_3*(-a_0+x3_0))*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(-x3_0-x4_0+a_0)*x2_5+(a_5-x3_5-x4_5)*x2_0+(5*a_4-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3+10*a_3)*x2_2+(-10*x3_2-10*x4_2+10*a_2)*x2_3-5*x2_4*(x3_1+x4_1-a_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, a_5, b_5, ((x3_4-a_4)*x2_0+(4*x3_3-4*a_3)*x2_1+(6*x3_2-6*a_2)*x2_2+(4*x3_1-4*a_1)*x2_3+x2_4*(-a_0+x3_0))*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(-x3_0-x4_0+a_0)*x2_6+(a_6-x3_6-x4_6)*x2_0+(6*a_5-6*x3_5-6*x4_5)*x2_1+(15*a_4-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3+20*a_3)*x2_3+(-15*x3_2-15*x4_2+15*a_2)*x2_4-6*x2_5*(x3_1+x4_1-a_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, a_6, b_6, ((x3_5-a_5)*x2_0+(5*x3_4-5*a_4)*x2_1+(10*x3_3-10*a_3)*x2_2+(10*x3_2-10*a_2)*x2_3+(5*x3_1-5*a_1)*x2_4+x2_5*(-a_0+x3_0))*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(-x3_0-x4_0+a_0)*x2_7+(a_7-x3_7-x4_7)*x2_0+(7*a_6-7*x3_6-7*x4_6)*x2_1+(21*a_5-21*x3_5-21*x4_5)*x2_2+(35*a_4-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3+35*a_3)*x2_4+(-21*x3_2-21*x4_2+21*a_2)*x2_5-7*x2_6*(x3_1+x4_1-a_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, a_7, b_7, ((x3_6-a_6)*x2_0+(6*x3_5-6*a_5)*x2_1+(15*x3_4-15*a_4)*x2_2+(20*x3_3-20*a_3)*x2_3+(15*x3_2-15*a_2)*x2_4+(6*x3_1-6*a_1)*x2_5+x2_6*(-a_0+x3_0))*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -a_1+y_faux1_1, -a_2+y_faux1_2, -a_3+y_faux1_3, -a_4+y_faux1_4, -a_5+y_faux1_5, -a_6+y_faux1_6, -a_7+y_faux1_7, -b_1+y_faux2_1, -b_2+y_faux2_2, -b_3+y_faux2_3, -b_4+y_faux2_4, -b_5+y_faux2_5, -b_6+y_faux2_6, -b_7+y_faux2_7, y_faux3_0-x4_3]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = a_0, y_faux1_1 = a_1, y_faux1_2 = a_2, y_faux1_3 = a_3, y_faux1_4 = a_4, y_faux1_5 = a_5, y_faux1_6 = a_6, y_faux1_7 = a_7, y_faux1_8 = a_8, y_faux1_9 = a_9, y_faux1_10 = a_10, y_faux1_11 = a_11, y_faux1_12 = a_12, y_faux1_13 = a_13, y_faux1_14 = a_14, y_faux2_0 = b_0, y_faux2_1 = b_1, y_faux2_2 = b_2, y_faux2_3 = b_3, y_faux2_4 = b_4, y_faux2_5 = b_5, y_faux2_6 = b_6, y_faux2_7 = b_7, y_faux2_8 = b_8, y_faux2_9 = b_9, y_faux2_10 = b_10, y_faux2_11 = b_11, y_faux2_12 = b_12, y_faux2_13 = b_13, y_faux2_14 = b_14, y_faux3_0 = x4_3]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability:  723190167600000000000000
Random sample for the outputs and inputs is generated from  [d = 104681446614599343089441, k3 = 694011712864996163804306, k4 = 157772064411027788617286, k5 = 477580723853704422236197, k6 = 95640439234729797607756, k7 = 404662721515807786956526, a_0 = 511941391067588352967759, b_0 = 403756359521822331433719, x1_0 = 637598623093312620859167, x2_0 = 137211847938372187267762, x3_0 = 63725694584094700398421, x4_0 = 360970531476320486974313, x5_0 = 585396661108302652795649]
The polynomial system widehat{E^t} contains  83 equations in  68  variables
            "new_logs/Tumor/transcendence_13_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [a, b, x4_4]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {a, b}
Algebraically independent parameters among derivatives: {x4_4}
	Adding ODEs: [diff(a(t),t) = 0, diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = a(t), y_faux2(t) = b(t)]
	New system: [diff(a(t),t) = 0, diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a(t)*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a(t)*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = a(t), y_faux2(t) = b(t)]

=== Input info ===
State variables:          [a(t), b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t), y_faux2(t)]
Input variables:          []
Parameters in equations:  [d, k3, k4, k5, k6, k7]
===================

memory used=3780.8MB, alloc=183.8MB, time=34.44
memory used=3883.9MB, alloc=183.8MB, time=35.28
	Adding new y-equations: [y_faux3_0 = x4_4]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-a_0, a_1, y_faux2_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a_0*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a_0-x3_0-x4_0)*x2_1+x2_0*(b_1*d+a_1-x3_1-x4_1))*k5-x1_1*k3+k4*x2_1-k6*x3_1-k6*x4_1+x2_2, -a_0*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a_0-x3_0-x4_0)*x2_2+(b_2*d+a_2-x3_2-x4_2)*x2_0+2*x2_1*(b_1*d+a_1-x3_1-x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, a_2, b_2, ((-a_1+x3_1)*x2_0-x2_1*(a_0-x3_0))*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a_0-x3_0-x4_0)*x2_3+(b_3*d+a_3-x3_3-x4_3)*x2_0+(3*b_2*d+3*a_2-3*x3_2-3*x4_2)*x2_1+3*x2_2*(b_1*d+a_1-x3_1-x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, a_3, b_3, ((x3_2-a_2)*x2_0+(2*x3_1-2*a_1)*x2_1-x2_2*(a_0-x3_0))*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a_0-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(a_4-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3+4*a_3)*x2_1+(-6*x3_2-6*x4_2+6*a_2)*x2_2-4*x2_3*(x3_1+x4_1-a_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, a_4, b_4, ((x3_3-a_3)*x2_0+(3*x3_2-3*a_2)*x2_1+(3*x3_1-3*a_1)*x2_2+x2_3*(-a_0+x3_0))*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(-x3_0-x4_0+a_0)*x2_5+(a_5-x3_5-x4_5)*x2_0+(5*a_4-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3+10*a_3)*x2_2+(-10*x3_2-10*x4_2+10*a_2)*x2_3-5*x2_4*(x3_1+x4_1-a_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, a_5, b_5, ((x3_4-a_4)*x2_0+(4*x3_3-4*a_3)*x2_1+(6*x3_2-6*a_2)*x2_2+(4*x3_1-4*a_1)*x2_3+x2_4*(-a_0+x3_0))*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(-x3_0-x4_0+a_0)*x2_6+(a_6-x3_6-x4_6)*x2_0+(6*a_5-6*x3_5-6*x4_5)*x2_1+(15*a_4-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3+20*a_3)*x2_3+(-15*x3_2-15*x4_2+15*a_2)*x2_4-6*x2_5*(x3_1+x4_1-a_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, a_6, b_6, ((x3_5-a_5)*x2_0+(5*x3_4-5*a_4)*x2_1+(10*x3_3-10*a_3)*x2_2+(10*x3_2-10*a_2)*x2_3+(5*x3_1-5*a_1)*x2_4+x2_5*(-a_0+x3_0))*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(-x3_0-x4_0+a_0)*x2_7+(a_7-x3_7-x4_7)*x2_0+(7*a_6-7*x3_6-7*x4_6)*x2_1+(21*a_5-21*x3_5-21*x4_5)*x2_2+(35*a_4-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3+35*a_3)*x2_4+(-21*x3_2-21*x4_2+21*a_2)*x2_5-7*x2_6*(x3_1+x4_1-a_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, a_7, b_7, ((x3_6-a_6)*x2_0+(6*x3_5-6*a_5)*x2_1+(15*x3_4-15*a_4)*x2_2+(20*x3_3-20*a_3)*x2_3+(15*x3_2-15*a_2)*x2_4+(6*x3_1-6*a_1)*x2_5+x2_6*(-a_0+x3_0))*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -a_1+y_faux1_1, -a_2+y_faux1_2, -a_3+y_faux1_3, -a_4+y_faux1_4, -a_5+y_faux1_5, -a_6+y_faux1_6, -a_7+y_faux1_7, -b_1+y_faux2_1, -b_2+y_faux2_2, -b_3+y_faux2_3, -b_4+y_faux2_4, -b_5+y_faux2_5, -b_6+y_faux2_6, -b_7+y_faux2_7, y_faux3_0-x4_4]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = a_0, y_faux1_1 = a_1, y_faux1_2 = a_2, y_faux1_3 = a_3, y_faux1_4 = a_4, y_faux1_5 = a_5, y_faux1_6 = a_6, y_faux1_7 = a_7, y_faux1_8 = a_8, y_faux1_9 = a_9, y_faux1_10 = a_10, y_faux1_11 = a_11, y_faux1_12 = a_12, y_faux1_13 = a_13, y_faux1_14 = a_14, y_faux2_0 = b_0, y_faux2_1 = b_1, y_faux2_2 = b_2, y_faux2_3 = b_3, y_faux2_4 = b_4, y_faux2_5 = b_5, y_faux2_6 = b_6, y_faux2_7 = b_7, y_faux2_8 = b_8, y_faux2_9 = b_9, y_faux2_10 = b_10, y_faux2_11 = b_11, y_faux2_12 = b_12, y_faux2_13 = b_13, y_faux2_14 = b_14, y_faux3_0 = x4_4]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability:  723190167600000000000000
Random sample for the outputs and inputs is generated from  [d = 643954597592740408509608, k3 = 302346275464843174577206, k4 = 78104798848145851469077, k5 = 296392157352869914247587, k6 = 401092898623735003530171, k7 = 426464967756833026312998, a_0 = 300588291417248280889214, b_0 = 544107312801524111751705, x1_0 = 86865463387315694105759, x2_0 = 325435504126631744843819, x3_0 = 269141609037795056534486, x4_0 = 13255123139892234150386, x5_0 = 528432879593187130661679]
The polynomial system widehat{E^t} contains  83 equations in  68  variables
            "new_logs/Tumor/transcendence_14_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [a, b, x4_5]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {a, b}
Algebraically independent parameters among derivatives: {x4_5}
	Adding ODEs: [diff(a(t),t) = 0, diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = a(t), y_faux2(t) = b(t)]
	New system: [diff(a(t),t) = 0, diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a(t)*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a(t)*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = a(t), y_faux2(t) = b(t)]

=== Input info ===
State variables:          [a(t), b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t), y_faux2(t)]
Input variables:          []
Parameters in equations:  [d, k3, k4, k5, k6, k7]
===================

memory used=4009.6MB, alloc=183.8MB, time=36.41
memory used=4130.6MB, alloc=183.8MB, time=37.53
memory used=4230.8MB, alloc=183.8MB, time=38.28
	Adding new y-equations: [y_faux3_0 = x4_5]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-a_0, a_1, y_faux2_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a_0*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a_0-x3_0-x4_0)*x2_1+x2_0*(b_1*d+a_1-x3_1-x4_1))*k5-x1_1*k3+k4*x2_1-k6*x3_1-k6*x4_1+x2_2, -a_0*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a_0-x3_0-x4_0)*x2_2+(b_2*d+a_2-x3_2-x4_2)*x2_0+2*x2_1*(b_1*d+a_1-x3_1-x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, a_2, b_2, ((-a_1+x3_1)*x2_0-x2_1*(a_0-x3_0))*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a_0-x3_0-x4_0)*x2_3+(b_3*d+a_3-x3_3-x4_3)*x2_0+(3*b_2*d+3*a_2-3*x3_2-3*x4_2)*x2_1+3*x2_2*(b_1*d+a_1-x3_1-x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, a_3, b_3, ((x3_2-a_2)*x2_0+(2*x3_1-2*a_1)*x2_1-x2_2*(a_0-x3_0))*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a_0-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(a_4-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3+4*a_3)*x2_1+(-6*x3_2-6*x4_2+6*a_2)*x2_2-4*x2_3*(x3_1+x4_1-a_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, a_4, b_4, ((x3_3-a_3)*x2_0+(3*x3_2-3*a_2)*x2_1+(3*x3_1-3*a_1)*x2_2+x2_3*(-a_0+x3_0))*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(-x3_0-x4_0+a_0)*x2_5+(a_5-x3_5-x4_5)*x2_0+(5*a_4-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3+10*a_3)*x2_2+(-10*x3_2-10*x4_2+10*a_2)*x2_3-5*x2_4*(x3_1+x4_1-a_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, a_5, b_5, ((x3_4-a_4)*x2_0+(4*x3_3-4*a_3)*x2_1+(6*x3_2-6*a_2)*x2_2+(4*x3_1-4*a_1)*x2_3+x2_4*(-a_0+x3_0))*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(-x3_0-x4_0+a_0)*x2_6+(a_6-x3_6-x4_6)*x2_0+(6*a_5-6*x3_5-6*x4_5)*x2_1+(15*a_4-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3+20*a_3)*x2_3+(-15*x3_2-15*x4_2+15*a_2)*x2_4-6*x2_5*(x3_1+x4_1-a_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, a_6, b_6, ((x3_5-a_5)*x2_0+(5*x3_4-5*a_4)*x2_1+(10*x3_3-10*a_3)*x2_2+(10*x3_2-10*a_2)*x2_3+(5*x3_1-5*a_1)*x2_4+x2_5*(-a_0+x3_0))*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(-x3_0-x4_0+a_0)*x2_7+(a_7-x3_7-x4_7)*x2_0+(7*a_6-7*x3_6-7*x4_6)*x2_1+(21*a_5-21*x3_5-21*x4_5)*x2_2+(35*a_4-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3+35*a_3)*x2_4+(-21*x3_2-21*x4_2+21*a_2)*x2_5-7*x2_6*(x3_1+x4_1-a_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, a_7, b_7, ((x3_6-a_6)*x2_0+(6*x3_5-6*a_5)*x2_1+(15*x3_4-15*a_4)*x2_2+(20*x3_3-20*a_3)*x2_3+(15*x3_2-15*a_2)*x2_4+(6*x3_1-6*a_1)*x2_5+x2_6*(-a_0+x3_0))*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -a_1+y_faux1_1, -a_2+y_faux1_2, -a_3+y_faux1_3, -a_4+y_faux1_4, -a_5+y_faux1_5, -a_6+y_faux1_6, -a_7+y_faux1_7, -b_1+y_faux2_1, -b_2+y_faux2_2, -b_3+y_faux2_3, -b_4+y_faux2_4, -b_5+y_faux2_5, -b_6+y_faux2_6, -b_7+y_faux2_7, y_faux3_0-x4_5]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = a_0, y_faux1_1 = a_1, y_faux1_2 = a_2, y_faux1_3 = a_3, y_faux1_4 = a_4, y_faux1_5 = a_5, y_faux1_6 = a_6, y_faux1_7 = a_7, y_faux1_8 = a_8, y_faux1_9 = a_9, y_faux1_10 = a_10, y_faux1_11 = a_11, y_faux1_12 = a_12, y_faux1_13 = a_13, y_faux1_14 = a_14, y_faux2_0 = b_0, y_faux2_1 = b_1, y_faux2_2 = b_2, y_faux2_3 = b_3, y_faux2_4 = b_4, y_faux2_5 = b_5, y_faux2_6 = b_6, y_faux2_7 = b_7, y_faux2_8 = b_8, y_faux2_9 = b_9, y_faux2_10 = b_10, y_faux2_11 = b_11, y_faux2_12 = b_12, y_faux2_13 = b_13, y_faux2_14 = b_14, y_faux3_0 = x4_5]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability:  723190167600000000000000
Random sample for the outputs and inputs is generated from  [d = 445457867031033146189694, k3 = 15905232445392284779634, k4 = 601709972809731544591940, k5 = 86765710823091007605936, k6 = 481367375730740887434303, k7 = 161219879351698985622189, a_0 = 579185665943281860115289, b_0 = 283453127905567906855255, x1_0 = 425103774481661539819435, x2_0 = 17046800536336120031300, x3_0 = 93818640066845866293699, x4_0 = 477835874873218134517101, x5_0 = 322281671127399421667957]
The polynomial system widehat{E^t} contains  83 equations in  68  variables
            "new_logs/Tumor/transcendence_15_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [a, b, x4_6]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {a, b}
Algebraically independent parameters among derivatives: {x4_6}
	Adding ODEs: [diff(a(t),t) = 0, diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = a(t), y_faux2(t) = b(t)]
	New system: [diff(a(t),t) = 0, diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a(t)*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a(t)*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = a(t), y_faux2(t) = b(t)]

=== Input info ===
State variables:          [a(t), b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t), y_faux2(t)]
Input variables:          []
Parameters in equations:  [d, k3, k4, k5, k6, k7]
===================

memory used=4348.3MB, alloc=183.8MB, time=39.54
memory used=4454.8MB, alloc=183.8MB, time=40.41
memory used=4553.7MB, alloc=183.8MB, time=41.25
	Adding new y-equations: [y_faux3_0 = x4_6]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-a_0, a_1, y_faux2_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a_0*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a_0-x3_0-x4_0)*x2_1+x2_0*(b_1*d+a_1-x3_1-x4_1))*k5-x1_1*k3+k4*x2_1-k6*x3_1-k6*x4_1+x2_2, -a_0*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a_0-x3_0-x4_0)*x2_2+(b_2*d+a_2-x3_2-x4_2)*x2_0+2*x2_1*(b_1*d+a_1-x3_1-x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, a_2, b_2, ((-a_1+x3_1)*x2_0-x2_1*(a_0-x3_0))*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a_0-x3_0-x4_0)*x2_3+(b_3*d+a_3-x3_3-x4_3)*x2_0+(3*b_2*d+3*a_2-3*x3_2-3*x4_2)*x2_1+3*x2_2*(b_1*d+a_1-x3_1-x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, a_3, b_3, ((x3_2-a_2)*x2_0+(2*x3_1-2*a_1)*x2_1-x2_2*(a_0-x3_0))*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a_0-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(a_4-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3+4*a_3)*x2_1+(-6*x3_2-6*x4_2+6*a_2)*x2_2-4*x2_3*(x3_1+x4_1-a_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, a_4, b_4, ((x3_3-a_3)*x2_0+(3*x3_2-3*a_2)*x2_1+(3*x3_1-3*a_1)*x2_2+x2_3*(-a_0+x3_0))*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(-x3_0-x4_0+a_0)*x2_5+(a_5-x3_5-x4_5)*x2_0+(5*a_4-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3+10*a_3)*x2_2+(-10*x3_2-10*x4_2+10*a_2)*x2_3-5*x2_4*(x3_1+x4_1-a_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, a_5, b_5, ((x3_4-a_4)*x2_0+(4*x3_3-4*a_3)*x2_1+(6*x3_2-6*a_2)*x2_2+(4*x3_1-4*a_1)*x2_3+x2_4*(-a_0+x3_0))*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(-x3_0-x4_0+a_0)*x2_6+(a_6-x3_6-x4_6)*x2_0+(6*a_5-6*x3_5-6*x4_5)*x2_1+(15*a_4-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3+20*a_3)*x2_3+(-15*x3_2-15*x4_2+15*a_2)*x2_4-6*x2_5*(x3_1+x4_1-a_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, a_6, b_6, ((x3_5-a_5)*x2_0+(5*x3_4-5*a_4)*x2_1+(10*x3_3-10*a_3)*x2_2+(10*x3_2-10*a_2)*x2_3+(5*x3_1-5*a_1)*x2_4+x2_5*(-a_0+x3_0))*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(-x3_0-x4_0+a_0)*x2_7+(a_7-x3_7-x4_7)*x2_0+(7*a_6-7*x3_6-7*x4_6)*x2_1+(21*a_5-21*x3_5-21*x4_5)*x2_2+(35*a_4-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3+35*a_3)*x2_4+(-21*x3_2-21*x4_2+21*a_2)*x2_5-7*x2_6*(x3_1+x4_1-a_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, a_7, b_7, ((x3_6-a_6)*x2_0+(6*x3_5-6*a_5)*x2_1+(15*x3_4-15*a_4)*x2_2+(20*x3_3-20*a_3)*x2_3+(15*x3_2-15*a_2)*x2_4+(6*x3_1-6*a_1)*x2_5+x2_6*(-a_0+x3_0))*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -a_1+y_faux1_1, -a_2+y_faux1_2, -a_3+y_faux1_3, -a_4+y_faux1_4, -a_5+y_faux1_5, -a_6+y_faux1_6, -a_7+y_faux1_7, -b_1+y_faux2_1, -b_2+y_faux2_2, -b_3+y_faux2_3, -b_4+y_faux2_4, -b_5+y_faux2_5, -b_6+y_faux2_6, -b_7+y_faux2_7, y_faux3_0-x4_6]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = a_0, y_faux1_1 = a_1, y_faux1_2 = a_2, y_faux1_3 = a_3, y_faux1_4 = a_4, y_faux1_5 = a_5, y_faux1_6 = a_6, y_faux1_7 = a_7, y_faux1_8 = a_8, y_faux1_9 = a_9, y_faux1_10 = a_10, y_faux1_11 = a_11, y_faux1_12 = a_12, y_faux1_13 = a_13, y_faux1_14 = a_14, y_faux2_0 = b_0, y_faux2_1 = b_1, y_faux2_2 = b_2, y_faux2_3 = b_3, y_faux2_4 = b_4, y_faux2_5 = b_5, y_faux2_6 = b_6, y_faux2_7 = b_7, y_faux2_8 = b_8, y_faux2_9 = b_9, y_faux2_10 = b_10, y_faux2_11 = b_11, y_faux2_12 = b_12, y_faux2_13 = b_13, y_faux2_14 = b_14, y_faux3_0 = x4_6]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability:  723190167600000000000000
Random sample for the outputs and inputs is generated from  [d = 667811268319610236753878, k3 = 605303220621387364089420, k4 = 468313891939258509327568, k5 = 22357023155377216547551, k6 = 558726456523199882755982, k7 = 57535560470188008234693, a_0 = 402933999790436671900298, b_0 = 522040376637897503623026, x1_0 = 541744250217318694654563, x2_0 = 114059060727175228086906, x3_0 = 345278584066654075039093, x4_0 = 252514377752390297481866, x5_0 = 470435145514795716684107]
The polynomial system widehat{E^t} contains  83 equations in  68  variables
            "new_logs/Tumor/transcendence_16_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [a, b, x4_7]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {a, b}
Algebraically independent parameters among derivatives: {x4_7}
	Adding ODEs: [diff(a(t),t) = 0, diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = a(t), y_faux2(t) = b(t)]
	New system: [diff(a(t),t) = 0, diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a(t)*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a(t)*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = a(t), y_faux2(t) = b(t)]

=== Input info ===
State variables:          [a(t), b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t), y_faux2(t)]
Input variables:          []
Parameters in equations:  [d, k3, k4, k5, k6, k7]
===================

memory used=4670.7MB, alloc=183.8MB, time=42.50
memory used=4769.9MB, alloc=183.8MB, time=43.26
	Adding new y-equations: [y_faux3_0 = x4_7]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-a_0, a_1, y_faux2_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a_0*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a_0-x3_0-x4_0)*x2_1+x2_0*(b_1*d+a_1-x3_1-x4_1))*k5-x1_1*k3+k4*x2_1-k6*x3_1-k6*x4_1+x2_2, -a_0*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a_0-x3_0-x4_0)*x2_2+(b_2*d+a_2-x3_2-x4_2)*x2_0+2*x2_1*(b_1*d+a_1-x3_1-x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, a_2, b_2, ((-a_1+x3_1)*x2_0-x2_1*(a_0-x3_0))*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a_0-x3_0-x4_0)*x2_3+(b_3*d+a_3-x3_3-x4_3)*x2_0+(3*b_2*d+3*a_2-3*x3_2-3*x4_2)*x2_1+3*x2_2*(b_1*d+a_1-x3_1-x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, a_3, b_3, ((x3_2-a_2)*x2_0+(2*x3_1-2*a_1)*x2_1-x2_2*(a_0-x3_0))*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a_0-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(a_4-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3+4*a_3)*x2_1+(-6*x3_2-6*x4_2+6*a_2)*x2_2-4*x2_3*(x3_1+x4_1-a_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, a_4, b_4, ((x3_3-a_3)*x2_0+(3*x3_2-3*a_2)*x2_1+(3*x3_1-3*a_1)*x2_2+x2_3*(-a_0+x3_0))*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(-x3_0-x4_0+a_0)*x2_5+(a_5-x3_5-x4_5)*x2_0+(5*a_4-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3+10*a_3)*x2_2+(-10*x3_2-10*x4_2+10*a_2)*x2_3-5*x2_4*(x3_1+x4_1-a_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, a_5, b_5, ((x3_4-a_4)*x2_0+(4*x3_3-4*a_3)*x2_1+(6*x3_2-6*a_2)*x2_2+(4*x3_1-4*a_1)*x2_3+x2_4*(-a_0+x3_0))*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(-x3_0-x4_0+a_0)*x2_6+(a_6-x3_6-x4_6)*x2_0+(6*a_5-6*x3_5-6*x4_5)*x2_1+(15*a_4-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3+20*a_3)*x2_3+(-15*x3_2-15*x4_2+15*a_2)*x2_4-6*x2_5*(x3_1+x4_1-a_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, a_6, b_6, ((x3_5-a_5)*x2_0+(5*x3_4-5*a_4)*x2_1+(10*x3_3-10*a_3)*x2_2+(10*x3_2-10*a_2)*x2_3+(5*x3_1-5*a_1)*x2_4+x2_5*(-a_0+x3_0))*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(-x3_0-x4_0+a_0)*x2_7+(a_7-x3_7-x4_7)*x2_0+(7*a_6-7*x3_6-7*x4_6)*x2_1+(21*a_5-21*x3_5-21*x4_5)*x2_2+(35*a_4-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3+35*a_3)*x2_4+(-21*x3_2-21*x4_2+21*a_2)*x2_5-7*x2_6*(x3_1+x4_1-a_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, a_7, b_7, ((x3_6-a_6)*x2_0+(6*x3_5-6*a_5)*x2_1+(15*x3_4-15*a_4)*x2_2+(20*x3_3-20*a_3)*x2_3+(15*x3_2-15*a_2)*x2_4+(6*x3_1-6*a_1)*x2_5+x2_6*(-a_0+x3_0))*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -a_1+y_faux1_1, -a_2+y_faux1_2, -a_3+y_faux1_3, -a_4+y_faux1_4, -a_5+y_faux1_5, -a_6+y_faux1_6, -a_7+y_faux1_7, -b_1+y_faux2_1, -b_2+y_faux2_2, -b_3+y_faux2_3, -b_4+y_faux2_4, -b_5+y_faux2_5, -b_6+y_faux2_6, -b_7+y_faux2_7, y_faux3_0-x4_7]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = a_0, y_faux1_1 = a_1, y_faux1_2 = a_2, y_faux1_3 = a_3, y_faux1_4 = a_4, y_faux1_5 = a_5, y_faux1_6 = a_6, y_faux1_7 = a_7, y_faux1_8 = a_8, y_faux1_9 = a_9, y_faux1_10 = a_10, y_faux1_11 = a_11, y_faux1_12 = a_12, y_faux1_13 = a_13, y_faux1_14 = a_14, y_faux2_0 = b_0, y_faux2_1 = b_1, y_faux2_2 = b_2, y_faux2_3 = b_3, y_faux2_4 = b_4, y_faux2_5 = b_5, y_faux2_6 = b_6, y_faux2_7 = b_7, y_faux2_8 = b_8, y_faux2_9 = b_9, y_faux2_10 = b_10, y_faux2_11 = b_11, y_faux2_12 = b_12, y_faux2_13 = b_13, y_faux2_14 = b_14, y_faux3_0 = x4_7]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability:  723190167600000000000000
Random sample for the outputs and inputs is generated from  [d = 285903448572629722307825, k3 = 49197750468359939682115, k4 = 27570032615552268038580, k5 = 574439845934935032078997, k6 = 400193109218650113180272, k7 = 191578436213419513527267, a_0 = 87385837921502185841571, b_0 = 1429874326646468215664, x1_0 = 439556079102253429664795, x2_0 = 149133496827500360812325, x3_0 = 102237778774377870777299, x4_0 = 327261694153587057815090, x5_0 = 174088973914467378224495]
The polynomial system widehat{E^t} contains  83 equations in  68  variables
            "new_logs/Tumor/transcendence_17_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [a, d, x3(0)]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {a, d}
Algebraically independent parameters among derivatives: {x3(0)}
	Adding ODEs: [diff(a(t),t) = 0, diff(d(t),t) = 0]
	Adding output functions: [y_faux1(t) = a(t), y_faux2(t) = d(t)]
	New system: [diff(a(t),t) = 0, diff(d(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b*d(t)*k5+a(t)*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a(t)*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b*d(t)*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = a(t), y_faux2(t) = d(t)]

=== Input info ===
State variables:          [a(t), d(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t), y_faux2(t)]
Input variables:          []
Parameters in equations:  [b, k3, k4, k5, k6, k7]
===================

memory used=4892.1MB, alloc=183.8MB, time=44.45
memory used=5019.6MB, alloc=183.8MB, time=45.53
memory used=5119.2MB, alloc=183.8MB, time=46.32
	Adding new y-equations: [y_faux3_0 = x3_0]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-a_0, a_1, y_faux2_0-d_0, d_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b*d_0*k5*x2_0+a_0*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b*d_0+a_0-x3_0-x4_0)*x2_1+x2_0*(b*d_1+a_1-x3_1-x4_1))*k5-x1_1*k3+k4*x2_1-k6*x3_1-k6*x4_1+x2_2, -a_0*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b*d_0*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b*d_0+a_0-x3_0-x4_0)*x2_2+(b*d_2+a_2-x3_2-x4_2)*x2_0+2*x2_1*(b*d_1+a_1-x3_1-x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, a_2, d_2, ((-a_1+x3_1)*x2_0-x2_1*(a_0-x3_0))*k5+k6*x3_1+x3_2, ((-b*d_1+x4_1)*x2_0-x2_1*(b*d_0-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b*d_0+a_0-x3_0-x4_0)*x2_3+(b*d_3+a_3-x3_3-x4_3)*x2_0+(3*b*d_2+3*a_2-3*x3_2-3*x4_2)*x2_1+3*x2_2*(b*d_1+a_1-x3_1-x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, a_3, d_3, ((x3_2-a_2)*x2_0+(2*x3_1-2*a_1)*x2_1-x2_2*(a_0-x3_0))*k5+k6*x3_2+x3_3, ((-d_0*x2_2-2*d_1*x2_1-d_2*x2_0)*b+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b*d_0+a_0-x3_0-x4_0)*x2_4+(4*d_1*x2_3+6*d_2*x2_2+4*d_3*x2_1+d_4*x2_0)*b+(a_4-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3+4*a_3)*x2_1+(-6*x3_2-6*x4_2+6*a_2)*x2_2-4*x2_3*(x3_1+x4_1-a_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, a_4, d_4, ((x3_3-a_3)*x2_0+(3*x3_2-3*a_2)*x2_1+(3*x3_1-3*a_1)*x2_2+x2_3*(-a_0+x3_0))*k5+k6*x3_3+x3_4, ((-d_0*x2_3-3*d_1*x2_2-3*d_2*x2_1-d_3*x2_0)*b+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((d_0*x2_5+5*d_1*x2_4+10*d_2*x2_3+10*d_3*x2_2+5*d_4*x2_1+d_5*x2_0)*b+(-x3_0-x4_0+a_0)*x2_5+(a_5-x3_5-x4_5)*x2_0+(5*a_4-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3+10*a_3)*x2_2+(-10*x3_2-10*x4_2+10*a_2)*x2_3-5*x2_4*(x3_1+x4_1-a_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, a_5, d_5, ((x3_4-a_4)*x2_0+(4*x3_3-4*a_3)*x2_1+(6*x3_2-6*a_2)*x2_2+(4*x3_1-4*a_1)*x2_3+x2_4*(-a_0+x3_0))*k5+k6*x3_4+x3_5, ((-d_0*x2_4-4*d_1*x2_3-6*d_2*x2_2-4*d_3*x2_1-d_4*x2_0)*b+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((d_0*x2_6+6*d_1*x2_5+15*d_2*x2_4+20*d_3*x2_3+15*d_4*x2_2+6*d_5*x2_1+d_6*x2_0)*b+(-x3_0-x4_0+a_0)*x2_6+(a_6-x3_6-x4_6)*x2_0+(6*a_5-6*x3_5-6*x4_5)*x2_1+(15*a_4-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3+20*a_3)*x2_3+(-15*x3_2-15*x4_2+15*a_2)*x2_4-6*x2_5*(x3_1+x4_1-a_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, a_6, d_6, ((x3_5-a_5)*x2_0+(5*x3_4-5*a_4)*x2_1+(10*x3_3-10*a_3)*x2_2+(10*x3_2-10*a_2)*x2_3+(5*x3_1-5*a_1)*x2_4+x2_5*(-a_0+x3_0))*k5+k6*x3_5+x3_6, ((-d_0*x2_5-5*d_1*x2_4-10*d_2*x2_3-10*d_3*x2_2-5*d_4*x2_1-d_5*x2_0)*b+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((d_0*x2_7+7*d_1*x2_6+21*d_2*x2_5+35*d_3*x2_4+35*d_4*x2_3+21*d_5*x2_2+7*d_6*x2_1+d_7*x2_0)*b+(-x3_0-x4_0+a_0)*x2_7+(a_7-x3_7-x4_7)*x2_0+(7*a_6-7*x3_6-7*x4_6)*x2_1+(21*a_5-21*x3_5-21*x4_5)*x2_2+(35*a_4-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3+35*a_3)*x2_4+(-21*x3_2-21*x4_2+21*a_2)*x2_5-7*x2_6*(x3_1+x4_1-a_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, a_7, d_7, ((x3_6-a_6)*x2_0+(6*x3_5-6*a_5)*x2_1+(15*x3_4-15*a_4)*x2_2+(20*x3_3-20*a_3)*x2_3+(15*x3_2-15*a_2)*x2_4+(6*x3_1-6*a_1)*x2_5+x2_6*(-a_0+x3_0))*k5+k6*x3_6+x3_7, ((-d_0*x2_6-6*d_1*x2_5-15*d_2*x2_4-20*d_3*x2_3-15*d_4*x2_2-6*d_5*x2_1-d_6*x2_0)*b+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -a_1+y_faux1_1, -a_2+y_faux1_2, -a_3+y_faux1_3, -a_4+y_faux1_4, -a_5+y_faux1_5, -a_6+y_faux1_6, -a_7+y_faux1_7, -d_1+y_faux2_1, -d_2+y_faux2_2, -d_3+y_faux2_3, -d_4+y_faux2_4, -d_5+y_faux2_5, -d_6+y_faux2_6, -d_7+y_faux2_7, y_faux3_0-x3_0]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = a_0, y_faux1_1 = a_1, y_faux1_2 = a_2, y_faux1_3 = a_3, y_faux1_4 = a_4, y_faux1_5 = a_5, y_faux1_6 = a_6, y_faux1_7 = a_7, y_faux1_8 = a_8, y_faux1_9 = a_9, y_faux1_10 = a_10, y_faux1_11 = a_11, y_faux1_12 = a_12, y_faux1_13 = a_13, y_faux1_14 = a_14, y_faux2_0 = d_0, y_faux2_1 = d_1, y_faux2_2 = d_2, y_faux2_3 = d_3, y_faux2_4 = d_4, y_faux2_5 = d_5, y_faux2_6 = d_6, y_faux2_7 = d_7, y_faux2_8 = d_8, y_faux2_9 = d_9, y_faux2_10 = d_10, y_faux2_11 = d_11, y_faux2_12 = d_12, y_faux2_13 = d_13, y_faux2_14 = d_14, y_faux3_0 = x3_0]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability:  723190167600000000000000
Random sample for the outputs and inputs is generated from  [b = 703047401592207872688499, k3 = 106441743820535164905974, k4 = 1868021072444591643272, k5 = 409710011200947198827764, k6 = 289405613815979365303165, k7 = 344887122570552343602337, a_0 = 178609042072731756451676, d_0 = 470786009857682868686553, x1_0 = 104279453519779830322994, x2_0 = 552326398084169643002339, x3_0 = 312786598170022524739868, x4_0 = 66440443925948588662376, x5_0 = 325300314396084631674912]
The polynomial system widehat{E^t} contains  83 equations in  68  variables
            "new_logs/Tumor/transcendence_18_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [a, d, x3_1]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {a, d}
Algebraically independent parameters among derivatives: {x3_1}
	Adding ODEs: [diff(a(t),t) = 0, diff(d(t),t) = 0]
	Adding output functions: [y_faux1(t) = a(t), y_faux2(t) = d(t)]
	New system: [diff(a(t),t) = 0, diff(d(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b*d(t)*k5+a(t)*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a(t)*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b*d(t)*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = a(t), y_faux2(t) = d(t)]

=== Input info ===
State variables:          [a(t), d(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t), y_faux2(t)]
Input variables:          []
Parameters in equations:  [b, k3, k4, k5, k6, k7]
===================

memory used=5238.3MB, alloc=183.8MB, time=47.61
memory used=5339.1MB, alloc=183.8MB, time=48.46
	Adding new y-equations: [y_faux3_0 = x3_1]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-a_0, a_1, y_faux2_0-d_0, d_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b*d_0*k5*x2_0+a_0*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b*d_0+a_0-x3_0-x4_0)*x2_1+x2_0*(b*d_1+a_1-x3_1-x4_1))*k5-x1_1*k3+k4*x2_1-k6*x3_1-k6*x4_1+x2_2, -a_0*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b*d_0*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b*d_0+a_0-x3_0-x4_0)*x2_2+(b*d_2+a_2-x3_2-x4_2)*x2_0+2*x2_1*(b*d_1+a_1-x3_1-x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, a_2, d_2, ((-a_1+x3_1)*x2_0-x2_1*(a_0-x3_0))*k5+k6*x3_1+x3_2, ((-b*d_1+x4_1)*x2_0-x2_1*(b*d_0-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b*d_0+a_0-x3_0-x4_0)*x2_3+(b*d_3+a_3-x3_3-x4_3)*x2_0+(3*b*d_2+3*a_2-3*x3_2-3*x4_2)*x2_1+3*x2_2*(b*d_1+a_1-x3_1-x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, a_3, d_3, ((x3_2-a_2)*x2_0+(2*x3_1-2*a_1)*x2_1-x2_2*(a_0-x3_0))*k5+k6*x3_2+x3_3, ((-d_0*x2_2-2*d_1*x2_1-d_2*x2_0)*b+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b*d_0+a_0-x3_0-x4_0)*x2_4+(4*d_1*x2_3+6*d_2*x2_2+4*d_3*x2_1+d_4*x2_0)*b+(a_4-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3+4*a_3)*x2_1+(-6*x3_2-6*x4_2+6*a_2)*x2_2-4*x2_3*(x3_1+x4_1-a_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, a_4, d_4, ((x3_3-a_3)*x2_0+(3*x3_2-3*a_2)*x2_1+(3*x3_1-3*a_1)*x2_2+x2_3*(-a_0+x3_0))*k5+k6*x3_3+x3_4, ((-d_0*x2_3-3*d_1*x2_2-3*d_2*x2_1-d_3*x2_0)*b+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((d_0*x2_5+5*d_1*x2_4+10*d_2*x2_3+10*d_3*x2_2+5*d_4*x2_1+d_5*x2_0)*b+(-x3_0-x4_0+a_0)*x2_5+(a_5-x3_5-x4_5)*x2_0+(5*a_4-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3+10*a_3)*x2_2+(-10*x3_2-10*x4_2+10*a_2)*x2_3-5*x2_4*(x3_1+x4_1-a_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, a_5, d_5, ((x3_4-a_4)*x2_0+(4*x3_3-4*a_3)*x2_1+(6*x3_2-6*a_2)*x2_2+(4*x3_1-4*a_1)*x2_3+x2_4*(-a_0+x3_0))*k5+k6*x3_4+x3_5, ((-d_0*x2_4-4*d_1*x2_3-6*d_2*x2_2-4*d_3*x2_1-d_4*x2_0)*b+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((d_0*x2_6+6*d_1*x2_5+15*d_2*x2_4+20*d_3*x2_3+15*d_4*x2_2+6*d_5*x2_1+d_6*x2_0)*b+(-x3_0-x4_0+a_0)*x2_6+(a_6-x3_6-x4_6)*x2_0+(6*a_5-6*x3_5-6*x4_5)*x2_1+(15*a_4-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3+20*a_3)*x2_3+(-15*x3_2-15*x4_2+15*a_2)*x2_4-6*x2_5*(x3_1+x4_1-a_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, a_6, d_6, ((x3_5-a_5)*x2_0+(5*x3_4-5*a_4)*x2_1+(10*x3_3-10*a_3)*x2_2+(10*x3_2-10*a_2)*x2_3+(5*x3_1-5*a_1)*x2_4+x2_5*(-a_0+x3_0))*k5+k6*x3_5+x3_6, ((-d_0*x2_5-5*d_1*x2_4-10*d_2*x2_3-10*d_3*x2_2-5*d_4*x2_1-d_5*x2_0)*b+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((d_0*x2_7+7*d_1*x2_6+21*d_2*x2_5+35*d_3*x2_4+35*d_4*x2_3+21*d_5*x2_2+7*d_6*x2_1+d_7*x2_0)*b+(-x3_0-x4_0+a_0)*x2_7+(a_7-x3_7-x4_7)*x2_0+(7*a_6-7*x3_6-7*x4_6)*x2_1+(21*a_5-21*x3_5-21*x4_5)*x2_2+(35*a_4-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3+35*a_3)*x2_4+(-21*x3_2-21*x4_2+21*a_2)*x2_5-7*x2_6*(x3_1+x4_1-a_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, a_7, d_7, ((x3_6-a_6)*x2_0+(6*x3_5-6*a_5)*x2_1+(15*x3_4-15*a_4)*x2_2+(20*x3_3-20*a_3)*x2_3+(15*x3_2-15*a_2)*x2_4+(6*x3_1-6*a_1)*x2_5+x2_6*(-a_0+x3_0))*k5+k6*x3_6+x3_7, ((-d_0*x2_6-6*d_1*x2_5-15*d_2*x2_4-20*d_3*x2_3-15*d_4*x2_2-6*d_5*x2_1-d_6*x2_0)*b+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -a_1+y_faux1_1, -a_2+y_faux1_2, -a_3+y_faux1_3, -a_4+y_faux1_4, -a_5+y_faux1_5, -a_6+y_faux1_6, -a_7+y_faux1_7, -d_1+y_faux2_1, -d_2+y_faux2_2, -d_3+y_faux2_3, -d_4+y_faux2_4, -d_5+y_faux2_5, -d_6+y_faux2_6, -d_7+y_faux2_7, y_faux3_0-x3_1]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = a_0, y_faux1_1 = a_1, y_faux1_2 = a_2, y_faux1_3 = a_3, y_faux1_4 = a_4, y_faux1_5 = a_5, y_faux1_6 = a_6, y_faux1_7 = a_7, y_faux1_8 = a_8, y_faux1_9 = a_9, y_faux1_10 = a_10, y_faux1_11 = a_11, y_faux1_12 = a_12, y_faux1_13 = a_13, y_faux1_14 = a_14, y_faux2_0 = d_0, y_faux2_1 = d_1, y_faux2_2 = d_2, y_faux2_3 = d_3, y_faux2_4 = d_4, y_faux2_5 = d_5, y_faux2_6 = d_6, y_faux2_7 = d_7, y_faux2_8 = d_8, y_faux2_9 = d_9, y_faux2_10 = d_10, y_faux2_11 = d_11, y_faux2_12 = d_12, y_faux2_13 = d_13, y_faux2_14 = d_14, y_faux3_0 = x3_1]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability:  723190167600000000000000
Random sample for the outputs and inputs is generated from  [b = 384313290996704137962158, k3 = 173757054495033698332836, k4 = 135450214064676995804966, k5 = 514603182118688648787360, k6 = 233822467193178773700868, k7 = 564977035389744225172635, a_0 = 317717909660864717007066, d_0 = 6280598692642116921716, x1_0 = 500908878695996689751959, x2_0 = 459182198782040932659287, x3_0 = 10424754551693874501287, x4_0 = 28696288102183008934678, x5_0 = 177295782954560301615842]
The polynomial system widehat{E^t} contains  83 equations in  68  variables
            "new_logs/Tumor/transcendence_19_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [a, d, x3_2]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {a, d}
Algebraically independent parameters among derivatives: {x3_2}
	Adding ODEs: [diff(a(t),t) = 0, diff(d(t),t) = 0]
	Adding output functions: [y_faux1(t) = a(t), y_faux2(t) = d(t)]
	New system: [diff(a(t),t) = 0, diff(d(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b*d(t)*k5+a(t)*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a(t)*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b*d(t)*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = a(t), y_faux2(t) = d(t)]

=== Input info ===
State variables:          [a(t), d(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t), y_faux2(t)]
Input variables:          []
Parameters in equations:  [b, k3, k4, k5, k6, k7]
===================

memory used=5463.4MB, alloc=183.8MB, time=49.60
memory used=5592.2MB, alloc=183.8MB, time=50.70
memory used=5692.1MB, alloc=183.8MB, time=51.45
	Adding new y-equations: [y_faux3_0 = x3_2]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-a_0, a_1, y_faux2_0-d_0, d_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b*d_0*k5*x2_0+a_0*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b*d_0+a_0-x3_0-x4_0)*x2_1+x2_0*(b*d_1+a_1-x3_1-x4_1))*k5-x1_1*k3+k4*x2_1-k6*x3_1-k6*x4_1+x2_2, -a_0*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b*d_0*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b*d_0+a_0-x3_0-x4_0)*x2_2+(b*d_2+a_2-x3_2-x4_2)*x2_0+2*x2_1*(b*d_1+a_1-x3_1-x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, a_2, d_2, ((-a_1+x3_1)*x2_0-x2_1*(a_0-x3_0))*k5+k6*x3_1+x3_2, ((-b*d_1+x4_1)*x2_0-x2_1*(b*d_0-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b*d_0+a_0-x3_0-x4_0)*x2_3+(b*d_3+a_3-x3_3-x4_3)*x2_0+(3*b*d_2+3*a_2-3*x3_2-3*x4_2)*x2_1+3*x2_2*(b*d_1+a_1-x3_1-x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, a_3, d_3, ((x3_2-a_2)*x2_0+(2*x3_1-2*a_1)*x2_1-x2_2*(a_0-x3_0))*k5+k6*x3_2+x3_3, ((-d_0*x2_2-2*d_1*x2_1-d_2*x2_0)*b+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b*d_0+a_0-x3_0-x4_0)*x2_4+(4*d_1*x2_3+6*d_2*x2_2+4*d_3*x2_1+d_4*x2_0)*b+(a_4-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3+4*a_3)*x2_1+(-6*x3_2-6*x4_2+6*a_2)*x2_2-4*x2_3*(x3_1+x4_1-a_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, a_4, d_4, ((x3_3-a_3)*x2_0+(3*x3_2-3*a_2)*x2_1+(3*x3_1-3*a_1)*x2_2+x2_3*(-a_0+x3_0))*k5+k6*x3_3+x3_4, ((-d_0*x2_3-3*d_1*x2_2-3*d_2*x2_1-d_3*x2_0)*b+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((d_0*x2_5+5*d_1*x2_4+10*d_2*x2_3+10*d_3*x2_2+5*d_4*x2_1+d_5*x2_0)*b+(-x3_0-x4_0+a_0)*x2_5+(a_5-x3_5-x4_5)*x2_0+(5*a_4-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3+10*a_3)*x2_2+(-10*x3_2-10*x4_2+10*a_2)*x2_3-5*x2_4*(x3_1+x4_1-a_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, a_5, d_5, ((x3_4-a_4)*x2_0+(4*x3_3-4*a_3)*x2_1+(6*x3_2-6*a_2)*x2_2+(4*x3_1-4*a_1)*x2_3+x2_4*(-a_0+x3_0))*k5+k6*x3_4+x3_5, ((-d_0*x2_4-4*d_1*x2_3-6*d_2*x2_2-4*d_3*x2_1-d_4*x2_0)*b+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((d_0*x2_6+6*d_1*x2_5+15*d_2*x2_4+20*d_3*x2_3+15*d_4*x2_2+6*d_5*x2_1+d_6*x2_0)*b+(-x3_0-x4_0+a_0)*x2_6+(a_6-x3_6-x4_6)*x2_0+(6*a_5-6*x3_5-6*x4_5)*x2_1+(15*a_4-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3+20*a_3)*x2_3+(-15*x3_2-15*x4_2+15*a_2)*x2_4-6*x2_5*(x3_1+x4_1-a_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, a_6, d_6, ((x3_5-a_5)*x2_0+(5*x3_4-5*a_4)*x2_1+(10*x3_3-10*a_3)*x2_2+(10*x3_2-10*a_2)*x2_3+(5*x3_1-5*a_1)*x2_4+x2_5*(-a_0+x3_0))*k5+k6*x3_5+x3_6, ((-d_0*x2_5-5*d_1*x2_4-10*d_2*x2_3-10*d_3*x2_2-5*d_4*x2_1-d_5*x2_0)*b+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((d_0*x2_7+7*d_1*x2_6+21*d_2*x2_5+35*d_3*x2_4+35*d_4*x2_3+21*d_5*x2_2+7*d_6*x2_1+d_7*x2_0)*b+(-x3_0-x4_0+a_0)*x2_7+(a_7-x3_7-x4_7)*x2_0+(7*a_6-7*x3_6-7*x4_6)*x2_1+(21*a_5-21*x3_5-21*x4_5)*x2_2+(35*a_4-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3+35*a_3)*x2_4+(-21*x3_2-21*x4_2+21*a_2)*x2_5-7*x2_6*(x3_1+x4_1-a_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, a_7, d_7, ((x3_6-a_6)*x2_0+(6*x3_5-6*a_5)*x2_1+(15*x3_4-15*a_4)*x2_2+(20*x3_3-20*a_3)*x2_3+(15*x3_2-15*a_2)*x2_4+(6*x3_1-6*a_1)*x2_5+x2_6*(-a_0+x3_0))*k5+k6*x3_6+x3_7, ((-d_0*x2_6-6*d_1*x2_5-15*d_2*x2_4-20*d_3*x2_3-15*d_4*x2_2-6*d_5*x2_1-d_6*x2_0)*b+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -a_1+y_faux1_1, -a_2+y_faux1_2, -a_3+y_faux1_3, -a_4+y_faux1_4, -a_5+y_faux1_5, -a_6+y_faux1_6, -a_7+y_faux1_7, -d_1+y_faux2_1, -d_2+y_faux2_2, -d_3+y_faux2_3, -d_4+y_faux2_4, -d_5+y_faux2_5, -d_6+y_faux2_6, -d_7+y_faux2_7, y_faux3_0-x3_2]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = a_0, y_faux1_1 = a_1, y_faux1_2 = a_2, y_faux1_3 = a_3, y_faux1_4 = a_4, y_faux1_5 = a_5, y_faux1_6 = a_6, y_faux1_7 = a_7, y_faux1_8 = a_8, y_faux1_9 = a_9, y_faux1_10 = a_10, y_faux1_11 = a_11, y_faux1_12 = a_12, y_faux1_13 = a_13, y_faux1_14 = a_14, y_faux2_0 = d_0, y_faux2_1 = d_1, y_faux2_2 = d_2, y_faux2_3 = d_3, y_faux2_4 = d_4, y_faux2_5 = d_5, y_faux2_6 = d_6, y_faux2_7 = d_7, y_faux2_8 = d_8, y_faux2_9 = d_9, y_faux2_10 = d_10, y_faux2_11 = d_11, y_faux2_12 = d_12, y_faux2_13 = d_13, y_faux2_14 = d_14, y_faux3_0 = x3_2]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability:  723190167600000000000000
Random sample for the outputs and inputs is generated from  [b = 179530669968586569533218, k3 = 569393010850301523059767, k4 = 619983150213059015795693, k5 = 641813232334653395569334, k6 = 597895276675960317992480, k7 = 690906784160626105810966, a_0 = 399756596444388417757923, d_0 = 9665926679821278691126, x1_0 = 25744224504896283807750, x2_0 = 525198988752518766979471, x3_0 = 460137759720920172526872, x4_0 = 695975022564115101973386, x5_0 = 95000984966383587125694]
The polynomial system widehat{E^t} contains  83 equations in  68  variables
            "new_logs/Tumor/transcendence_20_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [a, d, x3_3]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {a, d}
Algebraically independent parameters among derivatives: {x3_3}
	Adding ODEs: [diff(a(t),t) = 0, diff(d(t),t) = 0]
	Adding output functions: [y_faux1(t) = a(t), y_faux2(t) = d(t)]
	New system: [diff(a(t),t) = 0, diff(d(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b*d(t)*k5+a(t)*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a(t)*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b*d(t)*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = a(t), y_faux2(t) = d(t)]

=== Input info ===
State variables:          [a(t), d(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t), y_faux2(t)]
Input variables:          []
Parameters in equations:  [b, k3, k4, k5, k6, k7]
===================

memory used=5812.6MB, alloc=183.8MB, time=52.72
memory used=5912.2MB, alloc=183.8MB, time=53.48
	Adding new y-equations: [y_faux3_0 = x3_3]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-a_0, a_1, y_faux2_0-d_0, d_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b*d_0*k5*x2_0+a_0*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b*d_0+a_0-x3_0-x4_0)*x2_1+x2_0*(b*d_1+a_1-x3_1-x4_1))*k5-x1_1*k3+k4*x2_1-k6*x3_1-k6*x4_1+x2_2, -a_0*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b*d_0*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b*d_0+a_0-x3_0-x4_0)*x2_2+(b*d_2+a_2-x3_2-x4_2)*x2_0+2*x2_1*(b*d_1+a_1-x3_1-x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, a_2, d_2, ((-a_1+x3_1)*x2_0-x2_1*(a_0-x3_0))*k5+k6*x3_1+x3_2, ((-b*d_1+x4_1)*x2_0-x2_1*(b*d_0-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b*d_0+a_0-x3_0-x4_0)*x2_3+(b*d_3+a_3-x3_3-x4_3)*x2_0+(3*b*d_2+3*a_2-3*x3_2-3*x4_2)*x2_1+3*x2_2*(b*d_1+a_1-x3_1-x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, a_3, d_3, ((x3_2-a_2)*x2_0+(2*x3_1-2*a_1)*x2_1-x2_2*(a_0-x3_0))*k5+k6*x3_2+x3_3, ((-d_0*x2_2-2*d_1*x2_1-d_2*x2_0)*b+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b*d_0+a_0-x3_0-x4_0)*x2_4+(4*d_1*x2_3+6*d_2*x2_2+4*d_3*x2_1+d_4*x2_0)*b+(a_4-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3+4*a_3)*x2_1+(-6*x3_2-6*x4_2+6*a_2)*x2_2-4*x2_3*(x3_1+x4_1-a_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, a_4, d_4, ((x3_3-a_3)*x2_0+(3*x3_2-3*a_2)*x2_1+(3*x3_1-3*a_1)*x2_2+x2_3*(-a_0+x3_0))*k5+k6*x3_3+x3_4, ((-d_0*x2_3-3*d_1*x2_2-3*d_2*x2_1-d_3*x2_0)*b+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((d_0*x2_5+5*d_1*x2_4+10*d_2*x2_3+10*d_3*x2_2+5*d_4*x2_1+d_5*x2_0)*b+(-x3_0-x4_0+a_0)*x2_5+(a_5-x3_5-x4_5)*x2_0+(5*a_4-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3+10*a_3)*x2_2+(-10*x3_2-10*x4_2+10*a_2)*x2_3-5*x2_4*(x3_1+x4_1-a_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, a_5, d_5, ((x3_4-a_4)*x2_0+(4*x3_3-4*a_3)*x2_1+(6*x3_2-6*a_2)*x2_2+(4*x3_1-4*a_1)*x2_3+x2_4*(-a_0+x3_0))*k5+k6*x3_4+x3_5, ((-d_0*x2_4-4*d_1*x2_3-6*d_2*x2_2-4*d_3*x2_1-d_4*x2_0)*b+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((d_0*x2_6+6*d_1*x2_5+15*d_2*x2_4+20*d_3*x2_3+15*d_4*x2_2+6*d_5*x2_1+d_6*x2_0)*b+(-x3_0-x4_0+a_0)*x2_6+(a_6-x3_6-x4_6)*x2_0+(6*a_5-6*x3_5-6*x4_5)*x2_1+(15*a_4-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3+20*a_3)*x2_3+(-15*x3_2-15*x4_2+15*a_2)*x2_4-6*x2_5*(x3_1+x4_1-a_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, a_6, d_6, ((x3_5-a_5)*x2_0+(5*x3_4-5*a_4)*x2_1+(10*x3_3-10*a_3)*x2_2+(10*x3_2-10*a_2)*x2_3+(5*x3_1-5*a_1)*x2_4+x2_5*(-a_0+x3_0))*k5+k6*x3_5+x3_6, ((-d_0*x2_5-5*d_1*x2_4-10*d_2*x2_3-10*d_3*x2_2-5*d_4*x2_1-d_5*x2_0)*b+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((d_0*x2_7+7*d_1*x2_6+21*d_2*x2_5+35*d_3*x2_4+35*d_4*x2_3+21*d_5*x2_2+7*d_6*x2_1+d_7*x2_0)*b+(-x3_0-x4_0+a_0)*x2_7+(a_7-x3_7-x4_7)*x2_0+(7*a_6-7*x3_6-7*x4_6)*x2_1+(21*a_5-21*x3_5-21*x4_5)*x2_2+(35*a_4-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3+35*a_3)*x2_4+(-21*x3_2-21*x4_2+21*a_2)*x2_5-7*x2_6*(x3_1+x4_1-a_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, a_7, d_7, ((x3_6-a_6)*x2_0+(6*x3_5-6*a_5)*x2_1+(15*x3_4-15*a_4)*x2_2+(20*x3_3-20*a_3)*x2_3+(15*x3_2-15*a_2)*x2_4+(6*x3_1-6*a_1)*x2_5+x2_6*(-a_0+x3_0))*k5+k6*x3_6+x3_7, ((-d_0*x2_6-6*d_1*x2_5-15*d_2*x2_4-20*d_3*x2_3-15*d_4*x2_2-6*d_5*x2_1-d_6*x2_0)*b+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -a_1+y_faux1_1, -a_2+y_faux1_2, -a_3+y_faux1_3, -a_4+y_faux1_4, -a_5+y_faux1_5, -a_6+y_faux1_6, -a_7+y_faux1_7, -d_1+y_faux2_1, -d_2+y_faux2_2, -d_3+y_faux2_3, -d_4+y_faux2_4, -d_5+y_faux2_5, -d_6+y_faux2_6, -d_7+y_faux2_7, y_faux3_0-x3_3]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = a_0, y_faux1_1 = a_1, y_faux1_2 = a_2, y_faux1_3 = a_3, y_faux1_4 = a_4, y_faux1_5 = a_5, y_faux1_6 = a_6, y_faux1_7 = a_7, y_faux1_8 = a_8, y_faux1_9 = a_9, y_faux1_10 = a_10, y_faux1_11 = a_11, y_faux1_12 = a_12, y_faux1_13 = a_13, y_faux1_14 = a_14, y_faux2_0 = d_0, y_faux2_1 = d_1, y_faux2_2 = d_2, y_faux2_3 = d_3, y_faux2_4 = d_4, y_faux2_5 = d_5, y_faux2_6 = d_6, y_faux2_7 = d_7, y_faux2_8 = d_8, y_faux2_9 = d_9, y_faux2_10 = d_10, y_faux2_11 = d_11, y_faux2_12 = d_12, y_faux2_13 = d_13, y_faux2_14 = d_14, y_faux3_0 = x3_3]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability:  723190167600000000000000
Random sample for the outputs and inputs is generated from  [b = 560849973556473566701730, k3 = 707953159921619250309493, k4 = 324680329587218062909714, k5 = 381346547388377870568690, k6 = 259414744993483181260391, k7 = 217764817805228825444930, a_0 = 31195760846976913846213, d_0 = 235926367627504601135780, x1_0 = 208962007207733348884079, x2_0 = 277429235358512891385206, x3_0 = 439533340945100015294478, x4_0 = 391369962698962030617404, x5_0 = 169261209663014701668439]
The polynomial system widehat{E^t} contains  83 equations in  68  variables
            "new_logs/Tumor/transcendence_21_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [a, d, x3_4]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {a, d}
Algebraically independent parameters among derivatives: {x3_4}
	Adding ODEs: [diff(a(t),t) = 0, diff(d(t),t) = 0]
	Adding output functions: [y_faux1(t) = a(t), y_faux2(t) = d(t)]
	New system: [diff(a(t),t) = 0, diff(d(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b*d(t)*k5+a(t)*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a(t)*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b*d(t)*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = a(t), y_faux2(t) = d(t)]

=== Input info ===
State variables:          [a(t), d(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t), y_faux2(t)]
Input variables:          []
Parameters in equations:  [b, k3, k4, k5, k6, k7]
===================

memory used=6037.5MB, alloc=183.8MB, time=54.68
memory used=6167.2MB, alloc=183.8MB, time=55.72
memory used=6266.8MB, alloc=183.8MB, time=56.47
	Adding new y-equations: [y_faux3_0 = x3_4]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-a_0, a_1, y_faux2_0-d_0, d_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b*d_0*k5*x2_0+a_0*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b*d_0+a_0-x3_0-x4_0)*x2_1+x2_0*(b*d_1+a_1-x3_1-x4_1))*k5-x1_1*k3+k4*x2_1-k6*x3_1-k6*x4_1+x2_2, -a_0*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b*d_0*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b*d_0+a_0-x3_0-x4_0)*x2_2+(b*d_2+a_2-x3_2-x4_2)*x2_0+2*x2_1*(b*d_1+a_1-x3_1-x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, a_2, d_2, ((-a_1+x3_1)*x2_0-x2_1*(a_0-x3_0))*k5+k6*x3_1+x3_2, ((-b*d_1+x4_1)*x2_0-x2_1*(b*d_0-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b*d_0+a_0-x3_0-x4_0)*x2_3+(b*d_3+a_3-x3_3-x4_3)*x2_0+(3*b*d_2+3*a_2-3*x3_2-3*x4_2)*x2_1+3*x2_2*(b*d_1+a_1-x3_1-x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, a_3, d_3, ((x3_2-a_2)*x2_0+(2*x3_1-2*a_1)*x2_1-x2_2*(a_0-x3_0))*k5+k6*x3_2+x3_3, ((-d_0*x2_2-2*d_1*x2_1-d_2*x2_0)*b+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b*d_0+a_0-x3_0-x4_0)*x2_4+(4*d_1*x2_3+6*d_2*x2_2+4*d_3*x2_1+d_4*x2_0)*b+(a_4-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3+4*a_3)*x2_1+(-6*x3_2-6*x4_2+6*a_2)*x2_2-4*x2_3*(x3_1+x4_1-a_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, a_4, d_4, ((x3_3-a_3)*x2_0+(3*x3_2-3*a_2)*x2_1+(3*x3_1-3*a_1)*x2_2+x2_3*(-a_0+x3_0))*k5+k6*x3_3+x3_4, ((-d_0*x2_3-3*d_1*x2_2-3*d_2*x2_1-d_3*x2_0)*b+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((d_0*x2_5+5*d_1*x2_4+10*d_2*x2_3+10*d_3*x2_2+5*d_4*x2_1+d_5*x2_0)*b+(-x3_0-x4_0+a_0)*x2_5+(a_5-x3_5-x4_5)*x2_0+(5*a_4-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3+10*a_3)*x2_2+(-10*x3_2-10*x4_2+10*a_2)*x2_3-5*x2_4*(x3_1+x4_1-a_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, a_5, d_5, ((x3_4-a_4)*x2_0+(4*x3_3-4*a_3)*x2_1+(6*x3_2-6*a_2)*x2_2+(4*x3_1-4*a_1)*x2_3+x2_4*(-a_0+x3_0))*k5+k6*x3_4+x3_5, ((-d_0*x2_4-4*d_1*x2_3-6*d_2*x2_2-4*d_3*x2_1-d_4*x2_0)*b+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((d_0*x2_6+6*d_1*x2_5+15*d_2*x2_4+20*d_3*x2_3+15*d_4*x2_2+6*d_5*x2_1+d_6*x2_0)*b+(-x3_0-x4_0+a_0)*x2_6+(a_6-x3_6-x4_6)*x2_0+(6*a_5-6*x3_5-6*x4_5)*x2_1+(15*a_4-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3+20*a_3)*x2_3+(-15*x3_2-15*x4_2+15*a_2)*x2_4-6*x2_5*(x3_1+x4_1-a_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, a_6, d_6, ((x3_5-a_5)*x2_0+(5*x3_4-5*a_4)*x2_1+(10*x3_3-10*a_3)*x2_2+(10*x3_2-10*a_2)*x2_3+(5*x3_1-5*a_1)*x2_4+x2_5*(-a_0+x3_0))*k5+k6*x3_5+x3_6, ((-d_0*x2_5-5*d_1*x2_4-10*d_2*x2_3-10*d_3*x2_2-5*d_4*x2_1-d_5*x2_0)*b+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((d_0*x2_7+7*d_1*x2_6+21*d_2*x2_5+35*d_3*x2_4+35*d_4*x2_3+21*d_5*x2_2+7*d_6*x2_1+d_7*x2_0)*b+(-x3_0-x4_0+a_0)*x2_7+(a_7-x3_7-x4_7)*x2_0+(7*a_6-7*x3_6-7*x4_6)*x2_1+(21*a_5-21*x3_5-21*x4_5)*x2_2+(35*a_4-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3+35*a_3)*x2_4+(-21*x3_2-21*x4_2+21*a_2)*x2_5-7*x2_6*(x3_1+x4_1-a_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, a_7, d_7, ((x3_6-a_6)*x2_0+(6*x3_5-6*a_5)*x2_1+(15*x3_4-15*a_4)*x2_2+(20*x3_3-20*a_3)*x2_3+(15*x3_2-15*a_2)*x2_4+(6*x3_1-6*a_1)*x2_5+x2_6*(-a_0+x3_0))*k5+k6*x3_6+x3_7, ((-d_0*x2_6-6*d_1*x2_5-15*d_2*x2_4-20*d_3*x2_3-15*d_4*x2_2-6*d_5*x2_1-d_6*x2_0)*b+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -a_1+y_faux1_1, -a_2+y_faux1_2, -a_3+y_faux1_3, -a_4+y_faux1_4, -a_5+y_faux1_5, -a_6+y_faux1_6, -a_7+y_faux1_7, -d_1+y_faux2_1, -d_2+y_faux2_2, -d_3+y_faux2_3, -d_4+y_faux2_4, -d_5+y_faux2_5, -d_6+y_faux2_6, -d_7+y_faux2_7, y_faux3_0-x3_4]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = a_0, y_faux1_1 = a_1, y_faux1_2 = a_2, y_faux1_3 = a_3, y_faux1_4 = a_4, y_faux1_5 = a_5, y_faux1_6 = a_6, y_faux1_7 = a_7, y_faux1_8 = a_8, y_faux1_9 = a_9, y_faux1_10 = a_10, y_faux1_11 = a_11, y_faux1_12 = a_12, y_faux1_13 = a_13, y_faux1_14 = a_14, y_faux2_0 = d_0, y_faux2_1 = d_1, y_faux2_2 = d_2, y_faux2_3 = d_3, y_faux2_4 = d_4, y_faux2_5 = d_5, y_faux2_6 = d_6, y_faux2_7 = d_7, y_faux2_8 = d_8, y_faux2_9 = d_9, y_faux2_10 = d_10, y_faux2_11 = d_11, y_faux2_12 = d_12, y_faux2_13 = d_13, y_faux2_14 = d_14, y_faux3_0 = x3_4]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability:  723190167600000000000000
Random sample for the outputs and inputs is generated from  [b = 506910550338473656413288, k3 = 16109595258842139780893, k4 = 650889550129873833875940, k5 = 713109291148006916132411, k6 = 115237730668536551442543, k7 = 117506944425473217982438, a_0 = 187206327491679420504817, d_0 = 509483860541746751006750, x1_0 = 543728220210405625418351, x2_0 = 104784814144741851240584, x3_0 = 235792364508131689911029, x4_0 = 273301392037327563606644, x5_0 = 374468247134816805978047]
The polynomial system widehat{E^t} contains  83 equations in  68  variables
            "new_logs/Tumor/transcendence_22_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [a, d, x3_5]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {a, d}
Algebraically independent parameters among derivatives: {x3_5}
	Adding ODEs: [diff(a(t),t) = 0, diff(d(t),t) = 0]
	Adding output functions: [y_faux1(t) = a(t), y_faux2(t) = d(t)]
	New system: [diff(a(t),t) = 0, diff(d(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b*d(t)*k5+a(t)*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a(t)*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b*d(t)*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = a(t), y_faux2(t) = d(t)]

=== Input info ===
State variables:          [a(t), d(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t), y_faux2(t)]
Input variables:          []
Parameters in equations:  [b, k3, k4, k5, k6, k7]
===================

memory used=6387.7MB, alloc=183.8MB, time=57.73
memory used=6487.4MB, alloc=183.8MB, time=58.49
	Adding new y-equations: [y_faux3_0 = x3_5]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-a_0, a_1, y_faux2_0-d_0, d_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b*d_0*k5*x2_0+a_0*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b*d_0+a_0-x3_0-x4_0)*x2_1+x2_0*(b*d_1+a_1-x3_1-x4_1))*k5-x1_1*k3+k4*x2_1-k6*x3_1-k6*x4_1+x2_2, -a_0*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b*d_0*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b*d_0+a_0-x3_0-x4_0)*x2_2+(b*d_2+a_2-x3_2-x4_2)*x2_0+2*x2_1*(b*d_1+a_1-x3_1-x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, a_2, d_2, ((-a_1+x3_1)*x2_0-x2_1*(a_0-x3_0))*k5+k6*x3_1+x3_2, ((-b*d_1+x4_1)*x2_0-x2_1*(b*d_0-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b*d_0+a_0-x3_0-x4_0)*x2_3+(b*d_3+a_3-x3_3-x4_3)*x2_0+(3*b*d_2+3*a_2-3*x3_2-3*x4_2)*x2_1+3*x2_2*(b*d_1+a_1-x3_1-x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, a_3, d_3, ((x3_2-a_2)*x2_0+(2*x3_1-2*a_1)*x2_1-x2_2*(a_0-x3_0))*k5+k6*x3_2+x3_3, ((-d_0*x2_2-2*d_1*x2_1-d_2*x2_0)*b+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b*d_0+a_0-x3_0-x4_0)*x2_4+(4*d_1*x2_3+6*d_2*x2_2+4*d_3*x2_1+d_4*x2_0)*b+(a_4-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3+4*a_3)*x2_1+(-6*x3_2-6*x4_2+6*a_2)*x2_2-4*x2_3*(x3_1+x4_1-a_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, a_4, d_4, ((x3_3-a_3)*x2_0+(3*x3_2-3*a_2)*x2_1+(3*x3_1-3*a_1)*x2_2+x2_3*(-a_0+x3_0))*k5+k6*x3_3+x3_4, ((-d_0*x2_3-3*d_1*x2_2-3*d_2*x2_1-d_3*x2_0)*b+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((d_0*x2_5+5*d_1*x2_4+10*d_2*x2_3+10*d_3*x2_2+5*d_4*x2_1+d_5*x2_0)*b+(-x3_0-x4_0+a_0)*x2_5+(a_5-x3_5-x4_5)*x2_0+(5*a_4-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3+10*a_3)*x2_2+(-10*x3_2-10*x4_2+10*a_2)*x2_3-5*x2_4*(x3_1+x4_1-a_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, a_5, d_5, ((x3_4-a_4)*x2_0+(4*x3_3-4*a_3)*x2_1+(6*x3_2-6*a_2)*x2_2+(4*x3_1-4*a_1)*x2_3+x2_4*(-a_0+x3_0))*k5+k6*x3_4+x3_5, ((-d_0*x2_4-4*d_1*x2_3-6*d_2*x2_2-4*d_3*x2_1-d_4*x2_0)*b+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((d_0*x2_6+6*d_1*x2_5+15*d_2*x2_4+20*d_3*x2_3+15*d_4*x2_2+6*d_5*x2_1+d_6*x2_0)*b+(-x3_0-x4_0+a_0)*x2_6+(a_6-x3_6-x4_6)*x2_0+(6*a_5-6*x3_5-6*x4_5)*x2_1+(15*a_4-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3+20*a_3)*x2_3+(-15*x3_2-15*x4_2+15*a_2)*x2_4-6*x2_5*(x3_1+x4_1-a_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, a_6, d_6, ((x3_5-a_5)*x2_0+(5*x3_4-5*a_4)*x2_1+(10*x3_3-10*a_3)*x2_2+(10*x3_2-10*a_2)*x2_3+(5*x3_1-5*a_1)*x2_4+x2_5*(-a_0+x3_0))*k5+k6*x3_5+x3_6, ((-d_0*x2_5-5*d_1*x2_4-10*d_2*x2_3-10*d_3*x2_2-5*d_4*x2_1-d_5*x2_0)*b+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((d_0*x2_7+7*d_1*x2_6+21*d_2*x2_5+35*d_3*x2_4+35*d_4*x2_3+21*d_5*x2_2+7*d_6*x2_1+d_7*x2_0)*b+(-x3_0-x4_0+a_0)*x2_7+(a_7-x3_7-x4_7)*x2_0+(7*a_6-7*x3_6-7*x4_6)*x2_1+(21*a_5-21*x3_5-21*x4_5)*x2_2+(35*a_4-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3+35*a_3)*x2_4+(-21*x3_2-21*x4_2+21*a_2)*x2_5-7*x2_6*(x3_1+x4_1-a_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, a_7, d_7, ((x3_6-a_6)*x2_0+(6*x3_5-6*a_5)*x2_1+(15*x3_4-15*a_4)*x2_2+(20*x3_3-20*a_3)*x2_3+(15*x3_2-15*a_2)*x2_4+(6*x3_1-6*a_1)*x2_5+x2_6*(-a_0+x3_0))*k5+k6*x3_6+x3_7, ((-d_0*x2_6-6*d_1*x2_5-15*d_2*x2_4-20*d_3*x2_3-15*d_4*x2_2-6*d_5*x2_1-d_6*x2_0)*b+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -a_1+y_faux1_1, -a_2+y_faux1_2, -a_3+y_faux1_3, -a_4+y_faux1_4, -a_5+y_faux1_5, -a_6+y_faux1_6, -a_7+y_faux1_7, -d_1+y_faux2_1, -d_2+y_faux2_2, -d_3+y_faux2_3, -d_4+y_faux2_4, -d_5+y_faux2_5, -d_6+y_faux2_6, -d_7+y_faux2_7, y_faux3_0-x3_5]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = a_0, y_faux1_1 = a_1, y_faux1_2 = a_2, y_faux1_3 = a_3, y_faux1_4 = a_4, y_faux1_5 = a_5, y_faux1_6 = a_6, y_faux1_7 = a_7, y_faux1_8 = a_8, y_faux1_9 = a_9, y_faux1_10 = a_10, y_faux1_11 = a_11, y_faux1_12 = a_12, y_faux1_13 = a_13, y_faux1_14 = a_14, y_faux2_0 = d_0, y_faux2_1 = d_1, y_faux2_2 = d_2, y_faux2_3 = d_3, y_faux2_4 = d_4, y_faux2_5 = d_5, y_faux2_6 = d_6, y_faux2_7 = d_7, y_faux2_8 = d_8, y_faux2_9 = d_9, y_faux2_10 = d_10, y_faux2_11 = d_11, y_faux2_12 = d_12, y_faux2_13 = d_13, y_faux2_14 = d_14, y_faux3_0 = x3_5]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability:  723190167600000000000000
Random sample for the outputs and inputs is generated from  [b = 8885490310899506408610, k3 = 129891929906087253360569, k4 = 587374508327631061120220, k5 = 145581057335660625470128, k6 = 133721238247430322877832, k7 = 676791522949710388288854, a_0 = 293379930121751668941787, d_0 = 711399113158379640740805, x1_0 = 535868045703311993605380, x2_0 = 250720636701653603894112, x3_0 = 612064674343321449205446, x4_0 = 419974137180819176170639, x5_0 = 60851350963035258059259]
The polynomial system widehat{E^t} contains  83 equations in  68  variables
            "new_logs/Tumor/transcendence_23_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [a, d, x3_6]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {a, d}
Algebraically independent parameters among derivatives: {x3_6}
	Adding ODEs: [diff(a(t),t) = 0, diff(d(t),t) = 0]
	Adding output functions: [y_faux1(t) = a(t), y_faux2(t) = d(t)]
	New system: [diff(a(t),t) = 0, diff(d(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b*d(t)*k5+a(t)*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a(t)*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b*d(t)*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = a(t), y_faux2(t) = d(t)]

=== Input info ===
State variables:          [a(t), d(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t), y_faux2(t)]
Input variables:          []
Parameters in equations:  [b, k3, k4, k5, k6, k7]
===================

memory used=6612.9MB, alloc=183.8MB, time=59.66
memory used=6745.0MB, alloc=183.8MB, time=60.77
memory used=6845.9MB, alloc=183.8MB, time=61.53
	Adding new y-equations: [y_faux3_0 = x3_6]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-a_0, a_1, y_faux2_0-d_0, d_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b*d_0*k5*x2_0+a_0*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b*d_0+a_0-x3_0-x4_0)*x2_1+x2_0*(b*d_1+a_1-x3_1-x4_1))*k5-x1_1*k3+k4*x2_1-k6*x3_1-k6*x4_1+x2_2, -a_0*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b*d_0*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b*d_0+a_0-x3_0-x4_0)*x2_2+(b*d_2+a_2-x3_2-x4_2)*x2_0+2*x2_1*(b*d_1+a_1-x3_1-x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, a_2, d_2, ((-a_1+x3_1)*x2_0-x2_1*(a_0-x3_0))*k5+k6*x3_1+x3_2, ((-b*d_1+x4_1)*x2_0-x2_1*(b*d_0-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b*d_0+a_0-x3_0-x4_0)*x2_3+(b*d_3+a_3-x3_3-x4_3)*x2_0+(3*b*d_2+3*a_2-3*x3_2-3*x4_2)*x2_1+3*x2_2*(b*d_1+a_1-x3_1-x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, a_3, d_3, ((x3_2-a_2)*x2_0+(2*x3_1-2*a_1)*x2_1-x2_2*(a_0-x3_0))*k5+k6*x3_2+x3_3, ((-d_0*x2_2-2*d_1*x2_1-d_2*x2_0)*b+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b*d_0+a_0-x3_0-x4_0)*x2_4+(4*d_1*x2_3+6*d_2*x2_2+4*d_3*x2_1+d_4*x2_0)*b+(a_4-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3+4*a_3)*x2_1+(-6*x3_2-6*x4_2+6*a_2)*x2_2-4*x2_3*(x3_1+x4_1-a_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, a_4, d_4, ((x3_3-a_3)*x2_0+(3*x3_2-3*a_2)*x2_1+(3*x3_1-3*a_1)*x2_2+x2_3*(-a_0+x3_0))*k5+k6*x3_3+x3_4, ((-d_0*x2_3-3*d_1*x2_2-3*d_2*x2_1-d_3*x2_0)*b+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((d_0*x2_5+5*d_1*x2_4+10*d_2*x2_3+10*d_3*x2_2+5*d_4*x2_1+d_5*x2_0)*b+(-x3_0-x4_0+a_0)*x2_5+(a_5-x3_5-x4_5)*x2_0+(5*a_4-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3+10*a_3)*x2_2+(-10*x3_2-10*x4_2+10*a_2)*x2_3-5*x2_4*(x3_1+x4_1-a_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, a_5, d_5, ((x3_4-a_4)*x2_0+(4*x3_3-4*a_3)*x2_1+(6*x3_2-6*a_2)*x2_2+(4*x3_1-4*a_1)*x2_3+x2_4*(-a_0+x3_0))*k5+k6*x3_4+x3_5, ((-d_0*x2_4-4*d_1*x2_3-6*d_2*x2_2-4*d_3*x2_1-d_4*x2_0)*b+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((d_0*x2_6+6*d_1*x2_5+15*d_2*x2_4+20*d_3*x2_3+15*d_4*x2_2+6*d_5*x2_1+d_6*x2_0)*b+(-x3_0-x4_0+a_0)*x2_6+(a_6-x3_6-x4_6)*x2_0+(6*a_5-6*x3_5-6*x4_5)*x2_1+(15*a_4-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3+20*a_3)*x2_3+(-15*x3_2-15*x4_2+15*a_2)*x2_4-6*x2_5*(x3_1+x4_1-a_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, a_6, d_6, ((x3_5-a_5)*x2_0+(5*x3_4-5*a_4)*x2_1+(10*x3_3-10*a_3)*x2_2+(10*x3_2-10*a_2)*x2_3+(5*x3_1-5*a_1)*x2_4+x2_5*(-a_0+x3_0))*k5+k6*x3_5+x3_6, ((-d_0*x2_5-5*d_1*x2_4-10*d_2*x2_3-10*d_3*x2_2-5*d_4*x2_1-d_5*x2_0)*b+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((d_0*x2_7+7*d_1*x2_6+21*d_2*x2_5+35*d_3*x2_4+35*d_4*x2_3+21*d_5*x2_2+7*d_6*x2_1+d_7*x2_0)*b+(-x3_0-x4_0+a_0)*x2_7+(a_7-x3_7-x4_7)*x2_0+(7*a_6-7*x3_6-7*x4_6)*x2_1+(21*a_5-21*x3_5-21*x4_5)*x2_2+(35*a_4-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3+35*a_3)*x2_4+(-21*x3_2-21*x4_2+21*a_2)*x2_5-7*x2_6*(x3_1+x4_1-a_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, a_7, d_7, ((x3_6-a_6)*x2_0+(6*x3_5-6*a_5)*x2_1+(15*x3_4-15*a_4)*x2_2+(20*x3_3-20*a_3)*x2_3+(15*x3_2-15*a_2)*x2_4+(6*x3_1-6*a_1)*x2_5+x2_6*(-a_0+x3_0))*k5+k6*x3_6+x3_7, ((-d_0*x2_6-6*d_1*x2_5-15*d_2*x2_4-20*d_3*x2_3-15*d_4*x2_2-6*d_5*x2_1-d_6*x2_0)*b+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -a_1+y_faux1_1, -a_2+y_faux1_2, -a_3+y_faux1_3, -a_4+y_faux1_4, -a_5+y_faux1_5, -a_6+y_faux1_6, -a_7+y_faux1_7, -d_1+y_faux2_1, -d_2+y_faux2_2, -d_3+y_faux2_3, -d_4+y_faux2_4, -d_5+y_faux2_5, -d_6+y_faux2_6, -d_7+y_faux2_7, y_faux3_0-x3_6]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = a_0, y_faux1_1 = a_1, y_faux1_2 = a_2, y_faux1_3 = a_3, y_faux1_4 = a_4, y_faux1_5 = a_5, y_faux1_6 = a_6, y_faux1_7 = a_7, y_faux1_8 = a_8, y_faux1_9 = a_9, y_faux1_10 = a_10, y_faux1_11 = a_11, y_faux1_12 = a_12, y_faux1_13 = a_13, y_faux1_14 = a_14, y_faux2_0 = d_0, y_faux2_1 = d_1, y_faux2_2 = d_2, y_faux2_3 = d_3, y_faux2_4 = d_4, y_faux2_5 = d_5, y_faux2_6 = d_6, y_faux2_7 = d_7, y_faux2_8 = d_8, y_faux2_9 = d_9, y_faux2_10 = d_10, y_faux2_11 = d_11, y_faux2_12 = d_12, y_faux2_13 = d_13, y_faux2_14 = d_14, y_faux3_0 = x3_6]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability:  723190167600000000000000
Random sample for the outputs and inputs is generated from  [b = 267309808358296766854202, k3 = 56679877817091803943679, k4 = 322994007386785128592339, k5 = 582376461247520917734743, k6 = 378369199243503614460316, k7 = 400996325973235155343384, a_0 = 105595889836072687438926, d_0 = 286280795686200449395412, x1_0 = 179174199846715474844563, x2_0 = 39025089157826578419138, x3_0 = 104155257185602346156031, x4_0 = 362316781884056480755743, x5_0 = 22072784392592493482838]
The polynomial system widehat{E^t} contains  83 equations in  68  variables
            "new_logs/Tumor/transcendence_24_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [a, d, x3_7]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {a, d}
Algebraically independent parameters among derivatives: {x3_7}
	Adding ODEs: [diff(a(t),t) = 0, diff(d(t),t) = 0]
	Adding output functions: [y_faux1(t) = a(t), y_faux2(t) = d(t)]
	New system: [diff(a(t),t) = 0, diff(d(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b*d(t)*k5+a(t)*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a(t)*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b*d(t)*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = a(t), y_faux2(t) = d(t)]

=== Input info ===
State variables:          [a(t), d(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t), y_faux2(t)]
Input variables:          []
Parameters in equations:  [b, k3, k4, k5, k6, k7]
===================

memory used=6969.8MB, alloc=183.8MB, time=62.86
memory used=7069.7MB, alloc=183.8MB, time=63.62
	Adding new y-equations: [y_faux3_0 = x3_7]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-a_0, a_1, y_faux2_0-d_0, d_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b*d_0*k5*x2_0+a_0*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b*d_0+a_0-x3_0-x4_0)*x2_1+x2_0*(b*d_1+a_1-x3_1-x4_1))*k5-x1_1*k3+k4*x2_1-k6*x3_1-k6*x4_1+x2_2, -a_0*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b*d_0*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b*d_0+a_0-x3_0-x4_0)*x2_2+(b*d_2+a_2-x3_2-x4_2)*x2_0+2*x2_1*(b*d_1+a_1-x3_1-x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, a_2, d_2, ((-a_1+x3_1)*x2_0-x2_1*(a_0-x3_0))*k5+k6*x3_1+x3_2, ((-b*d_1+x4_1)*x2_0-x2_1*(b*d_0-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b*d_0+a_0-x3_0-x4_0)*x2_3+(b*d_3+a_3-x3_3-x4_3)*x2_0+(3*b*d_2+3*a_2-3*x3_2-3*x4_2)*x2_1+3*x2_2*(b*d_1+a_1-x3_1-x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, a_3, d_3, ((x3_2-a_2)*x2_0+(2*x3_1-2*a_1)*x2_1-x2_2*(a_0-x3_0))*k5+k6*x3_2+x3_3, ((-d_0*x2_2-2*d_1*x2_1-d_2*x2_0)*b+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b*d_0+a_0-x3_0-x4_0)*x2_4+(4*d_1*x2_3+6*d_2*x2_2+4*d_3*x2_1+d_4*x2_0)*b+(a_4-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3+4*a_3)*x2_1+(-6*x3_2-6*x4_2+6*a_2)*x2_2-4*x2_3*(x3_1+x4_1-a_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, a_4, d_4, ((x3_3-a_3)*x2_0+(3*x3_2-3*a_2)*x2_1+(3*x3_1-3*a_1)*x2_2+x2_3*(-a_0+x3_0))*k5+k6*x3_3+x3_4, ((-d_0*x2_3-3*d_1*x2_2-3*d_2*x2_1-d_3*x2_0)*b+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((d_0*x2_5+5*d_1*x2_4+10*d_2*x2_3+10*d_3*x2_2+5*d_4*x2_1+d_5*x2_0)*b+(-x3_0-x4_0+a_0)*x2_5+(a_5-x3_5-x4_5)*x2_0+(5*a_4-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3+10*a_3)*x2_2+(-10*x3_2-10*x4_2+10*a_2)*x2_3-5*x2_4*(x3_1+x4_1-a_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, a_5, d_5, ((x3_4-a_4)*x2_0+(4*x3_3-4*a_3)*x2_1+(6*x3_2-6*a_2)*x2_2+(4*x3_1-4*a_1)*x2_3+x2_4*(-a_0+x3_0))*k5+k6*x3_4+x3_5, ((-d_0*x2_4-4*d_1*x2_3-6*d_2*x2_2-4*d_3*x2_1-d_4*x2_0)*b+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((d_0*x2_6+6*d_1*x2_5+15*d_2*x2_4+20*d_3*x2_3+15*d_4*x2_2+6*d_5*x2_1+d_6*x2_0)*b+(-x3_0-x4_0+a_0)*x2_6+(a_6-x3_6-x4_6)*x2_0+(6*a_5-6*x3_5-6*x4_5)*x2_1+(15*a_4-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3+20*a_3)*x2_3+(-15*x3_2-15*x4_2+15*a_2)*x2_4-6*x2_5*(x3_1+x4_1-a_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, a_6, d_6, ((x3_5-a_5)*x2_0+(5*x3_4-5*a_4)*x2_1+(10*x3_3-10*a_3)*x2_2+(10*x3_2-10*a_2)*x2_3+(5*x3_1-5*a_1)*x2_4+x2_5*(-a_0+x3_0))*k5+k6*x3_5+x3_6, ((-d_0*x2_5-5*d_1*x2_4-10*d_2*x2_3-10*d_3*x2_2-5*d_4*x2_1-d_5*x2_0)*b+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((d_0*x2_7+7*d_1*x2_6+21*d_2*x2_5+35*d_3*x2_4+35*d_4*x2_3+21*d_5*x2_2+7*d_6*x2_1+d_7*x2_0)*b+(-x3_0-x4_0+a_0)*x2_7+(a_7-x3_7-x4_7)*x2_0+(7*a_6-7*x3_6-7*x4_6)*x2_1+(21*a_5-21*x3_5-21*x4_5)*x2_2+(35*a_4-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3+35*a_3)*x2_4+(-21*x3_2-21*x4_2+21*a_2)*x2_5-7*x2_6*(x3_1+x4_1-a_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, a_7, d_7, ((x3_6-a_6)*x2_0+(6*x3_5-6*a_5)*x2_1+(15*x3_4-15*a_4)*x2_2+(20*x3_3-20*a_3)*x2_3+(15*x3_2-15*a_2)*x2_4+(6*x3_1-6*a_1)*x2_5+x2_6*(-a_0+x3_0))*k5+k6*x3_6+x3_7, ((-d_0*x2_6-6*d_1*x2_5-15*d_2*x2_4-20*d_3*x2_3-15*d_4*x2_2-6*d_5*x2_1-d_6*x2_0)*b+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -a_1+y_faux1_1, -a_2+y_faux1_2, -a_3+y_faux1_3, -a_4+y_faux1_4, -a_5+y_faux1_5, -a_6+y_faux1_6, -a_7+y_faux1_7, -d_1+y_faux2_1, -d_2+y_faux2_2, -d_3+y_faux2_3, -d_4+y_faux2_4, -d_5+y_faux2_5, -d_6+y_faux2_6, -d_7+y_faux2_7, y_faux3_0-x3_7]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = a_0, y_faux1_1 = a_1, y_faux1_2 = a_2, y_faux1_3 = a_3, y_faux1_4 = a_4, y_faux1_5 = a_5, y_faux1_6 = a_6, y_faux1_7 = a_7, y_faux1_8 = a_8, y_faux1_9 = a_9, y_faux1_10 = a_10, y_faux1_11 = a_11, y_faux1_12 = a_12, y_faux1_13 = a_13, y_faux1_14 = a_14, y_faux2_0 = d_0, y_faux2_1 = d_1, y_faux2_2 = d_2, y_faux2_3 = d_3, y_faux2_4 = d_4, y_faux2_5 = d_5, y_faux2_6 = d_6, y_faux2_7 = d_7, y_faux2_8 = d_8, y_faux2_9 = d_9, y_faux2_10 = d_10, y_faux2_11 = d_11, y_faux2_12 = d_12, y_faux2_13 = d_13, y_faux2_14 = d_14, y_faux3_0 = x3_7]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability:  723190167600000000000000
Random sample for the outputs and inputs is generated from  [b = 135805760641304033070745, k3 = 673959973361368298177534, k4 = 651406775600289139504889, k5 = 334987973449269553638873, k6 = 325165293264242309006158, k7 = 222236481749923139294627, a_0 = 458727352997090391484503, d_0 = 83625270836054629361762, x1_0 = 513496441685021090476311, x2_0 = 717713960876185196093649, x3_0 = 164758434536619650969717, x4_0 = 674637842509413101405033, x5_0 = 42171346105468354747534]
The polynomial system widehat{E^t} contains  83 equations in  68  variables
            "new_logs/Tumor/transcendence_25_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [a, d, x4(0)]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {a, d}
Algebraically independent parameters among derivatives: {x4(0)}
	Adding ODEs: [diff(a(t),t) = 0, diff(d(t),t) = 0]
	Adding output functions: [y_faux1(t) = a(t), y_faux2(t) = d(t)]
	New system: [diff(a(t),t) = 0, diff(d(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b*d(t)*k5+a(t)*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a(t)*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b*d(t)*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = a(t), y_faux2(t) = d(t)]

=== Input info ===
State variables:          [a(t), d(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t), y_faux2(t)]
Input variables:          []
Parameters in equations:  [b, k3, k4, k5, k6, k7]
===================

memory used=7195.6MB, alloc=183.8MB, time=64.81
memory used=7317.7MB, alloc=183.8MB, time=65.83
memory used=7418.1MB, alloc=183.8MB, time=66.60
	Adding new y-equations: [y_faux3_0 = x4_0]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-a_0, a_1, y_faux2_0-d_0, d_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b*d_0*k5*x2_0+a_0*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b*d_0+a_0-x3_0-x4_0)*x2_1+x2_0*(b*d_1+a_1-x3_1-x4_1))*k5-x1_1*k3+k4*x2_1-k6*x3_1-k6*x4_1+x2_2, -a_0*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b*d_0*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b*d_0+a_0-x3_0-x4_0)*x2_2+(b*d_2+a_2-x3_2-x4_2)*x2_0+2*x2_1*(b*d_1+a_1-x3_1-x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, a_2, d_2, ((-a_1+x3_1)*x2_0-x2_1*(a_0-x3_0))*k5+k6*x3_1+x3_2, ((-b*d_1+x4_1)*x2_0-x2_1*(b*d_0-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b*d_0+a_0-x3_0-x4_0)*x2_3+(b*d_3+a_3-x3_3-x4_3)*x2_0+(3*b*d_2+3*a_2-3*x3_2-3*x4_2)*x2_1+3*x2_2*(b*d_1+a_1-x3_1-x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, a_3, d_3, ((x3_2-a_2)*x2_0+(2*x3_1-2*a_1)*x2_1-x2_2*(a_0-x3_0))*k5+k6*x3_2+x3_3, ((-d_0*x2_2-2*d_1*x2_1-d_2*x2_0)*b+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b*d_0+a_0-x3_0-x4_0)*x2_4+(4*d_1*x2_3+6*d_2*x2_2+4*d_3*x2_1+d_4*x2_0)*b+(a_4-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3+4*a_3)*x2_1+(-6*x3_2-6*x4_2+6*a_2)*x2_2-4*x2_3*(x3_1+x4_1-a_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, a_4, d_4, ((x3_3-a_3)*x2_0+(3*x3_2-3*a_2)*x2_1+(3*x3_1-3*a_1)*x2_2+x2_3*(-a_0+x3_0))*k5+k6*x3_3+x3_4, ((-d_0*x2_3-3*d_1*x2_2-3*d_2*x2_1-d_3*x2_0)*b+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((d_0*x2_5+5*d_1*x2_4+10*d_2*x2_3+10*d_3*x2_2+5*d_4*x2_1+d_5*x2_0)*b+(-x3_0-x4_0+a_0)*x2_5+(a_5-x3_5-x4_5)*x2_0+(5*a_4-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3+10*a_3)*x2_2+(-10*x3_2-10*x4_2+10*a_2)*x2_3-5*x2_4*(x3_1+x4_1-a_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, a_5, d_5, ((x3_4-a_4)*x2_0+(4*x3_3-4*a_3)*x2_1+(6*x3_2-6*a_2)*x2_2+(4*x3_1-4*a_1)*x2_3+x2_4*(-a_0+x3_0))*k5+k6*x3_4+x3_5, ((-d_0*x2_4-4*d_1*x2_3-6*d_2*x2_2-4*d_3*x2_1-d_4*x2_0)*b+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((d_0*x2_6+6*d_1*x2_5+15*d_2*x2_4+20*d_3*x2_3+15*d_4*x2_2+6*d_5*x2_1+d_6*x2_0)*b+(-x3_0-x4_0+a_0)*x2_6+(a_6-x3_6-x4_6)*x2_0+(6*a_5-6*x3_5-6*x4_5)*x2_1+(15*a_4-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3+20*a_3)*x2_3+(-15*x3_2-15*x4_2+15*a_2)*x2_4-6*x2_5*(x3_1+x4_1-a_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, a_6, d_6, ((x3_5-a_5)*x2_0+(5*x3_4-5*a_4)*x2_1+(10*x3_3-10*a_3)*x2_2+(10*x3_2-10*a_2)*x2_3+(5*x3_1-5*a_1)*x2_4+x2_5*(-a_0+x3_0))*k5+k6*x3_5+x3_6, ((-d_0*x2_5-5*d_1*x2_4-10*d_2*x2_3-10*d_3*x2_2-5*d_4*x2_1-d_5*x2_0)*b+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((d_0*x2_7+7*d_1*x2_6+21*d_2*x2_5+35*d_3*x2_4+35*d_4*x2_3+21*d_5*x2_2+7*d_6*x2_1+d_7*x2_0)*b+(-x3_0-x4_0+a_0)*x2_7+(a_7-x3_7-x4_7)*x2_0+(7*a_6-7*x3_6-7*x4_6)*x2_1+(21*a_5-21*x3_5-21*x4_5)*x2_2+(35*a_4-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3+35*a_3)*x2_4+(-21*x3_2-21*x4_2+21*a_2)*x2_5-7*x2_6*(x3_1+x4_1-a_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, a_7, d_7, ((x3_6-a_6)*x2_0+(6*x3_5-6*a_5)*x2_1+(15*x3_4-15*a_4)*x2_2+(20*x3_3-20*a_3)*x2_3+(15*x3_2-15*a_2)*x2_4+(6*x3_1-6*a_1)*x2_5+x2_6*(-a_0+x3_0))*k5+k6*x3_6+x3_7, ((-d_0*x2_6-6*d_1*x2_5-15*d_2*x2_4-20*d_3*x2_3-15*d_4*x2_2-6*d_5*x2_1-d_6*x2_0)*b+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -a_1+y_faux1_1, -a_2+y_faux1_2, -a_3+y_faux1_3, -a_4+y_faux1_4, -a_5+y_faux1_5, -a_6+y_faux1_6, -a_7+y_faux1_7, -d_1+y_faux2_1, -d_2+y_faux2_2, -d_3+y_faux2_3, -d_4+y_faux2_4, -d_5+y_faux2_5, -d_6+y_faux2_6, -d_7+y_faux2_7, y_faux3_0-x4_0]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = a_0, y_faux1_1 = a_1, y_faux1_2 = a_2, y_faux1_3 = a_3, y_faux1_4 = a_4, y_faux1_5 = a_5, y_faux1_6 = a_6, y_faux1_7 = a_7, y_faux1_8 = a_8, y_faux1_9 = a_9, y_faux1_10 = a_10, y_faux1_11 = a_11, y_faux1_12 = a_12, y_faux1_13 = a_13, y_faux1_14 = a_14, y_faux2_0 = d_0, y_faux2_1 = d_1, y_faux2_2 = d_2, y_faux2_3 = d_3, y_faux2_4 = d_4, y_faux2_5 = d_5, y_faux2_6 = d_6, y_faux2_7 = d_7, y_faux2_8 = d_8, y_faux2_9 = d_9, y_faux2_10 = d_10, y_faux2_11 = d_11, y_faux2_12 = d_12, y_faux2_13 = d_13, y_faux2_14 = d_14, y_faux3_0 = x4_0]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability:  723190167600000000000000
Random sample for the outputs and inputs is generated from  [b = 77988600633926100687623, k3 = 270805843724056823955144, k4 = 618777301487908746479879, k5 = 3416742660754011661038, k6 = 423467228384408833796576, k7 = 412998470059817448180776, a_0 = 428307686571819285603277, d_0 = 203719000720919430581874, x1_0 = 667439127883896331964382, x2_0 = 214775528098060446397360, x3_0 = 441757029293060194715845, x4_0 = 637395415640178545922482, x5_0 = 96397865841484347189783]
The polynomial system widehat{E^t} contains  83 equations in  68  variables
            "new_logs/Tumor/transcendence_26_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [a, d, x4_1]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {a, d}
Algebraically independent parameters among derivatives: {x4_1}
	Adding ODEs: [diff(a(t),t) = 0, diff(d(t),t) = 0]
	Adding output functions: [y_faux1(t) = a(t), y_faux2(t) = d(t)]
	New system: [diff(a(t),t) = 0, diff(d(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b*d(t)*k5+a(t)*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a(t)*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b*d(t)*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = a(t), y_faux2(t) = d(t)]

=== Input info ===
State variables:          [a(t), d(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t), y_faux2(t)]
Input variables:          []
Parameters in equations:  [b, k3, k4, k5, k6, k7]
===================

memory used=7542.1MB, alloc=183.8MB, time=67.88
memory used=7642.1MB, alloc=183.8MB, time=68.64
	Adding new y-equations: [y_faux3_0 = x4_1]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-a_0, a_1, y_faux2_0-d_0, d_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b*d_0*k5*x2_0+a_0*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b*d_0+a_0-x3_0-x4_0)*x2_1+x2_0*(b*d_1+a_1-x3_1-x4_1))*k5-x1_1*k3+k4*x2_1-k6*x3_1-k6*x4_1+x2_2, -a_0*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b*d_0*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b*d_0+a_0-x3_0-x4_0)*x2_2+(b*d_2+a_2-x3_2-x4_2)*x2_0+2*x2_1*(b*d_1+a_1-x3_1-x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, a_2, d_2, ((-a_1+x3_1)*x2_0-x2_1*(a_0-x3_0))*k5+k6*x3_1+x3_2, ((-b*d_1+x4_1)*x2_0-x2_1*(b*d_0-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b*d_0+a_0-x3_0-x4_0)*x2_3+(b*d_3+a_3-x3_3-x4_3)*x2_0+(3*b*d_2+3*a_2-3*x3_2-3*x4_2)*x2_1+3*x2_2*(b*d_1+a_1-x3_1-x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, a_3, d_3, ((x3_2-a_2)*x2_0+(2*x3_1-2*a_1)*x2_1-x2_2*(a_0-x3_0))*k5+k6*x3_2+x3_3, ((-d_0*x2_2-2*d_1*x2_1-d_2*x2_0)*b+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b*d_0+a_0-x3_0-x4_0)*x2_4+(4*d_1*x2_3+6*d_2*x2_2+4*d_3*x2_1+d_4*x2_0)*b+(a_4-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3+4*a_3)*x2_1+(-6*x3_2-6*x4_2+6*a_2)*x2_2-4*x2_3*(x3_1+x4_1-a_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, a_4, d_4, ((x3_3-a_3)*x2_0+(3*x3_2-3*a_2)*x2_1+(3*x3_1-3*a_1)*x2_2+x2_3*(-a_0+x3_0))*k5+k6*x3_3+x3_4, ((-d_0*x2_3-3*d_1*x2_2-3*d_2*x2_1-d_3*x2_0)*b+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((d_0*x2_5+5*d_1*x2_4+10*d_2*x2_3+10*d_3*x2_2+5*d_4*x2_1+d_5*x2_0)*b+(-x3_0-x4_0+a_0)*x2_5+(a_5-x3_5-x4_5)*x2_0+(5*a_4-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3+10*a_3)*x2_2+(-10*x3_2-10*x4_2+10*a_2)*x2_3-5*x2_4*(x3_1+x4_1-a_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, a_5, d_5, ((x3_4-a_4)*x2_0+(4*x3_3-4*a_3)*x2_1+(6*x3_2-6*a_2)*x2_2+(4*x3_1-4*a_1)*x2_3+x2_4*(-a_0+x3_0))*k5+k6*x3_4+x3_5, ((-d_0*x2_4-4*d_1*x2_3-6*d_2*x2_2-4*d_3*x2_1-d_4*x2_0)*b+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((d_0*x2_6+6*d_1*x2_5+15*d_2*x2_4+20*d_3*x2_3+15*d_4*x2_2+6*d_5*x2_1+d_6*x2_0)*b+(-x3_0-x4_0+a_0)*x2_6+(a_6-x3_6-x4_6)*x2_0+(6*a_5-6*x3_5-6*x4_5)*x2_1+(15*a_4-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3+20*a_3)*x2_3+(-15*x3_2-15*x4_2+15*a_2)*x2_4-6*x2_5*(x3_1+x4_1-a_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, a_6, d_6, ((x3_5-a_5)*x2_0+(5*x3_4-5*a_4)*x2_1+(10*x3_3-10*a_3)*x2_2+(10*x3_2-10*a_2)*x2_3+(5*x3_1-5*a_1)*x2_4+x2_5*(-a_0+x3_0))*k5+k6*x3_5+x3_6, ((-d_0*x2_5-5*d_1*x2_4-10*d_2*x2_3-10*d_3*x2_2-5*d_4*x2_1-d_5*x2_0)*b+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((d_0*x2_7+7*d_1*x2_6+21*d_2*x2_5+35*d_3*x2_4+35*d_4*x2_3+21*d_5*x2_2+7*d_6*x2_1+d_7*x2_0)*b+(-x3_0-x4_0+a_0)*x2_7+(a_7-x3_7-x4_7)*x2_0+(7*a_6-7*x3_6-7*x4_6)*x2_1+(21*a_5-21*x3_5-21*x4_5)*x2_2+(35*a_4-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3+35*a_3)*x2_4+(-21*x3_2-21*x4_2+21*a_2)*x2_5-7*x2_6*(x3_1+x4_1-a_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, a_7, d_7, ((x3_6-a_6)*x2_0+(6*x3_5-6*a_5)*x2_1+(15*x3_4-15*a_4)*x2_2+(20*x3_3-20*a_3)*x2_3+(15*x3_2-15*a_2)*x2_4+(6*x3_1-6*a_1)*x2_5+x2_6*(-a_0+x3_0))*k5+k6*x3_6+x3_7, ((-d_0*x2_6-6*d_1*x2_5-15*d_2*x2_4-20*d_3*x2_3-15*d_4*x2_2-6*d_5*x2_1-d_6*x2_0)*b+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -a_1+y_faux1_1, -a_2+y_faux1_2, -a_3+y_faux1_3, -a_4+y_faux1_4, -a_5+y_faux1_5, -a_6+y_faux1_6, -a_7+y_faux1_7, -d_1+y_faux2_1, -d_2+y_faux2_2, -d_3+y_faux2_3, -d_4+y_faux2_4, -d_5+y_faux2_5, -d_6+y_faux2_6, -d_7+y_faux2_7, y_faux3_0-x4_1]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = a_0, y_faux1_1 = a_1, y_faux1_2 = a_2, y_faux1_3 = a_3, y_faux1_4 = a_4, y_faux1_5 = a_5, y_faux1_6 = a_6, y_faux1_7 = a_7, y_faux1_8 = a_8, y_faux1_9 = a_9, y_faux1_10 = a_10, y_faux1_11 = a_11, y_faux1_12 = a_12, y_faux1_13 = a_13, y_faux1_14 = a_14, y_faux2_0 = d_0, y_faux2_1 = d_1, y_faux2_2 = d_2, y_faux2_3 = d_3, y_faux2_4 = d_4, y_faux2_5 = d_5, y_faux2_6 = d_6, y_faux2_7 = d_7, y_faux2_8 = d_8, y_faux2_9 = d_9, y_faux2_10 = d_10, y_faux2_11 = d_11, y_faux2_12 = d_12, y_faux2_13 = d_13, y_faux2_14 = d_14, y_faux3_0 = x4_1]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability:  723190167600000000000000
Random sample for the outputs and inputs is generated from  [b = 157656040995541890808959, k3 = 31267002430438017173692, k4 = 465984569164262337776984, k5 = 316632881177532003312168, k6 = 603234574009219067664619, k7 = 459231350209552335364248, a_0 = 412478354383294784267610, d_0 = 246062864153341762980380, x1_0 = 696863820332880239315677, x2_0 = 80908920006342758223808, x3_0 = 526924197820893351823160, x4_0 = 451141253277330570193507, x5_0 = 223985324674013386655430]
The polynomial system widehat{E^t} contains  83 equations in  68  variables
            "new_logs/Tumor/transcendence_27_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [a, d, x4_2]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {a, d}
Algebraically independent parameters among derivatives: {x4_2}
	Adding ODEs: [diff(a(t),t) = 0, diff(d(t),t) = 0]
	Adding output functions: [y_faux1(t) = a(t), y_faux2(t) = d(t)]
	New system: [diff(a(t),t) = 0, diff(d(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b*d(t)*k5+a(t)*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a(t)*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b*d(t)*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = a(t), y_faux2(t) = d(t)]

=== Input info ===
State variables:          [a(t), d(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t), y_faux2(t)]
Input variables:          []
Parameters in equations:  [b, k3, k4, k5, k6, k7]
===================

memory used=7768.8MB, alloc=183.8MB, time=69.91
memory used=7887.8MB, alloc=183.8MB, time=70.87
memory used=7988.3MB, alloc=183.8MB, time=71.65
	Adding new y-equations: [y_faux3_0 = x4_2]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-a_0, a_1, y_faux2_0-d_0, d_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b*d_0*k5*x2_0+a_0*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b*d_0+a_0-x3_0-x4_0)*x2_1+x2_0*(b*d_1+a_1-x3_1-x4_1))*k5-x1_1*k3+k4*x2_1-k6*x3_1-k6*x4_1+x2_2, -a_0*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b*d_0*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b*d_0+a_0-x3_0-x4_0)*x2_2+(b*d_2+a_2-x3_2-x4_2)*x2_0+2*x2_1*(b*d_1+a_1-x3_1-x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, a_2, d_2, ((-a_1+x3_1)*x2_0-x2_1*(a_0-x3_0))*k5+k6*x3_1+x3_2, ((-b*d_1+x4_1)*x2_0-x2_1*(b*d_0-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b*d_0+a_0-x3_0-x4_0)*x2_3+(b*d_3+a_3-x3_3-x4_3)*x2_0+(3*b*d_2+3*a_2-3*x3_2-3*x4_2)*x2_1+3*x2_2*(b*d_1+a_1-x3_1-x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, a_3, d_3, ((x3_2-a_2)*x2_0+(2*x3_1-2*a_1)*x2_1-x2_2*(a_0-x3_0))*k5+k6*x3_2+x3_3, ((-d_0*x2_2-2*d_1*x2_1-d_2*x2_0)*b+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b*d_0+a_0-x3_0-x4_0)*x2_4+(4*d_1*x2_3+6*d_2*x2_2+4*d_3*x2_1+d_4*x2_0)*b+(a_4-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3+4*a_3)*x2_1+(-6*x3_2-6*x4_2+6*a_2)*x2_2-4*x2_3*(x3_1+x4_1-a_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, a_4, d_4, ((x3_3-a_3)*x2_0+(3*x3_2-3*a_2)*x2_1+(3*x3_1-3*a_1)*x2_2+x2_3*(-a_0+x3_0))*k5+k6*x3_3+x3_4, ((-d_0*x2_3-3*d_1*x2_2-3*d_2*x2_1-d_3*x2_0)*b+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((d_0*x2_5+5*d_1*x2_4+10*d_2*x2_3+10*d_3*x2_2+5*d_4*x2_1+d_5*x2_0)*b+(-x3_0-x4_0+a_0)*x2_5+(a_5-x3_5-x4_5)*x2_0+(5*a_4-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3+10*a_3)*x2_2+(-10*x3_2-10*x4_2+10*a_2)*x2_3-5*x2_4*(x3_1+x4_1-a_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, a_5, d_5, ((x3_4-a_4)*x2_0+(4*x3_3-4*a_3)*x2_1+(6*x3_2-6*a_2)*x2_2+(4*x3_1-4*a_1)*x2_3+x2_4*(-a_0+x3_0))*k5+k6*x3_4+x3_5, ((-d_0*x2_4-4*d_1*x2_3-6*d_2*x2_2-4*d_3*x2_1-d_4*x2_0)*b+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((d_0*x2_6+6*d_1*x2_5+15*d_2*x2_4+20*d_3*x2_3+15*d_4*x2_2+6*d_5*x2_1+d_6*x2_0)*b+(-x3_0-x4_0+a_0)*x2_6+(a_6-x3_6-x4_6)*x2_0+(6*a_5-6*x3_5-6*x4_5)*x2_1+(15*a_4-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3+20*a_3)*x2_3+(-15*x3_2-15*x4_2+15*a_2)*x2_4-6*x2_5*(x3_1+x4_1-a_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, a_6, d_6, ((x3_5-a_5)*x2_0+(5*x3_4-5*a_4)*x2_1+(10*x3_3-10*a_3)*x2_2+(10*x3_2-10*a_2)*x2_3+(5*x3_1-5*a_1)*x2_4+x2_5*(-a_0+x3_0))*k5+k6*x3_5+x3_6, ((-d_0*x2_5-5*d_1*x2_4-10*d_2*x2_3-10*d_3*x2_2-5*d_4*x2_1-d_5*x2_0)*b+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((d_0*x2_7+7*d_1*x2_6+21*d_2*x2_5+35*d_3*x2_4+35*d_4*x2_3+21*d_5*x2_2+7*d_6*x2_1+d_7*x2_0)*b+(-x3_0-x4_0+a_0)*x2_7+(a_7-x3_7-x4_7)*x2_0+(7*a_6-7*x3_6-7*x4_6)*x2_1+(21*a_5-21*x3_5-21*x4_5)*x2_2+(35*a_4-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3+35*a_3)*x2_4+(-21*x3_2-21*x4_2+21*a_2)*x2_5-7*x2_6*(x3_1+x4_1-a_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, a_7, d_7, ((x3_6-a_6)*x2_0+(6*x3_5-6*a_5)*x2_1+(15*x3_4-15*a_4)*x2_2+(20*x3_3-20*a_3)*x2_3+(15*x3_2-15*a_2)*x2_4+(6*x3_1-6*a_1)*x2_5+x2_6*(-a_0+x3_0))*k5+k6*x3_6+x3_7, ((-d_0*x2_6-6*d_1*x2_5-15*d_2*x2_4-20*d_3*x2_3-15*d_4*x2_2-6*d_5*x2_1-d_6*x2_0)*b+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -a_1+y_faux1_1, -a_2+y_faux1_2, -a_3+y_faux1_3, -a_4+y_faux1_4, -a_5+y_faux1_5, -a_6+y_faux1_6, -a_7+y_faux1_7, -d_1+y_faux2_1, -d_2+y_faux2_2, -d_3+y_faux2_3, -d_4+y_faux2_4, -d_5+y_faux2_5, -d_6+y_faux2_6, -d_7+y_faux2_7, y_faux3_0-x4_2]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = a_0, y_faux1_1 = a_1, y_faux1_2 = a_2, y_faux1_3 = a_3, y_faux1_4 = a_4, y_faux1_5 = a_5, y_faux1_6 = a_6, y_faux1_7 = a_7, y_faux1_8 = a_8, y_faux1_9 = a_9, y_faux1_10 = a_10, y_faux1_11 = a_11, y_faux1_12 = a_12, y_faux1_13 = a_13, y_faux1_14 = a_14, y_faux2_0 = d_0, y_faux2_1 = d_1, y_faux2_2 = d_2, y_faux2_3 = d_3, y_faux2_4 = d_4, y_faux2_5 = d_5, y_faux2_6 = d_6, y_faux2_7 = d_7, y_faux2_8 = d_8, y_faux2_9 = d_9, y_faux2_10 = d_10, y_faux2_11 = d_11, y_faux2_12 = d_12, y_faux2_13 = d_13, y_faux2_14 = d_14, y_faux3_0 = x4_2]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability:  723190167600000000000000
Random sample for the outputs and inputs is generated from  [b = 505904373902574272865207, k3 = 19134061557453963997901, k4 = 623968384320008655474109, k5 = 593065411540958658728723, k6 = 654892913805917464115966, k7 = 469739949552663818461737, a_0 = 120308830328667122372047, d_0 = 443495091791970919178667, x1_0 = 425930653837655056022832, x2_0 = 296929030655885543951392, x3_0 = 242400129722395439969070, x4_0 = 475796534294626419908230, x5_0 = 560588866896283886753315]
The polynomial system widehat{E^t} contains  83 equations in  68  variables
            "new_logs/Tumor/transcendence_28_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [a, d, x4_3]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {a, d}
Algebraically independent parameters among derivatives: {x4_3}
	Adding ODEs: [diff(a(t),t) = 0, diff(d(t),t) = 0]
	Adding output functions: [y_faux1(t) = a(t), y_faux2(t) = d(t)]
	New system: [diff(a(t),t) = 0, diff(d(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b*d(t)*k5+a(t)*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a(t)*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b*d(t)*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = a(t), y_faux2(t) = d(t)]

=== Input info ===
State variables:          [a(t), d(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t), y_faux2(t)]
Input variables:          []
Parameters in equations:  [b, k3, k4, k5, k6, k7]
===================

memory used=8113.9MB, alloc=183.8MB, time=72.95
memory used=8214.4MB, alloc=183.8MB, time=73.70
	Adding new y-equations: [y_faux3_0 = x4_3]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-a_0, a_1, y_faux2_0-d_0, d_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b*d_0*k5*x2_0+a_0*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b*d_0+a_0-x3_0-x4_0)*x2_1+x2_0*(b*d_1+a_1-x3_1-x4_1))*k5-x1_1*k3+k4*x2_1-k6*x3_1-k6*x4_1+x2_2, -a_0*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b*d_0*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b*d_0+a_0-x3_0-x4_0)*x2_2+(b*d_2+a_2-x3_2-x4_2)*x2_0+2*x2_1*(b*d_1+a_1-x3_1-x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, a_2, d_2, ((-a_1+x3_1)*x2_0-x2_1*(a_0-x3_0))*k5+k6*x3_1+x3_2, ((-b*d_1+x4_1)*x2_0-x2_1*(b*d_0-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b*d_0+a_0-x3_0-x4_0)*x2_3+(b*d_3+a_3-x3_3-x4_3)*x2_0+(3*b*d_2+3*a_2-3*x3_2-3*x4_2)*x2_1+3*x2_2*(b*d_1+a_1-x3_1-x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, a_3, d_3, ((x3_2-a_2)*x2_0+(2*x3_1-2*a_1)*x2_1-x2_2*(a_0-x3_0))*k5+k6*x3_2+x3_3, ((-d_0*x2_2-2*d_1*x2_1-d_2*x2_0)*b+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b*d_0+a_0-x3_0-x4_0)*x2_4+(4*d_1*x2_3+6*d_2*x2_2+4*d_3*x2_1+d_4*x2_0)*b+(a_4-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3+4*a_3)*x2_1+(-6*x3_2-6*x4_2+6*a_2)*x2_2-4*x2_3*(x3_1+x4_1-a_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, a_4, d_4, ((x3_3-a_3)*x2_0+(3*x3_2-3*a_2)*x2_1+(3*x3_1-3*a_1)*x2_2+x2_3*(-a_0+x3_0))*k5+k6*x3_3+x3_4, ((-d_0*x2_3-3*d_1*x2_2-3*d_2*x2_1-d_3*x2_0)*b+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((d_0*x2_5+5*d_1*x2_4+10*d_2*x2_3+10*d_3*x2_2+5*d_4*x2_1+d_5*x2_0)*b+(-x3_0-x4_0+a_0)*x2_5+(a_5-x3_5-x4_5)*x2_0+(5*a_4-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3+10*a_3)*x2_2+(-10*x3_2-10*x4_2+10*a_2)*x2_3-5*x2_4*(x3_1+x4_1-a_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, a_5, d_5, ((x3_4-a_4)*x2_0+(4*x3_3-4*a_3)*x2_1+(6*x3_2-6*a_2)*x2_2+(4*x3_1-4*a_1)*x2_3+x2_4*(-a_0+x3_0))*k5+k6*x3_4+x3_5, ((-d_0*x2_4-4*d_1*x2_3-6*d_2*x2_2-4*d_3*x2_1-d_4*x2_0)*b+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((d_0*x2_6+6*d_1*x2_5+15*d_2*x2_4+20*d_3*x2_3+15*d_4*x2_2+6*d_5*x2_1+d_6*x2_0)*b+(-x3_0-x4_0+a_0)*x2_6+(a_6-x3_6-x4_6)*x2_0+(6*a_5-6*x3_5-6*x4_5)*x2_1+(15*a_4-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3+20*a_3)*x2_3+(-15*x3_2-15*x4_2+15*a_2)*x2_4-6*x2_5*(x3_1+x4_1-a_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, a_6, d_6, ((x3_5-a_5)*x2_0+(5*x3_4-5*a_4)*x2_1+(10*x3_3-10*a_3)*x2_2+(10*x3_2-10*a_2)*x2_3+(5*x3_1-5*a_1)*x2_4+x2_5*(-a_0+x3_0))*k5+k6*x3_5+x3_6, ((-d_0*x2_5-5*d_1*x2_4-10*d_2*x2_3-10*d_3*x2_2-5*d_4*x2_1-d_5*x2_0)*b+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((d_0*x2_7+7*d_1*x2_6+21*d_2*x2_5+35*d_3*x2_4+35*d_4*x2_3+21*d_5*x2_2+7*d_6*x2_1+d_7*x2_0)*b+(-x3_0-x4_0+a_0)*x2_7+(a_7-x3_7-x4_7)*x2_0+(7*a_6-7*x3_6-7*x4_6)*x2_1+(21*a_5-21*x3_5-21*x4_5)*x2_2+(35*a_4-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3+35*a_3)*x2_4+(-21*x3_2-21*x4_2+21*a_2)*x2_5-7*x2_6*(x3_1+x4_1-a_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, a_7, d_7, ((x3_6-a_6)*x2_0+(6*x3_5-6*a_5)*x2_1+(15*x3_4-15*a_4)*x2_2+(20*x3_3-20*a_3)*x2_3+(15*x3_2-15*a_2)*x2_4+(6*x3_1-6*a_1)*x2_5+x2_6*(-a_0+x3_0))*k5+k6*x3_6+x3_7, ((-d_0*x2_6-6*d_1*x2_5-15*d_2*x2_4-20*d_3*x2_3-15*d_4*x2_2-6*d_5*x2_1-d_6*x2_0)*b+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -a_1+y_faux1_1, -a_2+y_faux1_2, -a_3+y_faux1_3, -a_4+y_faux1_4, -a_5+y_faux1_5, -a_6+y_faux1_6, -a_7+y_faux1_7, -d_1+y_faux2_1, -d_2+y_faux2_2, -d_3+y_faux2_3, -d_4+y_faux2_4, -d_5+y_faux2_5, -d_6+y_faux2_6, -d_7+y_faux2_7, y_faux3_0-x4_3]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = a_0, y_faux1_1 = a_1, y_faux1_2 = a_2, y_faux1_3 = a_3, y_faux1_4 = a_4, y_faux1_5 = a_5, y_faux1_6 = a_6, y_faux1_7 = a_7, y_faux1_8 = a_8, y_faux1_9 = a_9, y_faux1_10 = a_10, y_faux1_11 = a_11, y_faux1_12 = a_12, y_faux1_13 = a_13, y_faux1_14 = a_14, y_faux2_0 = d_0, y_faux2_1 = d_1, y_faux2_2 = d_2, y_faux2_3 = d_3, y_faux2_4 = d_4, y_faux2_5 = d_5, y_faux2_6 = d_6, y_faux2_7 = d_7, y_faux2_8 = d_8, y_faux2_9 = d_9, y_faux2_10 = d_10, y_faux2_11 = d_11, y_faux2_12 = d_12, y_faux2_13 = d_13, y_faux2_14 = d_14, y_faux3_0 = x4_3]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability:  723190167600000000000000
Random sample for the outputs and inputs is generated from  [b = 70100933109027620676225, k3 = 244965667643620392444348, k4 = 10578676828294370908063, k5 = 289060172581539092547500, k6 = 172190095697089243095802, k7 = 209670430372763304548988, a_0 = 264335271531221354495845, d_0 = 257219239252914831994990, x1_0 = 587318178180190837567236, x2_0 = 675712436934715938005354, x3_0 = 348077778657899939558880, x4_0 = 12742448136610090698265, x5_0 = 299105509157544970298847]
The polynomial system widehat{E^t} contains  83 equations in  68  variables
            "new_logs/Tumor/transcendence_29_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [a, d, x4_4]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {a, d}
Algebraically independent parameters among derivatives: {x4_4}
	Adding ODEs: [diff(a(t),t) = 0, diff(d(t),t) = 0]
	Adding output functions: [y_faux1(t) = a(t), y_faux2(t) = d(t)]
	New system: [diff(a(t),t) = 0, diff(d(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b*d(t)*k5+a(t)*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a(t)*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b*d(t)*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = a(t), y_faux2(t) = d(t)]

=== Input info ===
State variables:          [a(t), d(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t), y_faux2(t)]
Input variables:          []
Parameters in equations:  [b, k3, k4, k5, k6, k7]
===================

memory used=8341.7MB, alloc=183.8MB, time=74.94
memory used=8459.4MB, alloc=183.8MB, time=75.88
memory used=8559.7MB, alloc=183.8MB, time=76.64
	Adding new y-equations: [y_faux3_0 = x4_4]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-a_0, a_1, y_faux2_0-d_0, d_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b*d_0*k5*x2_0+a_0*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b*d_0+a_0-x3_0-x4_0)*x2_1+x2_0*(b*d_1+a_1-x3_1-x4_1))*k5-x1_1*k3+k4*x2_1-k6*x3_1-k6*x4_1+x2_2, -a_0*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b*d_0*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b*d_0+a_0-x3_0-x4_0)*x2_2+(b*d_2+a_2-x3_2-x4_2)*x2_0+2*x2_1*(b*d_1+a_1-x3_1-x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, a_2, d_2, ((-a_1+x3_1)*x2_0-x2_1*(a_0-x3_0))*k5+k6*x3_1+x3_2, ((-b*d_1+x4_1)*x2_0-x2_1*(b*d_0-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b*d_0+a_0-x3_0-x4_0)*x2_3+(b*d_3+a_3-x3_3-x4_3)*x2_0+(3*b*d_2+3*a_2-3*x3_2-3*x4_2)*x2_1+3*x2_2*(b*d_1+a_1-x3_1-x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, a_3, d_3, ((x3_2-a_2)*x2_0+(2*x3_1-2*a_1)*x2_1-x2_2*(a_0-x3_0))*k5+k6*x3_2+x3_3, ((-d_0*x2_2-2*d_1*x2_1-d_2*x2_0)*b+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b*d_0+a_0-x3_0-x4_0)*x2_4+(4*d_1*x2_3+6*d_2*x2_2+4*d_3*x2_1+d_4*x2_0)*b+(a_4-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3+4*a_3)*x2_1+(-6*x3_2-6*x4_2+6*a_2)*x2_2-4*x2_3*(x3_1+x4_1-a_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, a_4, d_4, ((x3_3-a_3)*x2_0+(3*x3_2-3*a_2)*x2_1+(3*x3_1-3*a_1)*x2_2+x2_3*(-a_0+x3_0))*k5+k6*x3_3+x3_4, ((-d_0*x2_3-3*d_1*x2_2-3*d_2*x2_1-d_3*x2_0)*b+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((d_0*x2_5+5*d_1*x2_4+10*d_2*x2_3+10*d_3*x2_2+5*d_4*x2_1+d_5*x2_0)*b+(-x3_0-x4_0+a_0)*x2_5+(a_5-x3_5-x4_5)*x2_0+(5*a_4-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3+10*a_3)*x2_2+(-10*x3_2-10*x4_2+10*a_2)*x2_3-5*x2_4*(x3_1+x4_1-a_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, a_5, d_5, ((x3_4-a_4)*x2_0+(4*x3_3-4*a_3)*x2_1+(6*x3_2-6*a_2)*x2_2+(4*x3_1-4*a_1)*x2_3+x2_4*(-a_0+x3_0))*k5+k6*x3_4+x3_5, ((-d_0*x2_4-4*d_1*x2_3-6*d_2*x2_2-4*d_3*x2_1-d_4*x2_0)*b+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((d_0*x2_6+6*d_1*x2_5+15*d_2*x2_4+20*d_3*x2_3+15*d_4*x2_2+6*d_5*x2_1+d_6*x2_0)*b+(-x3_0-x4_0+a_0)*x2_6+(a_6-x3_6-x4_6)*x2_0+(6*a_5-6*x3_5-6*x4_5)*x2_1+(15*a_4-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3+20*a_3)*x2_3+(-15*x3_2-15*x4_2+15*a_2)*x2_4-6*x2_5*(x3_1+x4_1-a_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, a_6, d_6, ((x3_5-a_5)*x2_0+(5*x3_4-5*a_4)*x2_1+(10*x3_3-10*a_3)*x2_2+(10*x3_2-10*a_2)*x2_3+(5*x3_1-5*a_1)*x2_4+x2_5*(-a_0+x3_0))*k5+k6*x3_5+x3_6, ((-d_0*x2_5-5*d_1*x2_4-10*d_2*x2_3-10*d_3*x2_2-5*d_4*x2_1-d_5*x2_0)*b+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((d_0*x2_7+7*d_1*x2_6+21*d_2*x2_5+35*d_3*x2_4+35*d_4*x2_3+21*d_5*x2_2+7*d_6*x2_1+d_7*x2_0)*b+(-x3_0-x4_0+a_0)*x2_7+(a_7-x3_7-x4_7)*x2_0+(7*a_6-7*x3_6-7*x4_6)*x2_1+(21*a_5-21*x3_5-21*x4_5)*x2_2+(35*a_4-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3+35*a_3)*x2_4+(-21*x3_2-21*x4_2+21*a_2)*x2_5-7*x2_6*(x3_1+x4_1-a_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, a_7, d_7, ((x3_6-a_6)*x2_0+(6*x3_5-6*a_5)*x2_1+(15*x3_4-15*a_4)*x2_2+(20*x3_3-20*a_3)*x2_3+(15*x3_2-15*a_2)*x2_4+(6*x3_1-6*a_1)*x2_5+x2_6*(-a_0+x3_0))*k5+k6*x3_6+x3_7, ((-d_0*x2_6-6*d_1*x2_5-15*d_2*x2_4-20*d_3*x2_3-15*d_4*x2_2-6*d_5*x2_1-d_6*x2_0)*b+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -a_1+y_faux1_1, -a_2+y_faux1_2, -a_3+y_faux1_3, -a_4+y_faux1_4, -a_5+y_faux1_5, -a_6+y_faux1_6, -a_7+y_faux1_7, -d_1+y_faux2_1, -d_2+y_faux2_2, -d_3+y_faux2_3, -d_4+y_faux2_4, -d_5+y_faux2_5, -d_6+y_faux2_6, -d_7+y_faux2_7, y_faux3_0-x4_4]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = a_0, y_faux1_1 = a_1, y_faux1_2 = a_2, y_faux1_3 = a_3, y_faux1_4 = a_4, y_faux1_5 = a_5, y_faux1_6 = a_6, y_faux1_7 = a_7, y_faux1_8 = a_8, y_faux1_9 = a_9, y_faux1_10 = a_10, y_faux1_11 = a_11, y_faux1_12 = a_12, y_faux1_13 = a_13, y_faux1_14 = a_14, y_faux2_0 = d_0, y_faux2_1 = d_1, y_faux2_2 = d_2, y_faux2_3 = d_3, y_faux2_4 = d_4, y_faux2_5 = d_5, y_faux2_6 = d_6, y_faux2_7 = d_7, y_faux2_8 = d_8, y_faux2_9 = d_9, y_faux2_10 = d_10, y_faux2_11 = d_11, y_faux2_12 = d_12, y_faux2_13 = d_13, y_faux2_14 = d_14, y_faux3_0 = x4_4]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability:  723190167600000000000000
Random sample for the outputs and inputs is generated from  [b = 353422868982820832148980, k3 = 132670965561819086899491, k4 = 423947692537021760167207, k5 = 581679197542315488681912, k6 = 120579103292222735546843, k7 = 229366470243065926185720, a_0 = 193574185542719649759732, d_0 = 363567609051101395701213, x1_0 = 220678165605032717459943, x2_0 = 33809810772754632594927, x3_0 = 645913271262304220491042, x4_0 = 330623201384944790815195, x5_0 = 90305271374911385319703]
The polynomial system widehat{E^t} contains  83 equations in  68  variables
            "new_logs/Tumor/transcendence_30_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [a, d, x4_5]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {a, d}
Algebraically independent parameters among derivatives: {x4_5}
	Adding ODEs: [diff(a(t),t) = 0, diff(d(t),t) = 0]
	Adding output functions: [y_faux1(t) = a(t), y_faux2(t) = d(t)]
	New system: [diff(a(t),t) = 0, diff(d(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b*d(t)*k5+a(t)*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a(t)*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b*d(t)*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = a(t), y_faux2(t) = d(t)]

=== Input info ===
State variables:          [a(t), d(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t), y_faux2(t)]
Input variables:          []
Parameters in equations:  [b, k3, k4, k5, k6, k7]
===================

memory used=8686.4MB, alloc=183.8MB, time=77.98
memory used=8786.2MB, alloc=183.8MB, time=78.74
	Adding new y-equations: [y_faux3_0 = x4_5]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-a_0, a_1, y_faux2_0-d_0, d_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b*d_0*k5*x2_0+a_0*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b*d_0+a_0-x3_0-x4_0)*x2_1+x2_0*(b*d_1+a_1-x3_1-x4_1))*k5-x1_1*k3+k4*x2_1-k6*x3_1-k6*x4_1+x2_2, -a_0*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b*d_0*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b*d_0+a_0-x3_0-x4_0)*x2_2+(b*d_2+a_2-x3_2-x4_2)*x2_0+2*x2_1*(b*d_1+a_1-x3_1-x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, a_2, d_2, ((-a_1+x3_1)*x2_0-x2_1*(a_0-x3_0))*k5+k6*x3_1+x3_2, ((-b*d_1+x4_1)*x2_0-x2_1*(b*d_0-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b*d_0+a_0-x3_0-x4_0)*x2_3+(b*d_3+a_3-x3_3-x4_3)*x2_0+(3*b*d_2+3*a_2-3*x3_2-3*x4_2)*x2_1+3*x2_2*(b*d_1+a_1-x3_1-x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, a_3, d_3, ((x3_2-a_2)*x2_0+(2*x3_1-2*a_1)*x2_1-x2_2*(a_0-x3_0))*k5+k6*x3_2+x3_3, ((-d_0*x2_2-2*d_1*x2_1-d_2*x2_0)*b+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b*d_0+a_0-x3_0-x4_0)*x2_4+(4*d_1*x2_3+6*d_2*x2_2+4*d_3*x2_1+d_4*x2_0)*b+(a_4-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3+4*a_3)*x2_1+(-6*x3_2-6*x4_2+6*a_2)*x2_2-4*x2_3*(x3_1+x4_1-a_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, a_4, d_4, ((x3_3-a_3)*x2_0+(3*x3_2-3*a_2)*x2_1+(3*x3_1-3*a_1)*x2_2+x2_3*(-a_0+x3_0))*k5+k6*x3_3+x3_4, ((-d_0*x2_3-3*d_1*x2_2-3*d_2*x2_1-d_3*x2_0)*b+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((d_0*x2_5+5*d_1*x2_4+10*d_2*x2_3+10*d_3*x2_2+5*d_4*x2_1+d_5*x2_0)*b+(-x3_0-x4_0+a_0)*x2_5+(a_5-x3_5-x4_5)*x2_0+(5*a_4-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3+10*a_3)*x2_2+(-10*x3_2-10*x4_2+10*a_2)*x2_3-5*x2_4*(x3_1+x4_1-a_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, a_5, d_5, ((x3_4-a_4)*x2_0+(4*x3_3-4*a_3)*x2_1+(6*x3_2-6*a_2)*x2_2+(4*x3_1-4*a_1)*x2_3+x2_4*(-a_0+x3_0))*k5+k6*x3_4+x3_5, ((-d_0*x2_4-4*d_1*x2_3-6*d_2*x2_2-4*d_3*x2_1-d_4*x2_0)*b+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((d_0*x2_6+6*d_1*x2_5+15*d_2*x2_4+20*d_3*x2_3+15*d_4*x2_2+6*d_5*x2_1+d_6*x2_0)*b+(-x3_0-x4_0+a_0)*x2_6+(a_6-x3_6-x4_6)*x2_0+(6*a_5-6*x3_5-6*x4_5)*x2_1+(15*a_4-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3+20*a_3)*x2_3+(-15*x3_2-15*x4_2+15*a_2)*x2_4-6*x2_5*(x3_1+x4_1-a_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, a_6, d_6, ((x3_5-a_5)*x2_0+(5*x3_4-5*a_4)*x2_1+(10*x3_3-10*a_3)*x2_2+(10*x3_2-10*a_2)*x2_3+(5*x3_1-5*a_1)*x2_4+x2_5*(-a_0+x3_0))*k5+k6*x3_5+x3_6, ((-d_0*x2_5-5*d_1*x2_4-10*d_2*x2_3-10*d_3*x2_2-5*d_4*x2_1-d_5*x2_0)*b+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((d_0*x2_7+7*d_1*x2_6+21*d_2*x2_5+35*d_3*x2_4+35*d_4*x2_3+21*d_5*x2_2+7*d_6*x2_1+d_7*x2_0)*b+(-x3_0-x4_0+a_0)*x2_7+(a_7-x3_7-x4_7)*x2_0+(7*a_6-7*x3_6-7*x4_6)*x2_1+(21*a_5-21*x3_5-21*x4_5)*x2_2+(35*a_4-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3+35*a_3)*x2_4+(-21*x3_2-21*x4_2+21*a_2)*x2_5-7*x2_6*(x3_1+x4_1-a_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, a_7, d_7, ((x3_6-a_6)*x2_0+(6*x3_5-6*a_5)*x2_1+(15*x3_4-15*a_4)*x2_2+(20*x3_3-20*a_3)*x2_3+(15*x3_2-15*a_2)*x2_4+(6*x3_1-6*a_1)*x2_5+x2_6*(-a_0+x3_0))*k5+k6*x3_6+x3_7, ((-d_0*x2_6-6*d_1*x2_5-15*d_2*x2_4-20*d_3*x2_3-15*d_4*x2_2-6*d_5*x2_1-d_6*x2_0)*b+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -a_1+y_faux1_1, -a_2+y_faux1_2, -a_3+y_faux1_3, -a_4+y_faux1_4, -a_5+y_faux1_5, -a_6+y_faux1_6, -a_7+y_faux1_7, -d_1+y_faux2_1, -d_2+y_faux2_2, -d_3+y_faux2_3, -d_4+y_faux2_4, -d_5+y_faux2_5, -d_6+y_faux2_6, -d_7+y_faux2_7, y_faux3_0-x4_5]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = a_0, y_faux1_1 = a_1, y_faux1_2 = a_2, y_faux1_3 = a_3, y_faux1_4 = a_4, y_faux1_5 = a_5, y_faux1_6 = a_6, y_faux1_7 = a_7, y_faux1_8 = a_8, y_faux1_9 = a_9, y_faux1_10 = a_10, y_faux1_11 = a_11, y_faux1_12 = a_12, y_faux1_13 = a_13, y_faux1_14 = a_14, y_faux2_0 = d_0, y_faux2_1 = d_1, y_faux2_2 = d_2, y_faux2_3 = d_3, y_faux2_4 = d_4, y_faux2_5 = d_5, y_faux2_6 = d_6, y_faux2_7 = d_7, y_faux2_8 = d_8, y_faux2_9 = d_9, y_faux2_10 = d_10, y_faux2_11 = d_11, y_faux2_12 = d_12, y_faux2_13 = d_13, y_faux2_14 = d_14, y_faux3_0 = x4_5]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability:  723190167600000000000000
Random sample for the outputs and inputs is generated from  [b = 617988055251496355020351, k3 = 407437849252336411970658, k4 = 120897506657143117798467, k5 = 642060517555868792361868, k6 = 534588638883679042930154, k7 = 228169607425981331435978, a_0 = 661940238954424511168949, d_0 = 280306631597180951364368, x1_0 = 121325205515655293653568, x2_0 = 712926976524687392402667, x3_0 = 153477531322128039237619, x4_0 = 672833205760981391233256, x5_0 = 527650736669855399219584]
The polynomial system widehat{E^t} contains  83 equations in  68  variables
            "new_logs/Tumor/transcendence_31_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [a, d, x4_6]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {a, d}
Algebraically independent parameters among derivatives: {x4_6}
	Adding ODEs: [diff(a(t),t) = 0, diff(d(t),t) = 0]
	Adding output functions: [y_faux1(t) = a(t), y_faux2(t) = d(t)]
	New system: [diff(a(t),t) = 0, diff(d(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b*d(t)*k5+a(t)*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a(t)*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b*d(t)*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = a(t), y_faux2(t) = d(t)]

=== Input info ===
State variables:          [a(t), d(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t), y_faux2(t)]
Input variables:          []
Parameters in equations:  [b, k3, k4, k5, k6, k7]
===================

memory used=8913.5MB, alloc=183.8MB, time=80.00
memory used=9030.4MB, alloc=183.8MB, time=80.93
memory used=9130.8MB, alloc=183.8MB, time=81.70
	Adding new y-equations: [y_faux3_0 = x4_6]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-a_0, a_1, y_faux2_0-d_0, d_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b*d_0*k5*x2_0+a_0*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b*d_0+a_0-x3_0-x4_0)*x2_1+x2_0*(b*d_1+a_1-x3_1-x4_1))*k5-x1_1*k3+k4*x2_1-k6*x3_1-k6*x4_1+x2_2, -a_0*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b*d_0*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b*d_0+a_0-x3_0-x4_0)*x2_2+(b*d_2+a_2-x3_2-x4_2)*x2_0+2*x2_1*(b*d_1+a_1-x3_1-x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, a_2, d_2, ((-a_1+x3_1)*x2_0-x2_1*(a_0-x3_0))*k5+k6*x3_1+x3_2, ((-b*d_1+x4_1)*x2_0-x2_1*(b*d_0-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b*d_0+a_0-x3_0-x4_0)*x2_3+(b*d_3+a_3-x3_3-x4_3)*x2_0+(3*b*d_2+3*a_2-3*x3_2-3*x4_2)*x2_1+3*x2_2*(b*d_1+a_1-x3_1-x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, a_3, d_3, ((x3_2-a_2)*x2_0+(2*x3_1-2*a_1)*x2_1-x2_2*(a_0-x3_0))*k5+k6*x3_2+x3_3, ((-d_0*x2_2-2*d_1*x2_1-d_2*x2_0)*b+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b*d_0+a_0-x3_0-x4_0)*x2_4+(4*d_1*x2_3+6*d_2*x2_2+4*d_3*x2_1+d_4*x2_0)*b+(a_4-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3+4*a_3)*x2_1+(-6*x3_2-6*x4_2+6*a_2)*x2_2-4*x2_3*(x3_1+x4_1-a_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, a_4, d_4, ((x3_3-a_3)*x2_0+(3*x3_2-3*a_2)*x2_1+(3*x3_1-3*a_1)*x2_2+x2_3*(-a_0+x3_0))*k5+k6*x3_3+x3_4, ((-d_0*x2_3-3*d_1*x2_2-3*d_2*x2_1-d_3*x2_0)*b+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((d_0*x2_5+5*d_1*x2_4+10*d_2*x2_3+10*d_3*x2_2+5*d_4*x2_1+d_5*x2_0)*b+(-x3_0-x4_0+a_0)*x2_5+(a_5-x3_5-x4_5)*x2_0+(5*a_4-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3+10*a_3)*x2_2+(-10*x3_2-10*x4_2+10*a_2)*x2_3-5*x2_4*(x3_1+x4_1-a_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, a_5, d_5, ((x3_4-a_4)*x2_0+(4*x3_3-4*a_3)*x2_1+(6*x3_2-6*a_2)*x2_2+(4*x3_1-4*a_1)*x2_3+x2_4*(-a_0+x3_0))*k5+k6*x3_4+x3_5, ((-d_0*x2_4-4*d_1*x2_3-6*d_2*x2_2-4*d_3*x2_1-d_4*x2_0)*b+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((d_0*x2_6+6*d_1*x2_5+15*d_2*x2_4+20*d_3*x2_3+15*d_4*x2_2+6*d_5*x2_1+d_6*x2_0)*b+(-x3_0-x4_0+a_0)*x2_6+(a_6-x3_6-x4_6)*x2_0+(6*a_5-6*x3_5-6*x4_5)*x2_1+(15*a_4-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3+20*a_3)*x2_3+(-15*x3_2-15*x4_2+15*a_2)*x2_4-6*x2_5*(x3_1+x4_1-a_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, a_6, d_6, ((x3_5-a_5)*x2_0+(5*x3_4-5*a_4)*x2_1+(10*x3_3-10*a_3)*x2_2+(10*x3_2-10*a_2)*x2_3+(5*x3_1-5*a_1)*x2_4+x2_5*(-a_0+x3_0))*k5+k6*x3_5+x3_6, ((-d_0*x2_5-5*d_1*x2_4-10*d_2*x2_3-10*d_3*x2_2-5*d_4*x2_1-d_5*x2_0)*b+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((d_0*x2_7+7*d_1*x2_6+21*d_2*x2_5+35*d_3*x2_4+35*d_4*x2_3+21*d_5*x2_2+7*d_6*x2_1+d_7*x2_0)*b+(-x3_0-x4_0+a_0)*x2_7+(a_7-x3_7-x4_7)*x2_0+(7*a_6-7*x3_6-7*x4_6)*x2_1+(21*a_5-21*x3_5-21*x4_5)*x2_2+(35*a_4-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3+35*a_3)*x2_4+(-21*x3_2-21*x4_2+21*a_2)*x2_5-7*x2_6*(x3_1+x4_1-a_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, a_7, d_7, ((x3_6-a_6)*x2_0+(6*x3_5-6*a_5)*x2_1+(15*x3_4-15*a_4)*x2_2+(20*x3_3-20*a_3)*x2_3+(15*x3_2-15*a_2)*x2_4+(6*x3_1-6*a_1)*x2_5+x2_6*(-a_0+x3_0))*k5+k6*x3_6+x3_7, ((-d_0*x2_6-6*d_1*x2_5-15*d_2*x2_4-20*d_3*x2_3-15*d_4*x2_2-6*d_5*x2_1-d_6*x2_0)*b+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -a_1+y_faux1_1, -a_2+y_faux1_2, -a_3+y_faux1_3, -a_4+y_faux1_4, -a_5+y_faux1_5, -a_6+y_faux1_6, -a_7+y_faux1_7, -d_1+y_faux2_1, -d_2+y_faux2_2, -d_3+y_faux2_3, -d_4+y_faux2_4, -d_5+y_faux2_5, -d_6+y_faux2_6, -d_7+y_faux2_7, y_faux3_0-x4_6]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = a_0, y_faux1_1 = a_1, y_faux1_2 = a_2, y_faux1_3 = a_3, y_faux1_4 = a_4, y_faux1_5 = a_5, y_faux1_6 = a_6, y_faux1_7 = a_7, y_faux1_8 = a_8, y_faux1_9 = a_9, y_faux1_10 = a_10, y_faux1_11 = a_11, y_faux1_12 = a_12, y_faux1_13 = a_13, y_faux1_14 = a_14, y_faux2_0 = d_0, y_faux2_1 = d_1, y_faux2_2 = d_2, y_faux2_3 = d_3, y_faux2_4 = d_4, y_faux2_5 = d_5, y_faux2_6 = d_6, y_faux2_7 = d_7, y_faux2_8 = d_8, y_faux2_9 = d_9, y_faux2_10 = d_10, y_faux2_11 = d_11, y_faux2_12 = d_12, y_faux2_13 = d_13, y_faux2_14 = d_14, y_faux3_0 = x4_6]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability:  723190167600000000000000
Random sample for the outputs and inputs is generated from  [b = 601087639601639603198919, k3 = 618581985327150709592069, k4 = 155550360523885604262376, k5 = 499144936732345702513651, k6 = 548867519025437636601367, k7 = 18561703606882601316762, a_0 = 383072791102602229648618, d_0 = 162738163312641546032533, x1_0 = 353786981363227933555802, x2_0 = 196235465874415022267105, x3_0 = 438680068888577796934984, x4_0 = 564439804800950575097653, x5_0 = 118753917161704597172580]
The polynomial system widehat{E^t} contains  83 equations in  68  variables
            "new_logs/Tumor/transcendence_32_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [a, d, x4_7]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {a, d}
Algebraically independent parameters among derivatives: {x4_7}
	Adding ODEs: [diff(a(t),t) = 0, diff(d(t),t) = 0]
	Adding output functions: [y_faux1(t) = a(t), y_faux2(t) = d(t)]
	New system: [diff(a(t),t) = 0, diff(d(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b*d(t)*k5+a(t)*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a(t)*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b*d(t)*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = a(t), y_faux2(t) = d(t)]

=== Input info ===
State variables:          [a(t), d(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t), y_faux2(t)]
Input variables:          []
Parameters in equations:  [b, k3, k4, k5, k6, k7]
===================

memory used=9258.4MB, alloc=183.8MB, time=83.01
memory used=9358.1MB, alloc=183.8MB, time=83.76
	Adding new y-equations: [y_faux3_0 = x4_7]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-a_0, a_1, y_faux2_0-d_0, d_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b*d_0*k5*x2_0+a_0*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b*d_0+a_0-x3_0-x4_0)*x2_1+x2_0*(b*d_1+a_1-x3_1-x4_1))*k5-x1_1*k3+k4*x2_1-k6*x3_1-k6*x4_1+x2_2, -a_0*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b*d_0*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b*d_0+a_0-x3_0-x4_0)*x2_2+(b*d_2+a_2-x3_2-x4_2)*x2_0+2*x2_1*(b*d_1+a_1-x3_1-x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, a_2, d_2, ((-a_1+x3_1)*x2_0-x2_1*(a_0-x3_0))*k5+k6*x3_1+x3_2, ((-b*d_1+x4_1)*x2_0-x2_1*(b*d_0-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b*d_0+a_0-x3_0-x4_0)*x2_3+(b*d_3+a_3-x3_3-x4_3)*x2_0+(3*b*d_2+3*a_2-3*x3_2-3*x4_2)*x2_1+3*x2_2*(b*d_1+a_1-x3_1-x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, a_3, d_3, ((x3_2-a_2)*x2_0+(2*x3_1-2*a_1)*x2_1-x2_2*(a_0-x3_0))*k5+k6*x3_2+x3_3, ((-d_0*x2_2-2*d_1*x2_1-d_2*x2_0)*b+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b*d_0+a_0-x3_0-x4_0)*x2_4+(4*d_1*x2_3+6*d_2*x2_2+4*d_3*x2_1+d_4*x2_0)*b+(a_4-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3+4*a_3)*x2_1+(-6*x3_2-6*x4_2+6*a_2)*x2_2-4*x2_3*(x3_1+x4_1-a_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, a_4, d_4, ((x3_3-a_3)*x2_0+(3*x3_2-3*a_2)*x2_1+(3*x3_1-3*a_1)*x2_2+x2_3*(-a_0+x3_0))*k5+k6*x3_3+x3_4, ((-d_0*x2_3-3*d_1*x2_2-3*d_2*x2_1-d_3*x2_0)*b+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((d_0*x2_5+5*d_1*x2_4+10*d_2*x2_3+10*d_3*x2_2+5*d_4*x2_1+d_5*x2_0)*b+(-x3_0-x4_0+a_0)*x2_5+(a_5-x3_5-x4_5)*x2_0+(5*a_4-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3+10*a_3)*x2_2+(-10*x3_2-10*x4_2+10*a_2)*x2_3-5*x2_4*(x3_1+x4_1-a_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, a_5, d_5, ((x3_4-a_4)*x2_0+(4*x3_3-4*a_3)*x2_1+(6*x3_2-6*a_2)*x2_2+(4*x3_1-4*a_1)*x2_3+x2_4*(-a_0+x3_0))*k5+k6*x3_4+x3_5, ((-d_0*x2_4-4*d_1*x2_3-6*d_2*x2_2-4*d_3*x2_1-d_4*x2_0)*b+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((d_0*x2_6+6*d_1*x2_5+15*d_2*x2_4+20*d_3*x2_3+15*d_4*x2_2+6*d_5*x2_1+d_6*x2_0)*b+(-x3_0-x4_0+a_0)*x2_6+(a_6-x3_6-x4_6)*x2_0+(6*a_5-6*x3_5-6*x4_5)*x2_1+(15*a_4-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3+20*a_3)*x2_3+(-15*x3_2-15*x4_2+15*a_2)*x2_4-6*x2_5*(x3_1+x4_1-a_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, a_6, d_6, ((x3_5-a_5)*x2_0+(5*x3_4-5*a_4)*x2_1+(10*x3_3-10*a_3)*x2_2+(10*x3_2-10*a_2)*x2_3+(5*x3_1-5*a_1)*x2_4+x2_5*(-a_0+x3_0))*k5+k6*x3_5+x3_6, ((-d_0*x2_5-5*d_1*x2_4-10*d_2*x2_3-10*d_3*x2_2-5*d_4*x2_1-d_5*x2_0)*b+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((d_0*x2_7+7*d_1*x2_6+21*d_2*x2_5+35*d_3*x2_4+35*d_4*x2_3+21*d_5*x2_2+7*d_6*x2_1+d_7*x2_0)*b+(-x3_0-x4_0+a_0)*x2_7+(a_7-x3_7-x4_7)*x2_0+(7*a_6-7*x3_6-7*x4_6)*x2_1+(21*a_5-21*x3_5-21*x4_5)*x2_2+(35*a_4-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3+35*a_3)*x2_4+(-21*x3_2-21*x4_2+21*a_2)*x2_5-7*x2_6*(x3_1+x4_1-a_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, a_7, d_7, ((x3_6-a_6)*x2_0+(6*x3_5-6*a_5)*x2_1+(15*x3_4-15*a_4)*x2_2+(20*x3_3-20*a_3)*x2_3+(15*x3_2-15*a_2)*x2_4+(6*x3_1-6*a_1)*x2_5+x2_6*(-a_0+x3_0))*k5+k6*x3_6+x3_7, ((-d_0*x2_6-6*d_1*x2_5-15*d_2*x2_4-20*d_3*x2_3-15*d_4*x2_2-6*d_5*x2_1-d_6*x2_0)*b+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -a_1+y_faux1_1, -a_2+y_faux1_2, -a_3+y_faux1_3, -a_4+y_faux1_4, -a_5+y_faux1_5, -a_6+y_faux1_6, -a_7+y_faux1_7, -d_1+y_faux2_1, -d_2+y_faux2_2, -d_3+y_faux2_3, -d_4+y_faux2_4, -d_5+y_faux2_5, -d_6+y_faux2_6, -d_7+y_faux2_7, y_faux3_0-x4_7]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = a_0, y_faux1_1 = a_1, y_faux1_2 = a_2, y_faux1_3 = a_3, y_faux1_4 = a_4, y_faux1_5 = a_5, y_faux1_6 = a_6, y_faux1_7 = a_7, y_faux1_8 = a_8, y_faux1_9 = a_9, y_faux1_10 = a_10, y_faux1_11 = a_11, y_faux1_12 = a_12, y_faux1_13 = a_13, y_faux1_14 = a_14, y_faux2_0 = d_0, y_faux2_1 = d_1, y_faux2_2 = d_2, y_faux2_3 = d_3, y_faux2_4 = d_4, y_faux2_5 = d_5, y_faux2_6 = d_6, y_faux2_7 = d_7, y_faux2_8 = d_8, y_faux2_9 = d_9, y_faux2_10 = d_10, y_faux2_11 = d_11, y_faux2_12 = d_12, y_faux2_13 = d_13, y_faux2_14 = d_14, y_faux3_0 = x4_7]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability:  723190167600000000000000
Random sample for the outputs and inputs is generated from  [b = 460459156818547494704451, k3 = 332149613705624283934519, k4 = 398313847452362290566162, k5 = 458188322689709989065581, k6 = 75807635021660832145900, k7 = 310928067829148962061218, a_0 = 115215296953312754125700, d_0 = 629873920706515876514362, x1_0 = 619046269542716995693725, x2_0 = 467922143265469533725210, x3_0 = 563638184209945078427743, x4_0 = 108216034569231672465395, x5_0 = 511071865500638974766869]
The polynomial system widehat{E^t} contains  83 equations in  68  variables
            "new_logs/Tumor/transcendence_33_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [a, x3(0), x3_1]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3(0), x3_2]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3(0), x3_3]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3(0), x3_4]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3(0), x3_5]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3(0), x3_6]

=======================================================
Substituting transcendence basis.
=======================================================
memory used=9501.3MB, alloc=183.8MB, time=85.09
Algebraically independent parameters (candidates) [a, x3(0), x3_7]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3(0), x4(0)]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3(0), x4_1]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3(0), x4_2]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3(0), x4_3]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3(0), x4_4]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3(0), x4_5]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3(0), x4_6]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3(0), x4_7]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_1, x3_2]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_1, x3_3]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_1, x3_4]

=======================================================
Substituting transcendence basis.
=======================================================
memory used=9649.8MB, alloc=183.8MB, time=86.59
Algebraically independent parameters (candidates) [a, x3_1, x3_5]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_1, x3_6]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_1, x3_7]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_1, x4(0)]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_1, x4_1]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_1, x4_2]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_1, x4_3]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_1, x4_4]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_1, x4_5]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_1, x4_6]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_1, x4_7]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_2, x3_3]

=======================================================
Substituting transcendence basis.
=======================================================
memory used=9798.3MB, alloc=183.8MB, time=88.04
Algebraically independent parameters (candidates) [a, x3_2, x3_4]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_2, x3_5]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_2, x3_6]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_2, x3_7]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_2, x4(0)]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_2, x4_1]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_2, x4_2]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_2, x4_3]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_2, x4_4]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_2, x4_5]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_2, x4_6]

=======================================================
Substituting transcendence basis.
=======================================================
memory used=9947.2MB, alloc=183.8MB, time=89.48
Algebraically independent parameters (candidates) [a, x3_2, x4_7]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_3, x3_4]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_3, x3_5]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_3, x3_6]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_3, x3_7]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_3, x4(0)]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_3, x4_1]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_3, x4_2]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_3, x4_3]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_3, x4_4]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_3, x4_5]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_3, x4_6]

=======================================================
Substituting transcendence basis.
=======================================================
memory used=10096.2MB, alloc=183.8MB, time=91.04
Algebraically independent parameters (candidates) [a, x3_3, x4_7]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_4, x3_5]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_4, x3_6]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_4, x3_7]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_4, x4(0)]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_4, x4_1]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_4, x4_2]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_4, x4_3]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_4, x4_4]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_4, x4_5]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_4, x4_6]

=======================================================
Substituting transcendence basis.
=======================================================
memory used=10246.0MB, alloc=183.8MB, time=92.56
Algebraically independent parameters (candidates) [a, x3_4, x4_7]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_5, x3_6]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_5, x3_7]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_5, x4(0)]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_5, x4_1]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_5, x4_2]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_5, x4_3]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_5, x4_4]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_5, x4_5]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_5, x4_6]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_5, x4_7]

=======================================================
Substituting transcendence basis.
=======================================================
memory used=10398.1MB, alloc=183.8MB, time=94.05
Algebraically independent parameters (candidates) [a, x3_6, x3_7]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_6, x4(0)]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_6, x4_1]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_6, x4_2]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_6, x4_3]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_6, x4_4]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_6, x4_5]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_6, x4_6]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_6, x4_7]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_7, x4(0)]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_7, x4_1]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_7, x4_2]

=======================================================
Substituting transcendence basis.
=======================================================
memory used=10550.0MB, alloc=183.8MB, time=95.55
Algebraically independent parameters (candidates) [a, x3_7, x4_3]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_7, x4_4]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_7, x4_5]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_7, x4_6]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_7, x4_7]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x4(0), x4_1]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x4(0), x4_2]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x4(0), x4_3]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x4(0), x4_4]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x4(0), x4_5]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x4(0), x4_6]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x4(0), x4_7]

=======================================================
Substituting transcendence basis.
=======================================================
memory used=10703.6MB, alloc=183.8MB, time=97.13
Algebraically independent parameters (candidates) [a, x4_1, x4_2]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x4_1, x4_3]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x4_1, x4_4]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x4_1, x4_5]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x4_1, x4_6]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x4_1, x4_7]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x4_2, x4_3]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x4_2, x4_4]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x4_2, x4_5]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x4_2, x4_6]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x4_2, x4_7]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x4_3, x4_4]

=======================================================
Substituting transcendence basis.
=======================================================
memory used=10857.4MB, alloc=183.8MB, time=98.64
Algebraically independent parameters (candidates) [a, x4_3, x4_5]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x4_3, x4_6]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x4_3, x4_7]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x4_4, x4_5]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x4_4, x4_6]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x4_4, x4_7]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x4_5, x4_6]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x4_5, x4_7]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x4_6, x4_7]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [b, d, x3(0)]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b, d}
Algebraically independent parameters among derivatives: {x3(0)}
	Adding ODEs: [diff(b(t),t) = 0, diff(d(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t), y_faux2(t) = d(t)]
	New system: [diff(b(t),t) = 0, diff(d(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d(t)*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d(t)*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t), y_faux2(t) = d(t)]

=== Input info ===
State variables:          [b(t), d(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t), y_faux2(t)]
Input variables:          []
Parameters in equations:  [a, k3, k4, k5, k6, k7]
===================

memory used=11011.5MB, alloc=183.8MB, time=100.11
memory used=11119.9MB, alloc=183.8MB, time=101.34
memory used=11231.9MB, alloc=183.8MB, time=102.25
memory used=11333.6MB, alloc=183.8MB, time=103.02
	Adding new y-equations: [y_faux3_0 = x3_0]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, y_faux2_0-d_0, d_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d_0*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d_0+a-x3_0-x4_0)*x2_1-x2_0*(-b_0*d_1-b_1*d_0+x3_1+x4_1))*k5-x1_1*k3+k4*x2_1-k6*x3_1-k6*x4_1+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d_0*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d_2+2*b_1*d_1+b_2*d_0-x3_2-x4_2)*x2_0+(b_0*d_0+a-x3_0-x4_0)*x2_2+2*x2_1*(b_0*d_1+b_1*d_0-x3_1-x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, d_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_0*d_1-b_1*d_0+x4_1)*x2_0-x2_1*(b_0*d_0-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d_3+3*b_1*d_2+3*b_2*d_1+b_3*d_0-x3_3-x4_3)*x2_0+(3*b_0*d_2+6*b_1*d_1+3*b_2*d_0-3*x3_2-3*x4_2)*x2_1+(b_0*d_0+a-x3_0-x4_0)*x2_3+3*x2_2*(b_0*d_1+b_1*d_0-x3_1-x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, d_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*d_2-2*b_1*d_1-b_2*d_0+x4_2)*x2_0+(-2*b_0*d_1-2*b_1*d_0+2*x4_1)*x2_1+x2_2*(-b_0*d_0+x4_0))*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d_4+4*b_1*d_3+6*b_2*d_2+4*b_3*d_1+b_4*d_0-x3_4-x4_4)*x2_0+(4*b_0*d_3+12*b_1*d_2+12*b_2*d_1+4*b_3*d_0-4*x3_3-4*x4_3)*x2_1+(6*b_0*d_2+12*b_1*d_1+6*b_2*d_0-6*x3_2-6*x4_2)*x2_2+(b_0*d_0+a-x3_0-x4_0)*x2_4+4*x2_3*(b_0*d_1+b_1*d_0-x3_1-x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, d_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*d_3-3*b_1*d_2-3*b_2*d_1-b_3*d_0+x4_3)*x2_0+(-3*b_0*d_2-6*b_1*d_1-3*b_2*d_0+3*x4_2)*x2_1+(-d_0*x2_3-3*d_1*x2_2)*b_0-3*x2_2*b_1*d_0+3*x4_1*x2_2+x2_3*x4_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*d_5+5*b_1*d_4+10*b_2*d_3+10*b_3*d_2+5*b_4*d_1+b_5*d_0-x3_5-x4_5)*x2_0+(5*b_0*d_4+20*b_1*d_3+30*b_2*d_2+20*b_3*d_1+5*b_4*d_0-5*x3_4-5*x4_4)*x2_1+(10*b_0*d_3+30*b_1*d_2+30*b_2*d_1+10*b_3*d_0-10*x3_3-10*x4_3)*x2_2+(d_0*x2_5+5*d_1*x2_4+10*d_2*x2_3)*b_0+(5*b_1*x2_4+10*b_2*x2_3)*d_0+(20*b_1*d_1-10*x3_2-10*x4_2)*x2_3+(a-x3_0-x4_0)*x2_5-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, d_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*d_4-4*b_1*d_3-6*b_2*d_2-4*b_3*d_1-b_4*d_0+x4_4)*x2_0+(-4*b_0*d_3-12*b_1*d_2-12*b_2*d_1-4*b_3*d_0+4*x4_3)*x2_1+(-d_0*x2_4-4*d_1*x2_3-6*d_2*x2_2)*b_0+(-4*b_1*x2_3-6*b_2*x2_2)*d_0+(-12*b_1*d_1+6*x4_2)*x2_2+4*x4_1*x2_3+x4_0*x2_4)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*d_6+6*b_1*d_5+15*b_2*d_4+20*b_3*d_3+15*b_4*d_2+6*b_5*d_1+b_6*d_0-x3_6-x4_6)*x2_0+(6*b_0*d_5+30*b_1*d_4+60*b_2*d_3+60*b_3*d_2+30*b_4*d_1+6*b_5*d_0-6*x3_5-6*x4_5)*x2_1+(15*b_0*d_4+60*b_1*d_3+90*b_2*d_2+60*b_3*d_1+15*b_4*d_0-15*x3_4-15*x4_4)*x2_2+(d_0*x2_6+6*d_1*x2_5+15*d_2*x2_4+20*d_3*x2_3)*b_0+(6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3)*d_0+(60*b_1*d_2+60*b_2*d_1-20*x3_3-20*x4_3)*x2_3+30*b_1*d_1*x2_4+(-15*x3_2-15*x4_2)*x2_4+(a-x3_0-x4_0)*x2_6-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, d_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*d_5-5*b_1*d_4-10*b_2*d_3-10*b_3*d_2-5*b_4*d_1-b_5*d_0+x4_5)*x2_0+(-5*b_0*d_4-20*b_1*d_3-30*b_2*d_2-20*b_3*d_1-5*b_4*d_0+5*x4_4)*x2_1+(-d_0*x2_5-5*d_1*x2_4-10*d_2*x2_3-10*d_3*x2_2)*b_0+(-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2)*d_0+(-30*b_1*d_2-30*b_2*d_1+10*x4_3)*x2_2-20*d_1*x2_3*b_1+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*d_7+7*b_1*d_6+21*b_2*d_5+35*b_3*d_4+35*b_4*d_3+21*b_5*d_2+7*b_6*d_1+b_7*d_0-x3_7-x4_7)*x2_0+(7*b_0*d_6+42*b_1*d_5+105*b_2*d_4+140*b_3*d_3+105*b_4*d_2+42*b_5*d_1+7*b_6*d_0-7*x3_6-7*x4_6)*x2_1+(21*b_0*d_5+105*b_1*d_4+210*b_2*d_3+210*b_3*d_2+105*b_4*d_1+21*b_5*d_0-21*x3_5-21*x4_5)*x2_2+(d_0*x2_7+7*d_1*x2_6+21*d_2*x2_5+35*d_3*x2_4+35*d_4*x2_3)*b_0+(7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3)*d_0+(140*b_1*d_3+210*b_2*d_2+140*b_3*d_1-35*x3_4-35*x4_4)*x2_3+(42*d_1*x2_5+105*d_2*x2_4)*b_1+105*b_2*d_1*x2_4+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5+(a-x3_0-x4_0)*x2_7-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, d_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*d_6-6*b_1*d_5-15*b_2*d_4-20*b_3*d_3-15*b_4*d_2-6*b_5*d_1-b_6*d_0+x4_6)*x2_0+(-6*b_0*d_5-30*b_1*d_4-60*b_2*d_3-60*b_3*d_2-30*b_4*d_1-6*b_5*d_0+6*x4_5)*x2_1+(-d_0*x2_6-6*d_1*x2_5-15*d_2*x2_4-20*d_3*x2_3-15*d_4*x2_2)*b_0+(-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2)*d_0+(-60*b_1*d_3-90*b_2*d_2-60*b_3*d_1+15*x4_4)*x2_2+(-30*d_1*x2_4-60*d_2*x2_3)*b_1-60*b_2*d_1*x2_3+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, -d_1+y_faux2_1, -d_2+y_faux2_2, -d_3+y_faux2_3, -d_4+y_faux2_4, -d_5+y_faux2_5, -d_6+y_faux2_6, -d_7+y_faux2_7, y_faux3_0-x3_0]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = d_0, y_faux2_1 = d_1, y_faux2_2 = d_2, y_faux2_3 = d_3, y_faux2_4 = d_4, y_faux2_5 = d_5, y_faux2_6 = d_6, y_faux2_7 = d_7, y_faux2_8 = d_8, y_faux2_9 = d_9, y_faux2_10 = d_10, y_faux2_11 = d_11, y_faux2_12 = d_12, y_faux2_13 = d_13, y_faux2_14 = d_14, y_faux3_0 = x3_0]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability:  723190167600000000000000
Random sample for the outputs and inputs is generated from  [a = 9727168227844608883459, k3 = 199948363924949046552643, k4 = 167895002471931178940729, k5 = 716056770538928023799100, k6 = 288088815378597591611826, k7 = 137696482857243279088224, b_0 = 492719775932038671004326, d_0 = 198034376255471746255442, x1_0 = 317281439254942253984503, x2_0 = 93307609237080886290681, x3_0 = 220297944332732778689758, x4_0 = 265775622886517517163129, x5_0 = 576816400776609720462967]
The polynomial system widehat{E^t} contains  83 equations in  68  variables
            "new_logs/Tumor/transcendence_154_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, d, x3_1]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b, d}
Algebraically independent parameters among derivatives: {x3_1}
	Adding ODEs: [diff(b(t),t) = 0, diff(d(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t), y_faux2(t) = d(t)]
	New system: [diff(b(t),t) = 0, diff(d(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d(t)*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d(t)*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t), y_faux2(t) = d(t)]

=== Input info ===
State variables:          [b(t), d(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t), y_faux2(t)]
Input variables:          []
Parameters in equations:  [a, k3, k4, k5, k6, k7]
===================

memory used=11453.7MB, alloc=183.8MB, time=104.45
memory used=11567.3MB, alloc=183.8MB, time=105.35
memory used=11669.3MB, alloc=183.8MB, time=106.17
	Adding new y-equations: [y_faux3_0 = x3_1]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, y_faux2_0-d_0, d_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d_0*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d_0+a-x3_0-x4_0)*x2_1-x2_0*(-b_0*d_1-b_1*d_0+x3_1+x4_1))*k5-x1_1*k3+k4*x2_1-k6*x3_1-k6*x4_1+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d_0*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d_2+2*b_1*d_1+b_2*d_0-x3_2-x4_2)*x2_0+(b_0*d_0+a-x3_0-x4_0)*x2_2+2*x2_1*(b_0*d_1+b_1*d_0-x3_1-x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, d_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_0*d_1-b_1*d_0+x4_1)*x2_0-x2_1*(b_0*d_0-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d_3+3*b_1*d_2+3*b_2*d_1+b_3*d_0-x3_3-x4_3)*x2_0+(3*b_0*d_2+6*b_1*d_1+3*b_2*d_0-3*x3_2-3*x4_2)*x2_1+(b_0*d_0+a-x3_0-x4_0)*x2_3+3*x2_2*(b_0*d_1+b_1*d_0-x3_1-x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, d_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*d_2-2*b_1*d_1-b_2*d_0+x4_2)*x2_0+(-2*b_0*d_1-2*b_1*d_0+2*x4_1)*x2_1+x2_2*(-b_0*d_0+x4_0))*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d_4+4*b_1*d_3+6*b_2*d_2+4*b_3*d_1+b_4*d_0-x3_4-x4_4)*x2_0+(4*b_0*d_3+12*b_1*d_2+12*b_2*d_1+4*b_3*d_0-4*x3_3-4*x4_3)*x2_1+(6*b_0*d_2+12*b_1*d_1+6*b_2*d_0-6*x3_2-6*x4_2)*x2_2+(b_0*d_0+a-x3_0-x4_0)*x2_4+4*x2_3*(b_0*d_1+b_1*d_0-x3_1-x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, d_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*d_3-3*b_1*d_2-3*b_2*d_1-b_3*d_0+x4_3)*x2_0+(-3*b_0*d_2-6*b_1*d_1-3*b_2*d_0+3*x4_2)*x2_1+(-d_0*x2_3-3*d_1*x2_2)*b_0-3*x2_2*b_1*d_0+3*x4_1*x2_2+x2_3*x4_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*d_5+5*b_1*d_4+10*b_2*d_3+10*b_3*d_2+5*b_4*d_1+b_5*d_0-x3_5-x4_5)*x2_0+(5*b_0*d_4+20*b_1*d_3+30*b_2*d_2+20*b_3*d_1+5*b_4*d_0-5*x3_4-5*x4_4)*x2_1+(10*b_0*d_3+30*b_1*d_2+30*b_2*d_1+10*b_3*d_0-10*x3_3-10*x4_3)*x2_2+(d_0*x2_5+5*d_1*x2_4+10*d_2*x2_3)*b_0+(5*b_1*x2_4+10*b_2*x2_3)*d_0+(20*b_1*d_1-10*x3_2-10*x4_2)*x2_3+(a-x3_0-x4_0)*x2_5-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, d_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*d_4-4*b_1*d_3-6*b_2*d_2-4*b_3*d_1-b_4*d_0+x4_4)*x2_0+(-4*b_0*d_3-12*b_1*d_2-12*b_2*d_1-4*b_3*d_0+4*x4_3)*x2_1+(-d_0*x2_4-4*d_1*x2_3-6*d_2*x2_2)*b_0+(-4*b_1*x2_3-6*b_2*x2_2)*d_0+(-12*b_1*d_1+6*x4_2)*x2_2+4*x4_1*x2_3+x4_0*x2_4)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*d_6+6*b_1*d_5+15*b_2*d_4+20*b_3*d_3+15*b_4*d_2+6*b_5*d_1+b_6*d_0-x3_6-x4_6)*x2_0+(6*b_0*d_5+30*b_1*d_4+60*b_2*d_3+60*b_3*d_2+30*b_4*d_1+6*b_5*d_0-6*x3_5-6*x4_5)*x2_1+(15*b_0*d_4+60*b_1*d_3+90*b_2*d_2+60*b_3*d_1+15*b_4*d_0-15*x3_4-15*x4_4)*x2_2+(d_0*x2_6+6*d_1*x2_5+15*d_2*x2_4+20*d_3*x2_3)*b_0+(6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3)*d_0+(60*b_1*d_2+60*b_2*d_1-20*x3_3-20*x4_3)*x2_3+30*b_1*d_1*x2_4+(-15*x3_2-15*x4_2)*x2_4+(a-x3_0-x4_0)*x2_6-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, d_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*d_5-5*b_1*d_4-10*b_2*d_3-10*b_3*d_2-5*b_4*d_1-b_5*d_0+x4_5)*x2_0+(-5*b_0*d_4-20*b_1*d_3-30*b_2*d_2-20*b_3*d_1-5*b_4*d_0+5*x4_4)*x2_1+(-d_0*x2_5-5*d_1*x2_4-10*d_2*x2_3-10*d_3*x2_2)*b_0+(-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2)*d_0+(-30*b_1*d_2-30*b_2*d_1+10*x4_3)*x2_2-20*d_1*x2_3*b_1+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*d_7+7*b_1*d_6+21*b_2*d_5+35*b_3*d_4+35*b_4*d_3+21*b_5*d_2+7*b_6*d_1+b_7*d_0-x3_7-x4_7)*x2_0+(7*b_0*d_6+42*b_1*d_5+105*b_2*d_4+140*b_3*d_3+105*b_4*d_2+42*b_5*d_1+7*b_6*d_0-7*x3_6-7*x4_6)*x2_1+(21*b_0*d_5+105*b_1*d_4+210*b_2*d_3+210*b_3*d_2+105*b_4*d_1+21*b_5*d_0-21*x3_5-21*x4_5)*x2_2+(d_0*x2_7+7*d_1*x2_6+21*d_2*x2_5+35*d_3*x2_4+35*d_4*x2_3)*b_0+(7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3)*d_0+(140*b_1*d_3+210*b_2*d_2+140*b_3*d_1-35*x3_4-35*x4_4)*x2_3+(42*d_1*x2_5+105*d_2*x2_4)*b_1+105*b_2*d_1*x2_4+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5+(a-x3_0-x4_0)*x2_7-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, d_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*d_6-6*b_1*d_5-15*b_2*d_4-20*b_3*d_3-15*b_4*d_2-6*b_5*d_1-b_6*d_0+x4_6)*x2_0+(-6*b_0*d_5-30*b_1*d_4-60*b_2*d_3-60*b_3*d_2-30*b_4*d_1-6*b_5*d_0+6*x4_5)*x2_1+(-d_0*x2_6-6*d_1*x2_5-15*d_2*x2_4-20*d_3*x2_3-15*d_4*x2_2)*b_0+(-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2)*d_0+(-60*b_1*d_3-90*b_2*d_2-60*b_3*d_1+15*x4_4)*x2_2+(-30*d_1*x2_4-60*d_2*x2_3)*b_1-60*b_2*d_1*x2_3+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, -d_1+y_faux2_1, -d_2+y_faux2_2, -d_3+y_faux2_3, -d_4+y_faux2_4, -d_5+y_faux2_5, -d_6+y_faux2_6, -d_7+y_faux2_7, y_faux3_0-x3_1]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = d_0, y_faux2_1 = d_1, y_faux2_2 = d_2, y_faux2_3 = d_3, y_faux2_4 = d_4, y_faux2_5 = d_5, y_faux2_6 = d_6, y_faux2_7 = d_7, y_faux2_8 = d_8, y_faux2_9 = d_9, y_faux2_10 = d_10, y_faux2_11 = d_11, y_faux2_12 = d_12, y_faux2_13 = d_13, y_faux2_14 = d_14, y_faux3_0 = x3_1]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability:  723190167600000000000000
Random sample for the outputs and inputs is generated from  [a = 668042280038440126217977, k3 = 718196862983481458246342, k4 = 283913707132504328173917, k5 = 45768446158961961423897, k6 = 710495463935235352360311, k7 = 442962904713493704820357, b_0 = 282175319622465457139371, d_0 = 568353800670491970283354, x1_0 = 652827747373795206899060, x2_0 = 363546738850038301174702, x3_0 = 443718607263051497782805, x4_0 = 633966652670729209640174, x5_0 = 328658327950781016768949]
The polynomial system widehat{E^t} contains  83 equations in  68  variables
            "new_logs/Tumor/transcendence_155_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, d, x3_2]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b, d}
Algebraically independent parameters among derivatives: {x3_2}
	Adding ODEs: [diff(b(t),t) = 0, diff(d(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t), y_faux2(t) = d(t)]
	New system: [diff(b(t),t) = 0, diff(d(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d(t)*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d(t)*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t), y_faux2(t) = d(t)]

=== Input info ===
State variables:          [b(t), d(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t), y_faux2(t)]
Input variables:          []
Parameters in equations:  [a, k3, k4, k5, k6, k7]
===================

memory used=11786.5MB, alloc=183.8MB, time=107.58
memory used=11904.7MB, alloc=183.8MB, time=108.49
memory used=12006.6MB, alloc=183.8MB, time=109.25
	Adding new y-equations: [y_faux3_0 = x3_2]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, y_faux2_0-d_0, d_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d_0*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d_0+a-x3_0-x4_0)*x2_1-x2_0*(-b_0*d_1-b_1*d_0+x3_1+x4_1))*k5-x1_1*k3+k4*x2_1-k6*x3_1-k6*x4_1+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d_0*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d_2+2*b_1*d_1+b_2*d_0-x3_2-x4_2)*x2_0+(b_0*d_0+a-x3_0-x4_0)*x2_2+2*x2_1*(b_0*d_1+b_1*d_0-x3_1-x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, d_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_0*d_1-b_1*d_0+x4_1)*x2_0-x2_1*(b_0*d_0-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d_3+3*b_1*d_2+3*b_2*d_1+b_3*d_0-x3_3-x4_3)*x2_0+(3*b_0*d_2+6*b_1*d_1+3*b_2*d_0-3*x3_2-3*x4_2)*x2_1+(b_0*d_0+a-x3_0-x4_0)*x2_3+3*x2_2*(b_0*d_1+b_1*d_0-x3_1-x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, d_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*d_2-2*b_1*d_1-b_2*d_0+x4_2)*x2_0+(-2*b_0*d_1-2*b_1*d_0+2*x4_1)*x2_1+x2_2*(-b_0*d_0+x4_0))*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d_4+4*b_1*d_3+6*b_2*d_2+4*b_3*d_1+b_4*d_0-x3_4-x4_4)*x2_0+(4*b_0*d_3+12*b_1*d_2+12*b_2*d_1+4*b_3*d_0-4*x3_3-4*x4_3)*x2_1+(6*b_0*d_2+12*b_1*d_1+6*b_2*d_0-6*x3_2-6*x4_2)*x2_2+(b_0*d_0+a-x3_0-x4_0)*x2_4+4*x2_3*(b_0*d_1+b_1*d_0-x3_1-x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, d_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*d_3-3*b_1*d_2-3*b_2*d_1-b_3*d_0+x4_3)*x2_0+(-3*b_0*d_2-6*b_1*d_1-3*b_2*d_0+3*x4_2)*x2_1+(-d_0*x2_3-3*d_1*x2_2)*b_0-3*x2_2*b_1*d_0+3*x4_1*x2_2+x2_3*x4_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*d_5+5*b_1*d_4+10*b_2*d_3+10*b_3*d_2+5*b_4*d_1+b_5*d_0-x3_5-x4_5)*x2_0+(5*b_0*d_4+20*b_1*d_3+30*b_2*d_2+20*b_3*d_1+5*b_4*d_0-5*x3_4-5*x4_4)*x2_1+(10*b_0*d_3+30*b_1*d_2+30*b_2*d_1+10*b_3*d_0-10*x3_3-10*x4_3)*x2_2+(d_0*x2_5+5*d_1*x2_4+10*d_2*x2_3)*b_0+(5*b_1*x2_4+10*b_2*x2_3)*d_0+(20*b_1*d_1-10*x3_2-10*x4_2)*x2_3+(a-x3_0-x4_0)*x2_5-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, d_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*d_4-4*b_1*d_3-6*b_2*d_2-4*b_3*d_1-b_4*d_0+x4_4)*x2_0+(-4*b_0*d_3-12*b_1*d_2-12*b_2*d_1-4*b_3*d_0+4*x4_3)*x2_1+(-d_0*x2_4-4*d_1*x2_3-6*d_2*x2_2)*b_0+(-4*b_1*x2_3-6*b_2*x2_2)*d_0+(-12*b_1*d_1+6*x4_2)*x2_2+4*x4_1*x2_3+x4_0*x2_4)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*d_6+6*b_1*d_5+15*b_2*d_4+20*b_3*d_3+15*b_4*d_2+6*b_5*d_1+b_6*d_0-x3_6-x4_6)*x2_0+(6*b_0*d_5+30*b_1*d_4+60*b_2*d_3+60*b_3*d_2+30*b_4*d_1+6*b_5*d_0-6*x3_5-6*x4_5)*x2_1+(15*b_0*d_4+60*b_1*d_3+90*b_2*d_2+60*b_3*d_1+15*b_4*d_0-15*x3_4-15*x4_4)*x2_2+(d_0*x2_6+6*d_1*x2_5+15*d_2*x2_4+20*d_3*x2_3)*b_0+(6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3)*d_0+(60*b_1*d_2+60*b_2*d_1-20*x3_3-20*x4_3)*x2_3+30*b_1*d_1*x2_4+(-15*x3_2-15*x4_2)*x2_4+(a-x3_0-x4_0)*x2_6-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, d_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*d_5-5*b_1*d_4-10*b_2*d_3-10*b_3*d_2-5*b_4*d_1-b_5*d_0+x4_5)*x2_0+(-5*b_0*d_4-20*b_1*d_3-30*b_2*d_2-20*b_3*d_1-5*b_4*d_0+5*x4_4)*x2_1+(-d_0*x2_5-5*d_1*x2_4-10*d_2*x2_3-10*d_3*x2_2)*b_0+(-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2)*d_0+(-30*b_1*d_2-30*b_2*d_1+10*x4_3)*x2_2-20*d_1*x2_3*b_1+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*d_7+7*b_1*d_6+21*b_2*d_5+35*b_3*d_4+35*b_4*d_3+21*b_5*d_2+7*b_6*d_1+b_7*d_0-x3_7-x4_7)*x2_0+(7*b_0*d_6+42*b_1*d_5+105*b_2*d_4+140*b_3*d_3+105*b_4*d_2+42*b_5*d_1+7*b_6*d_0-7*x3_6-7*x4_6)*x2_1+(21*b_0*d_5+105*b_1*d_4+210*b_2*d_3+210*b_3*d_2+105*b_4*d_1+21*b_5*d_0-21*x3_5-21*x4_5)*x2_2+(d_0*x2_7+7*d_1*x2_6+21*d_2*x2_5+35*d_3*x2_4+35*d_4*x2_3)*b_0+(7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3)*d_0+(140*b_1*d_3+210*b_2*d_2+140*b_3*d_1-35*x3_4-35*x4_4)*x2_3+(42*d_1*x2_5+105*d_2*x2_4)*b_1+105*b_2*d_1*x2_4+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5+(a-x3_0-x4_0)*x2_7-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, d_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*d_6-6*b_1*d_5-15*b_2*d_4-20*b_3*d_3-15*b_4*d_2-6*b_5*d_1-b_6*d_0+x4_6)*x2_0+(-6*b_0*d_5-30*b_1*d_4-60*b_2*d_3-60*b_3*d_2-30*b_4*d_1-6*b_5*d_0+6*x4_5)*x2_1+(-d_0*x2_6-6*d_1*x2_5-15*d_2*x2_4-20*d_3*x2_3-15*d_4*x2_2)*b_0+(-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2)*d_0+(-60*b_1*d_3-90*b_2*d_2-60*b_3*d_1+15*x4_4)*x2_2+(-30*d_1*x2_4-60*d_2*x2_3)*b_1-60*b_2*d_1*x2_3+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, -d_1+y_faux2_1, -d_2+y_faux2_2, -d_3+y_faux2_3, -d_4+y_faux2_4, -d_5+y_faux2_5, -d_6+y_faux2_6, -d_7+y_faux2_7, y_faux3_0-x3_2]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = d_0, y_faux2_1 = d_1, y_faux2_2 = d_2, y_faux2_3 = d_3, y_faux2_4 = d_4, y_faux2_5 = d_5, y_faux2_6 = d_6, y_faux2_7 = d_7, y_faux2_8 = d_8, y_faux2_9 = d_9, y_faux2_10 = d_10, y_faux2_11 = d_11, y_faux2_12 = d_12, y_faux2_13 = d_13, y_faux2_14 = d_14, y_faux3_0 = x3_2]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability:  723190167600000000000000
Random sample for the outputs and inputs is generated from  [a = 250700254120208547474651, k3 = 19986915424666380360517, k4 = 410248741789750742176560, k5 = 514842726474275499328372, k6 = 388538583471814152411057, k7 = 11489469924625209883786, b_0 = 324790609622086719327559, d_0 = 123043534040537394202564, x1_0 = 191037604256351300515184, x2_0 = 143152378806890975038603, x3_0 = 245399241123464333286852, x4_0 = 626585750713886346062201, x5_0 = 465204082460357529157781]
The polynomial system widehat{E^t} contains  83 equations in  68  variables
            "new_logs/Tumor/transcendence_156_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, d, x3_3]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b, d}
Algebraically independent parameters among derivatives: {x3_3}
	Adding ODEs: [diff(b(t),t) = 0, diff(d(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t), y_faux2(t) = d(t)]
	New system: [diff(b(t),t) = 0, diff(d(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d(t)*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d(t)*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t), y_faux2(t) = d(t)]

=== Input info ===
State variables:          [b(t), d(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t), y_faux2(t)]
Input variables:          []
Parameters in equations:  [a, k3, k4, k5, k6, k7]
===================

memory used=12128.4MB, alloc=183.8MB, time=110.68
memory used=12241.2MB, alloc=183.8MB, time=111.57
memory used=12343.0MB, alloc=183.8MB, time=112.34
	Adding new y-equations: [y_faux3_0 = x3_3]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, y_faux2_0-d_0, d_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d_0*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d_0+a-x3_0-x4_0)*x2_1-x2_0*(-b_0*d_1-b_1*d_0+x3_1+x4_1))*k5-x1_1*k3+k4*x2_1-k6*x3_1-k6*x4_1+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d_0*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d_2+2*b_1*d_1+b_2*d_0-x3_2-x4_2)*x2_0+(b_0*d_0+a-x3_0-x4_0)*x2_2+2*x2_1*(b_0*d_1+b_1*d_0-x3_1-x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, d_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_0*d_1-b_1*d_0+x4_1)*x2_0-x2_1*(b_0*d_0-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d_3+3*b_1*d_2+3*b_2*d_1+b_3*d_0-x3_3-x4_3)*x2_0+(3*b_0*d_2+6*b_1*d_1+3*b_2*d_0-3*x3_2-3*x4_2)*x2_1+(b_0*d_0+a-x3_0-x4_0)*x2_3+3*x2_2*(b_0*d_1+b_1*d_0-x3_1-x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, d_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*d_2-2*b_1*d_1-b_2*d_0+x4_2)*x2_0+(-2*b_0*d_1-2*b_1*d_0+2*x4_1)*x2_1+x2_2*(-b_0*d_0+x4_0))*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d_4+4*b_1*d_3+6*b_2*d_2+4*b_3*d_1+b_4*d_0-x3_4-x4_4)*x2_0+(4*b_0*d_3+12*b_1*d_2+12*b_2*d_1+4*b_3*d_0-4*x3_3-4*x4_3)*x2_1+(6*b_0*d_2+12*b_1*d_1+6*b_2*d_0-6*x3_2-6*x4_2)*x2_2+(b_0*d_0+a-x3_0-x4_0)*x2_4+4*x2_3*(b_0*d_1+b_1*d_0-x3_1-x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, d_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*d_3-3*b_1*d_2-3*b_2*d_1-b_3*d_0+x4_3)*x2_0+(-3*b_0*d_2-6*b_1*d_1-3*b_2*d_0+3*x4_2)*x2_1+(-d_0*x2_3-3*d_1*x2_2)*b_0-3*x2_2*b_1*d_0+3*x4_1*x2_2+x2_3*x4_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*d_5+5*b_1*d_4+10*b_2*d_3+10*b_3*d_2+5*b_4*d_1+b_5*d_0-x3_5-x4_5)*x2_0+(5*b_0*d_4+20*b_1*d_3+30*b_2*d_2+20*b_3*d_1+5*b_4*d_0-5*x3_4-5*x4_4)*x2_1+(10*b_0*d_3+30*b_1*d_2+30*b_2*d_1+10*b_3*d_0-10*x3_3-10*x4_3)*x2_2+(d_0*x2_5+5*d_1*x2_4+10*d_2*x2_3)*b_0+(5*b_1*x2_4+10*b_2*x2_3)*d_0+(20*b_1*d_1-10*x3_2-10*x4_2)*x2_3+(a-x3_0-x4_0)*x2_5-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, d_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*d_4-4*b_1*d_3-6*b_2*d_2-4*b_3*d_1-b_4*d_0+x4_4)*x2_0+(-4*b_0*d_3-12*b_1*d_2-12*b_2*d_1-4*b_3*d_0+4*x4_3)*x2_1+(-d_0*x2_4-4*d_1*x2_3-6*d_2*x2_2)*b_0+(-4*b_1*x2_3-6*b_2*x2_2)*d_0+(-12*b_1*d_1+6*x4_2)*x2_2+4*x4_1*x2_3+x4_0*x2_4)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*d_6+6*b_1*d_5+15*b_2*d_4+20*b_3*d_3+15*b_4*d_2+6*b_5*d_1+b_6*d_0-x3_6-x4_6)*x2_0+(6*b_0*d_5+30*b_1*d_4+60*b_2*d_3+60*b_3*d_2+30*b_4*d_1+6*b_5*d_0-6*x3_5-6*x4_5)*x2_1+(15*b_0*d_4+60*b_1*d_3+90*b_2*d_2+60*b_3*d_1+15*b_4*d_0-15*x3_4-15*x4_4)*x2_2+(d_0*x2_6+6*d_1*x2_5+15*d_2*x2_4+20*d_3*x2_3)*b_0+(6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3)*d_0+(60*b_1*d_2+60*b_2*d_1-20*x3_3-20*x4_3)*x2_3+30*b_1*d_1*x2_4+(-15*x3_2-15*x4_2)*x2_4+(a-x3_0-x4_0)*x2_6-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, d_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*d_5-5*b_1*d_4-10*b_2*d_3-10*b_3*d_2-5*b_4*d_1-b_5*d_0+x4_5)*x2_0+(-5*b_0*d_4-20*b_1*d_3-30*b_2*d_2-20*b_3*d_1-5*b_4*d_0+5*x4_4)*x2_1+(-d_0*x2_5-5*d_1*x2_4-10*d_2*x2_3-10*d_3*x2_2)*b_0+(-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2)*d_0+(-30*b_1*d_2-30*b_2*d_1+10*x4_3)*x2_2-20*d_1*x2_3*b_1+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*d_7+7*b_1*d_6+21*b_2*d_5+35*b_3*d_4+35*b_4*d_3+21*b_5*d_2+7*b_6*d_1+b_7*d_0-x3_7-x4_7)*x2_0+(7*b_0*d_6+42*b_1*d_5+105*b_2*d_4+140*b_3*d_3+105*b_4*d_2+42*b_5*d_1+7*b_6*d_0-7*x3_6-7*x4_6)*x2_1+(21*b_0*d_5+105*b_1*d_4+210*b_2*d_3+210*b_3*d_2+105*b_4*d_1+21*b_5*d_0-21*x3_5-21*x4_5)*x2_2+(d_0*x2_7+7*d_1*x2_6+21*d_2*x2_5+35*d_3*x2_4+35*d_4*x2_3)*b_0+(7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3)*d_0+(140*b_1*d_3+210*b_2*d_2+140*b_3*d_1-35*x3_4-35*x4_4)*x2_3+(42*d_1*x2_5+105*d_2*x2_4)*b_1+105*b_2*d_1*x2_4+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5+(a-x3_0-x4_0)*x2_7-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, d_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*d_6-6*b_1*d_5-15*b_2*d_4-20*b_3*d_3-15*b_4*d_2-6*b_5*d_1-b_6*d_0+x4_6)*x2_0+(-6*b_0*d_5-30*b_1*d_4-60*b_2*d_3-60*b_3*d_2-30*b_4*d_1-6*b_5*d_0+6*x4_5)*x2_1+(-d_0*x2_6-6*d_1*x2_5-15*d_2*x2_4-20*d_3*x2_3-15*d_4*x2_2)*b_0+(-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2)*d_0+(-60*b_1*d_3-90*b_2*d_2-60*b_3*d_1+15*x4_4)*x2_2+(-30*d_1*x2_4-60*d_2*x2_3)*b_1-60*b_2*d_1*x2_3+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, -d_1+y_faux2_1, -d_2+y_faux2_2, -d_3+y_faux2_3, -d_4+y_faux2_4, -d_5+y_faux2_5, -d_6+y_faux2_6, -d_7+y_faux2_7, y_faux3_0-x3_3]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = d_0, y_faux2_1 = d_1, y_faux2_2 = d_2, y_faux2_3 = d_3, y_faux2_4 = d_4, y_faux2_5 = d_5, y_faux2_6 = d_6, y_faux2_7 = d_7, y_faux2_8 = d_8, y_faux2_9 = d_9, y_faux2_10 = d_10, y_faux2_11 = d_11, y_faux2_12 = d_12, y_faux2_13 = d_13, y_faux2_14 = d_14, y_faux3_0 = x3_3]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability:  723190167600000000000000
Random sample for the outputs and inputs is generated from  [a = 254619486970669717230086, k3 = 700774814238301968964321, k4 = 566425072230601332762111, k5 = 207303363025786339979159, k6 = 61402696880238095390813, k7 = 445106011349731143507201, b_0 = 289403857049436193605115, d_0 = 416640155031950806829947, x1_0 = 650650960782238061128869, x2_0 = 677560708417216180501140, x3_0 = 462886772761762241583284, x4_0 = 671230842411015567773055, x5_0 = 510692629237350799801694]
The polynomial system widehat{E^t} contains  83 equations in  68  variables
            "new_logs/Tumor/transcendence_157_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, d, x3_4]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b, d}
Algebraically independent parameters among derivatives: {x3_4}
	Adding ODEs: [diff(b(t),t) = 0, diff(d(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t), y_faux2(t) = d(t)]
	New system: [diff(b(t),t) = 0, diff(d(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d(t)*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d(t)*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t), y_faux2(t) = d(t)]

=== Input info ===
State variables:          [b(t), d(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t), y_faux2(t)]
Input variables:          []
Parameters in equations:  [a, k3, k4, k5, k6, k7]
===================

memory used=12462.7MB, alloc=183.8MB, time=113.76
memory used=12579.1MB, alloc=183.8MB, time=114.73
memory used=12681.1MB, alloc=183.8MB, time=115.49
	Adding new y-equations: [y_faux3_0 = x3_4]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, y_faux2_0-d_0, d_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d_0*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d_0+a-x3_0-x4_0)*x2_1-x2_0*(-b_0*d_1-b_1*d_0+x3_1+x4_1))*k5-x1_1*k3+k4*x2_1-k6*x3_1-k6*x4_1+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d_0*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d_2+2*b_1*d_1+b_2*d_0-x3_2-x4_2)*x2_0+(b_0*d_0+a-x3_0-x4_0)*x2_2+2*x2_1*(b_0*d_1+b_1*d_0-x3_1-x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, d_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_0*d_1-b_1*d_0+x4_1)*x2_0-x2_1*(b_0*d_0-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d_3+3*b_1*d_2+3*b_2*d_1+b_3*d_0-x3_3-x4_3)*x2_0+(3*b_0*d_2+6*b_1*d_1+3*b_2*d_0-3*x3_2-3*x4_2)*x2_1+(b_0*d_0+a-x3_0-x4_0)*x2_3+3*x2_2*(b_0*d_1+b_1*d_0-x3_1-x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, d_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*d_2-2*b_1*d_1-b_2*d_0+x4_2)*x2_0+(-2*b_0*d_1-2*b_1*d_0+2*x4_1)*x2_1+x2_2*(-b_0*d_0+x4_0))*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d_4+4*b_1*d_3+6*b_2*d_2+4*b_3*d_1+b_4*d_0-x3_4-x4_4)*x2_0+(4*b_0*d_3+12*b_1*d_2+12*b_2*d_1+4*b_3*d_0-4*x3_3-4*x4_3)*x2_1+(6*b_0*d_2+12*b_1*d_1+6*b_2*d_0-6*x3_2-6*x4_2)*x2_2+(b_0*d_0+a-x3_0-x4_0)*x2_4+4*x2_3*(b_0*d_1+b_1*d_0-x3_1-x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, d_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*d_3-3*b_1*d_2-3*b_2*d_1-b_3*d_0+x4_3)*x2_0+(-3*b_0*d_2-6*b_1*d_1-3*b_2*d_0+3*x4_2)*x2_1+(-d_0*x2_3-3*d_1*x2_2)*b_0-3*x2_2*b_1*d_0+3*x4_1*x2_2+x2_3*x4_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*d_5+5*b_1*d_4+10*b_2*d_3+10*b_3*d_2+5*b_4*d_1+b_5*d_0-x3_5-x4_5)*x2_0+(5*b_0*d_4+20*b_1*d_3+30*b_2*d_2+20*b_3*d_1+5*b_4*d_0-5*x3_4-5*x4_4)*x2_1+(10*b_0*d_3+30*b_1*d_2+30*b_2*d_1+10*b_3*d_0-10*x3_3-10*x4_3)*x2_2+(d_0*x2_5+5*d_1*x2_4+10*d_2*x2_3)*b_0+(5*b_1*x2_4+10*b_2*x2_3)*d_0+(20*b_1*d_1-10*x3_2-10*x4_2)*x2_3+(a-x3_0-x4_0)*x2_5-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, d_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*d_4-4*b_1*d_3-6*b_2*d_2-4*b_3*d_1-b_4*d_0+x4_4)*x2_0+(-4*b_0*d_3-12*b_1*d_2-12*b_2*d_1-4*b_3*d_0+4*x4_3)*x2_1+(-d_0*x2_4-4*d_1*x2_3-6*d_2*x2_2)*b_0+(-4*b_1*x2_3-6*b_2*x2_2)*d_0+(-12*b_1*d_1+6*x4_2)*x2_2+4*x4_1*x2_3+x4_0*x2_4)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*d_6+6*b_1*d_5+15*b_2*d_4+20*b_3*d_3+15*b_4*d_2+6*b_5*d_1+b_6*d_0-x3_6-x4_6)*x2_0+(6*b_0*d_5+30*b_1*d_4+60*b_2*d_3+60*b_3*d_2+30*b_4*d_1+6*b_5*d_0-6*x3_5-6*x4_5)*x2_1+(15*b_0*d_4+60*b_1*d_3+90*b_2*d_2+60*b_3*d_1+15*b_4*d_0-15*x3_4-15*x4_4)*x2_2+(d_0*x2_6+6*d_1*x2_5+15*d_2*x2_4+20*d_3*x2_3)*b_0+(6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3)*d_0+(60*b_1*d_2+60*b_2*d_1-20*x3_3-20*x4_3)*x2_3+30*b_1*d_1*x2_4+(-15*x3_2-15*x4_2)*x2_4+(a-x3_0-x4_0)*x2_6-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, d_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*d_5-5*b_1*d_4-10*b_2*d_3-10*b_3*d_2-5*b_4*d_1-b_5*d_0+x4_5)*x2_0+(-5*b_0*d_4-20*b_1*d_3-30*b_2*d_2-20*b_3*d_1-5*b_4*d_0+5*x4_4)*x2_1+(-d_0*x2_5-5*d_1*x2_4-10*d_2*x2_3-10*d_3*x2_2)*b_0+(-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2)*d_0+(-30*b_1*d_2-30*b_2*d_1+10*x4_3)*x2_2-20*d_1*x2_3*b_1+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*d_7+7*b_1*d_6+21*b_2*d_5+35*b_3*d_4+35*b_4*d_3+21*b_5*d_2+7*b_6*d_1+b_7*d_0-x3_7-x4_7)*x2_0+(7*b_0*d_6+42*b_1*d_5+105*b_2*d_4+140*b_3*d_3+105*b_4*d_2+42*b_5*d_1+7*b_6*d_0-7*x3_6-7*x4_6)*x2_1+(21*b_0*d_5+105*b_1*d_4+210*b_2*d_3+210*b_3*d_2+105*b_4*d_1+21*b_5*d_0-21*x3_5-21*x4_5)*x2_2+(d_0*x2_7+7*d_1*x2_6+21*d_2*x2_5+35*d_3*x2_4+35*d_4*x2_3)*b_0+(7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3)*d_0+(140*b_1*d_3+210*b_2*d_2+140*b_3*d_1-35*x3_4-35*x4_4)*x2_3+(42*d_1*x2_5+105*d_2*x2_4)*b_1+105*b_2*d_1*x2_4+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5+(a-x3_0-x4_0)*x2_7-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, d_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*d_6-6*b_1*d_5-15*b_2*d_4-20*b_3*d_3-15*b_4*d_2-6*b_5*d_1-b_6*d_0+x4_6)*x2_0+(-6*b_0*d_5-30*b_1*d_4-60*b_2*d_3-60*b_3*d_2-30*b_4*d_1-6*b_5*d_0+6*x4_5)*x2_1+(-d_0*x2_6-6*d_1*x2_5-15*d_2*x2_4-20*d_3*x2_3-15*d_4*x2_2)*b_0+(-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2)*d_0+(-60*b_1*d_3-90*b_2*d_2-60*b_3*d_1+15*x4_4)*x2_2+(-30*d_1*x2_4-60*d_2*x2_3)*b_1-60*b_2*d_1*x2_3+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, -d_1+y_faux2_1, -d_2+y_faux2_2, -d_3+y_faux2_3, -d_4+y_faux2_4, -d_5+y_faux2_5, -d_6+y_faux2_6, -d_7+y_faux2_7, y_faux3_0-x3_4]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = d_0, y_faux2_1 = d_1, y_faux2_2 = d_2, y_faux2_3 = d_3, y_faux2_4 = d_4, y_faux2_5 = d_5, y_faux2_6 = d_6, y_faux2_7 = d_7, y_faux2_8 = d_8, y_faux2_9 = d_9, y_faux2_10 = d_10, y_faux2_11 = d_11, y_faux2_12 = d_12, y_faux2_13 = d_13, y_faux2_14 = d_14, y_faux3_0 = x3_4]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability:  723190167600000000000000
Random sample for the outputs and inputs is generated from  [a = 35880708212301736998835, k3 = 150856118075317407852635, k4 = 432726775998629941323295, k5 = 158563066355220867534446, k6 = 5675946489428199048828, k7 = 592064239530379375607701, b_0 = 353276159662570822463509, d_0 = 79784614475833954482877, x1_0 = 464086469941538274943794, x2_0 = 413957917569034324448829, x3_0 = 75399853371258722451355, x4_0 = 584751727574698792271292, x5_0 = 609220379186905276934009]
The polynomial system widehat{E^t} contains  83 equations in  68  variables
            "new_logs/Tumor/transcendence_158_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, d, x3_5]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b, d}
Algebraically independent parameters among derivatives: {x3_5}
	Adding ODEs: [diff(b(t),t) = 0, diff(d(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t), y_faux2(t) = d(t)]
	New system: [diff(b(t),t) = 0, diff(d(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d(t)*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d(t)*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t), y_faux2(t) = d(t)]

=== Input info ===
State variables:          [b(t), d(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t), y_faux2(t)]
Input variables:          []
Parameters in equations:  [a, k3, k4, k5, k6, k7]
===================

memory used=12796.3MB, alloc=183.8MB, time=116.88
memory used=12915.9MB, alloc=183.8MB, time=117.86
memory used=13018.0MB, alloc=183.8MB, time=118.64
	Adding new y-equations: [y_faux3_0 = x3_5]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, y_faux2_0-d_0, d_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d_0*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d_0+a-x3_0-x4_0)*x2_1-x2_0*(-b_0*d_1-b_1*d_0+x3_1+x4_1))*k5-x1_1*k3+k4*x2_1-k6*x3_1-k6*x4_1+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d_0*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d_2+2*b_1*d_1+b_2*d_0-x3_2-x4_2)*x2_0+(b_0*d_0+a-x3_0-x4_0)*x2_2+2*x2_1*(b_0*d_1+b_1*d_0-x3_1-x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, d_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_0*d_1-b_1*d_0+x4_1)*x2_0-x2_1*(b_0*d_0-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d_3+3*b_1*d_2+3*b_2*d_1+b_3*d_0-x3_3-x4_3)*x2_0+(3*b_0*d_2+6*b_1*d_1+3*b_2*d_0-3*x3_2-3*x4_2)*x2_1+(b_0*d_0+a-x3_0-x4_0)*x2_3+3*x2_2*(b_0*d_1+b_1*d_0-x3_1-x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, d_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*d_2-2*b_1*d_1-b_2*d_0+x4_2)*x2_0+(-2*b_0*d_1-2*b_1*d_0+2*x4_1)*x2_1+x2_2*(-b_0*d_0+x4_0))*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d_4+4*b_1*d_3+6*b_2*d_2+4*b_3*d_1+b_4*d_0-x3_4-x4_4)*x2_0+(4*b_0*d_3+12*b_1*d_2+12*b_2*d_1+4*b_3*d_0-4*x3_3-4*x4_3)*x2_1+(6*b_0*d_2+12*b_1*d_1+6*b_2*d_0-6*x3_2-6*x4_2)*x2_2+(b_0*d_0+a-x3_0-x4_0)*x2_4+4*x2_3*(b_0*d_1+b_1*d_0-x3_1-x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, d_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*d_3-3*b_1*d_2-3*b_2*d_1-b_3*d_0+x4_3)*x2_0+(-3*b_0*d_2-6*b_1*d_1-3*b_2*d_0+3*x4_2)*x2_1+(-d_0*x2_3-3*d_1*x2_2)*b_0-3*x2_2*b_1*d_0+3*x4_1*x2_2+x2_3*x4_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*d_5+5*b_1*d_4+10*b_2*d_3+10*b_3*d_2+5*b_4*d_1+b_5*d_0-x3_5-x4_5)*x2_0+(5*b_0*d_4+20*b_1*d_3+30*b_2*d_2+20*b_3*d_1+5*b_4*d_0-5*x3_4-5*x4_4)*x2_1+(10*b_0*d_3+30*b_1*d_2+30*b_2*d_1+10*b_3*d_0-10*x3_3-10*x4_3)*x2_2+(d_0*x2_5+5*d_1*x2_4+10*d_2*x2_3)*b_0+(5*b_1*x2_4+10*b_2*x2_3)*d_0+(20*b_1*d_1-10*x3_2-10*x4_2)*x2_3+(a-x3_0-x4_0)*x2_5-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, d_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*d_4-4*b_1*d_3-6*b_2*d_2-4*b_3*d_1-b_4*d_0+x4_4)*x2_0+(-4*b_0*d_3-12*b_1*d_2-12*b_2*d_1-4*b_3*d_0+4*x4_3)*x2_1+(-d_0*x2_4-4*d_1*x2_3-6*d_2*x2_2)*b_0+(-4*b_1*x2_3-6*b_2*x2_2)*d_0+(-12*b_1*d_1+6*x4_2)*x2_2+4*x4_1*x2_3+x4_0*x2_4)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*d_6+6*b_1*d_5+15*b_2*d_4+20*b_3*d_3+15*b_4*d_2+6*b_5*d_1+b_6*d_0-x3_6-x4_6)*x2_0+(6*b_0*d_5+30*b_1*d_4+60*b_2*d_3+60*b_3*d_2+30*b_4*d_1+6*b_5*d_0-6*x3_5-6*x4_5)*x2_1+(15*b_0*d_4+60*b_1*d_3+90*b_2*d_2+60*b_3*d_1+15*b_4*d_0-15*x3_4-15*x4_4)*x2_2+(d_0*x2_6+6*d_1*x2_5+15*d_2*x2_4+20*d_3*x2_3)*b_0+(6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3)*d_0+(60*b_1*d_2+60*b_2*d_1-20*x3_3-20*x4_3)*x2_3+30*b_1*d_1*x2_4+(-15*x3_2-15*x4_2)*x2_4+(a-x3_0-x4_0)*x2_6-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, d_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*d_5-5*b_1*d_4-10*b_2*d_3-10*b_3*d_2-5*b_4*d_1-b_5*d_0+x4_5)*x2_0+(-5*b_0*d_4-20*b_1*d_3-30*b_2*d_2-20*b_3*d_1-5*b_4*d_0+5*x4_4)*x2_1+(-d_0*x2_5-5*d_1*x2_4-10*d_2*x2_3-10*d_3*x2_2)*b_0+(-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2)*d_0+(-30*b_1*d_2-30*b_2*d_1+10*x4_3)*x2_2-20*d_1*x2_3*b_1+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*d_7+7*b_1*d_6+21*b_2*d_5+35*b_3*d_4+35*b_4*d_3+21*b_5*d_2+7*b_6*d_1+b_7*d_0-x3_7-x4_7)*x2_0+(7*b_0*d_6+42*b_1*d_5+105*b_2*d_4+140*b_3*d_3+105*b_4*d_2+42*b_5*d_1+7*b_6*d_0-7*x3_6-7*x4_6)*x2_1+(21*b_0*d_5+105*b_1*d_4+210*b_2*d_3+210*b_3*d_2+105*b_4*d_1+21*b_5*d_0-21*x3_5-21*x4_5)*x2_2+(d_0*x2_7+7*d_1*x2_6+21*d_2*x2_5+35*d_3*x2_4+35*d_4*x2_3)*b_0+(7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3)*d_0+(140*b_1*d_3+210*b_2*d_2+140*b_3*d_1-35*x3_4-35*x4_4)*x2_3+(42*d_1*x2_5+105*d_2*x2_4)*b_1+105*b_2*d_1*x2_4+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5+(a-x3_0-x4_0)*x2_7-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, d_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*d_6-6*b_1*d_5-15*b_2*d_4-20*b_3*d_3-15*b_4*d_2-6*b_5*d_1-b_6*d_0+x4_6)*x2_0+(-6*b_0*d_5-30*b_1*d_4-60*b_2*d_3-60*b_3*d_2-30*b_4*d_1-6*b_5*d_0+6*x4_5)*x2_1+(-d_0*x2_6-6*d_1*x2_5-15*d_2*x2_4-20*d_3*x2_3-15*d_4*x2_2)*b_0+(-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2)*d_0+(-60*b_1*d_3-90*b_2*d_2-60*b_3*d_1+15*x4_4)*x2_2+(-30*d_1*x2_4-60*d_2*x2_3)*b_1-60*b_2*d_1*x2_3+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, -d_1+y_faux2_1, -d_2+y_faux2_2, -d_3+y_faux2_3, -d_4+y_faux2_4, -d_5+y_faux2_5, -d_6+y_faux2_6, -d_7+y_faux2_7, y_faux3_0-x3_5]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = d_0, y_faux2_1 = d_1, y_faux2_2 = d_2, y_faux2_3 = d_3, y_faux2_4 = d_4, y_faux2_5 = d_5, y_faux2_6 = d_6, y_faux2_7 = d_7, y_faux2_8 = d_8, y_faux2_9 = d_9, y_faux2_10 = d_10, y_faux2_11 = d_11, y_faux2_12 = d_12, y_faux2_13 = d_13, y_faux2_14 = d_14, y_faux3_0 = x3_5]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability:  723190167600000000000000
Random sample for the outputs and inputs is generated from  [a = 33823328939390655462334, k3 = 35549166073524878188000, k4 = 573613382481534314956846, k5 = 367398973828777078939881, k6 = 514107651276524281859546, k7 = 106035728252639192587776, b_0 = 459814674586919183707756, d_0 = 69016850429638211773917, x1_0 = 718182001868912573691201, x2_0 = 476093323355558901797357, x3_0 = 282818632191440674461590, x4_0 = 462294729679380716050789, x5_0 = 628324396342376540426521]
The polynomial system widehat{E^t} contains  83 equations in  68  variables
            "new_logs/Tumor/transcendence_159_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, d, x3_6]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b, d}
Algebraically independent parameters among derivatives: {x3_6}
	Adding ODEs: [diff(b(t),t) = 0, diff(d(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t), y_faux2(t) = d(t)]
	New system: [diff(b(t),t) = 0, diff(d(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d(t)*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d(t)*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t), y_faux2(t) = d(t)]

=== Input info ===
State variables:          [b(t), d(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t), y_faux2(t)]
Input variables:          []
Parameters in equations:  [a, k3, k4, k5, k6, k7]
===================

memory used=13127.6MB, alloc=183.8MB, time=119.99
memory used=13254.7MB, alloc=183.8MB, time=121.04
memory used=13356.7MB, alloc=183.8MB, time=121.83
	Adding new y-equations: [y_faux3_0 = x3_6]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, y_faux2_0-d_0, d_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d_0*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d_0+a-x3_0-x4_0)*x2_1-x2_0*(-b_0*d_1-b_1*d_0+x3_1+x4_1))*k5-x1_1*k3+k4*x2_1-k6*x3_1-k6*x4_1+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d_0*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d_2+2*b_1*d_1+b_2*d_0-x3_2-x4_2)*x2_0+(b_0*d_0+a-x3_0-x4_0)*x2_2+2*x2_1*(b_0*d_1+b_1*d_0-x3_1-x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, d_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_0*d_1-b_1*d_0+x4_1)*x2_0-x2_1*(b_0*d_0-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d_3+3*b_1*d_2+3*b_2*d_1+b_3*d_0-x3_3-x4_3)*x2_0+(3*b_0*d_2+6*b_1*d_1+3*b_2*d_0-3*x3_2-3*x4_2)*x2_1+(b_0*d_0+a-x3_0-x4_0)*x2_3+3*x2_2*(b_0*d_1+b_1*d_0-x3_1-x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, d_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*d_2-2*b_1*d_1-b_2*d_0+x4_2)*x2_0+(-2*b_0*d_1-2*b_1*d_0+2*x4_1)*x2_1+x2_2*(-b_0*d_0+x4_0))*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d_4+4*b_1*d_3+6*b_2*d_2+4*b_3*d_1+b_4*d_0-x3_4-x4_4)*x2_0+(4*b_0*d_3+12*b_1*d_2+12*b_2*d_1+4*b_3*d_0-4*x3_3-4*x4_3)*x2_1+(6*b_0*d_2+12*b_1*d_1+6*b_2*d_0-6*x3_2-6*x4_2)*x2_2+(b_0*d_0+a-x3_0-x4_0)*x2_4+4*x2_3*(b_0*d_1+b_1*d_0-x3_1-x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, d_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*d_3-3*b_1*d_2-3*b_2*d_1-b_3*d_0+x4_3)*x2_0+(-3*b_0*d_2-6*b_1*d_1-3*b_2*d_0+3*x4_2)*x2_1+(-d_0*x2_3-3*d_1*x2_2)*b_0-3*x2_2*b_1*d_0+3*x4_1*x2_2+x2_3*x4_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*d_5+5*b_1*d_4+10*b_2*d_3+10*b_3*d_2+5*b_4*d_1+b_5*d_0-x3_5-x4_5)*x2_0+(5*b_0*d_4+20*b_1*d_3+30*b_2*d_2+20*b_3*d_1+5*b_4*d_0-5*x3_4-5*x4_4)*x2_1+(10*b_0*d_3+30*b_1*d_2+30*b_2*d_1+10*b_3*d_0-10*x3_3-10*x4_3)*x2_2+(d_0*x2_5+5*d_1*x2_4+10*d_2*x2_3)*b_0+(5*b_1*x2_4+10*b_2*x2_3)*d_0+(20*b_1*d_1-10*x3_2-10*x4_2)*x2_3+(a-x3_0-x4_0)*x2_5-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, d_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*d_4-4*b_1*d_3-6*b_2*d_2-4*b_3*d_1-b_4*d_0+x4_4)*x2_0+(-4*b_0*d_3-12*b_1*d_2-12*b_2*d_1-4*b_3*d_0+4*x4_3)*x2_1+(-d_0*x2_4-4*d_1*x2_3-6*d_2*x2_2)*b_0+(-4*b_1*x2_3-6*b_2*x2_2)*d_0+(-12*b_1*d_1+6*x4_2)*x2_2+4*x4_1*x2_3+x4_0*x2_4)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*d_6+6*b_1*d_5+15*b_2*d_4+20*b_3*d_3+15*b_4*d_2+6*b_5*d_1+b_6*d_0-x3_6-x4_6)*x2_0+(6*b_0*d_5+30*b_1*d_4+60*b_2*d_3+60*b_3*d_2+30*b_4*d_1+6*b_5*d_0-6*x3_5-6*x4_5)*x2_1+(15*b_0*d_4+60*b_1*d_3+90*b_2*d_2+60*b_3*d_1+15*b_4*d_0-15*x3_4-15*x4_4)*x2_2+(d_0*x2_6+6*d_1*x2_5+15*d_2*x2_4+20*d_3*x2_3)*b_0+(6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3)*d_0+(60*b_1*d_2+60*b_2*d_1-20*x3_3-20*x4_3)*x2_3+30*b_1*d_1*x2_4+(-15*x3_2-15*x4_2)*x2_4+(a-x3_0-x4_0)*x2_6-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, d_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*d_5-5*b_1*d_4-10*b_2*d_3-10*b_3*d_2-5*b_4*d_1-b_5*d_0+x4_5)*x2_0+(-5*b_0*d_4-20*b_1*d_3-30*b_2*d_2-20*b_3*d_1-5*b_4*d_0+5*x4_4)*x2_1+(-d_0*x2_5-5*d_1*x2_4-10*d_2*x2_3-10*d_3*x2_2)*b_0+(-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2)*d_0+(-30*b_1*d_2-30*b_2*d_1+10*x4_3)*x2_2-20*d_1*x2_3*b_1+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*d_7+7*b_1*d_6+21*b_2*d_5+35*b_3*d_4+35*b_4*d_3+21*b_5*d_2+7*b_6*d_1+b_7*d_0-x3_7-x4_7)*x2_0+(7*b_0*d_6+42*b_1*d_5+105*b_2*d_4+140*b_3*d_3+105*b_4*d_2+42*b_5*d_1+7*b_6*d_0-7*x3_6-7*x4_6)*x2_1+(21*b_0*d_5+105*b_1*d_4+210*b_2*d_3+210*b_3*d_2+105*b_4*d_1+21*b_5*d_0-21*x3_5-21*x4_5)*x2_2+(d_0*x2_7+7*d_1*x2_6+21*d_2*x2_5+35*d_3*x2_4+35*d_4*x2_3)*b_0+(7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3)*d_0+(140*b_1*d_3+210*b_2*d_2+140*b_3*d_1-35*x3_4-35*x4_4)*x2_3+(42*d_1*x2_5+105*d_2*x2_4)*b_1+105*b_2*d_1*x2_4+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5+(a-x3_0-x4_0)*x2_7-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, d_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*d_6-6*b_1*d_5-15*b_2*d_4-20*b_3*d_3-15*b_4*d_2-6*b_5*d_1-b_6*d_0+x4_6)*x2_0+(-6*b_0*d_5-30*b_1*d_4-60*b_2*d_3-60*b_3*d_2-30*b_4*d_1-6*b_5*d_0+6*x4_5)*x2_1+(-d_0*x2_6-6*d_1*x2_5-15*d_2*x2_4-20*d_3*x2_3-15*d_4*x2_2)*b_0+(-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2)*d_0+(-60*b_1*d_3-90*b_2*d_2-60*b_3*d_1+15*x4_4)*x2_2+(-30*d_1*x2_4-60*d_2*x2_3)*b_1-60*b_2*d_1*x2_3+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, -d_1+y_faux2_1, -d_2+y_faux2_2, -d_3+y_faux2_3, -d_4+y_faux2_4, -d_5+y_faux2_5, -d_6+y_faux2_6, -d_7+y_faux2_7, y_faux3_0-x3_6]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = d_0, y_faux2_1 = d_1, y_faux2_2 = d_2, y_faux2_3 = d_3, y_faux2_4 = d_4, y_faux2_5 = d_5, y_faux2_6 = d_6, y_faux2_7 = d_7, y_faux2_8 = d_8, y_faux2_9 = d_9, y_faux2_10 = d_10, y_faux2_11 = d_11, y_faux2_12 = d_12, y_faux2_13 = d_13, y_faux2_14 = d_14, y_faux3_0 = x3_6]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability:  723190167600000000000000
Random sample for the outputs and inputs is generated from  [a = 211782889453550703156237, k3 = 87179348023664692236242, k4 = 208316813610102948854531, k5 = 391754203100378008335863, k6 = 29235266949472988021698, k7 = 497431108027044025045472, b_0 = 342504700691791523618861, d_0 = 678282516229749970162051, x1_0 = 312937080420456116580124, x2_0 = 440267974994220500890278, x3_0 = 716461130553371147563911, x4_0 = 99805066814610976693306, x5_0 = 455838991999609047776052]
The polynomial system widehat{E^t} contains  83 equations in  68  variables
            "new_logs/Tumor/transcendence_160_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, d, x3_7]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b, d}
Algebraically independent parameters among derivatives: {x3_7}
	Adding ODEs: [diff(b(t),t) = 0, diff(d(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t), y_faux2(t) = d(t)]
	New system: [diff(b(t),t) = 0, diff(d(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d(t)*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d(t)*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t), y_faux2(t) = d(t)]

=== Input info ===
State variables:          [b(t), d(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t), y_faux2(t)]
Input variables:          []
Parameters in equations:  [a, k3, k4, k5, k6, k7]
===================

memory used=13477.3MB, alloc=183.8MB, time=123.24
memory used=13591.4MB, alloc=183.8MB, time=124.13
memory used=13693.5MB, alloc=183.8MB, time=124.90
	Adding new y-equations: [y_faux3_0 = x3_7]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, y_faux2_0-d_0, d_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d_0*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d_0+a-x3_0-x4_0)*x2_1-x2_0*(-b_0*d_1-b_1*d_0+x3_1+x4_1))*k5-x1_1*k3+k4*x2_1-k6*x3_1-k6*x4_1+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d_0*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d_2+2*b_1*d_1+b_2*d_0-x3_2-x4_2)*x2_0+(b_0*d_0+a-x3_0-x4_0)*x2_2+2*x2_1*(b_0*d_1+b_1*d_0-x3_1-x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, d_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_0*d_1-b_1*d_0+x4_1)*x2_0-x2_1*(b_0*d_0-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d_3+3*b_1*d_2+3*b_2*d_1+b_3*d_0-x3_3-x4_3)*x2_0+(3*b_0*d_2+6*b_1*d_1+3*b_2*d_0-3*x3_2-3*x4_2)*x2_1+(b_0*d_0+a-x3_0-x4_0)*x2_3+3*x2_2*(b_0*d_1+b_1*d_0-x3_1-x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, d_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*d_2-2*b_1*d_1-b_2*d_0+x4_2)*x2_0+(-2*b_0*d_1-2*b_1*d_0+2*x4_1)*x2_1+x2_2*(-b_0*d_0+x4_0))*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d_4+4*b_1*d_3+6*b_2*d_2+4*b_3*d_1+b_4*d_0-x3_4-x4_4)*x2_0+(4*b_0*d_3+12*b_1*d_2+12*b_2*d_1+4*b_3*d_0-4*x3_3-4*x4_3)*x2_1+(6*b_0*d_2+12*b_1*d_1+6*b_2*d_0-6*x3_2-6*x4_2)*x2_2+(b_0*d_0+a-x3_0-x4_0)*x2_4+4*x2_3*(b_0*d_1+b_1*d_0-x3_1-x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, d_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*d_3-3*b_1*d_2-3*b_2*d_1-b_3*d_0+x4_3)*x2_0+(-3*b_0*d_2-6*b_1*d_1-3*b_2*d_0+3*x4_2)*x2_1+(-d_0*x2_3-3*d_1*x2_2)*b_0-3*x2_2*b_1*d_0+3*x4_1*x2_2+x2_3*x4_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*d_5+5*b_1*d_4+10*b_2*d_3+10*b_3*d_2+5*b_4*d_1+b_5*d_0-x3_5-x4_5)*x2_0+(5*b_0*d_4+20*b_1*d_3+30*b_2*d_2+20*b_3*d_1+5*b_4*d_0-5*x3_4-5*x4_4)*x2_1+(10*b_0*d_3+30*b_1*d_2+30*b_2*d_1+10*b_3*d_0-10*x3_3-10*x4_3)*x2_2+(d_0*x2_5+5*d_1*x2_4+10*d_2*x2_3)*b_0+(5*b_1*x2_4+10*b_2*x2_3)*d_0+(20*b_1*d_1-10*x3_2-10*x4_2)*x2_3+(a-x3_0-x4_0)*x2_5-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, d_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*d_4-4*b_1*d_3-6*b_2*d_2-4*b_3*d_1-b_4*d_0+x4_4)*x2_0+(-4*b_0*d_3-12*b_1*d_2-12*b_2*d_1-4*b_3*d_0+4*x4_3)*x2_1+(-d_0*x2_4-4*d_1*x2_3-6*d_2*x2_2)*b_0+(-4*b_1*x2_3-6*b_2*x2_2)*d_0+(-12*b_1*d_1+6*x4_2)*x2_2+4*x4_1*x2_3+x4_0*x2_4)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*d_6+6*b_1*d_5+15*b_2*d_4+20*b_3*d_3+15*b_4*d_2+6*b_5*d_1+b_6*d_0-x3_6-x4_6)*x2_0+(6*b_0*d_5+30*b_1*d_4+60*b_2*d_3+60*b_3*d_2+30*b_4*d_1+6*b_5*d_0-6*x3_5-6*x4_5)*x2_1+(15*b_0*d_4+60*b_1*d_3+90*b_2*d_2+60*b_3*d_1+15*b_4*d_0-15*x3_4-15*x4_4)*x2_2+(d_0*x2_6+6*d_1*x2_5+15*d_2*x2_4+20*d_3*x2_3)*b_0+(6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3)*d_0+(60*b_1*d_2+60*b_2*d_1-20*x3_3-20*x4_3)*x2_3+30*b_1*d_1*x2_4+(-15*x3_2-15*x4_2)*x2_4+(a-x3_0-x4_0)*x2_6-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, d_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*d_5-5*b_1*d_4-10*b_2*d_3-10*b_3*d_2-5*b_4*d_1-b_5*d_0+x4_5)*x2_0+(-5*b_0*d_4-20*b_1*d_3-30*b_2*d_2-20*b_3*d_1-5*b_4*d_0+5*x4_4)*x2_1+(-d_0*x2_5-5*d_1*x2_4-10*d_2*x2_3-10*d_3*x2_2)*b_0+(-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2)*d_0+(-30*b_1*d_2-30*b_2*d_1+10*x4_3)*x2_2-20*d_1*x2_3*b_1+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*d_7+7*b_1*d_6+21*b_2*d_5+35*b_3*d_4+35*b_4*d_3+21*b_5*d_2+7*b_6*d_1+b_7*d_0-x3_7-x4_7)*x2_0+(7*b_0*d_6+42*b_1*d_5+105*b_2*d_4+140*b_3*d_3+105*b_4*d_2+42*b_5*d_1+7*b_6*d_0-7*x3_6-7*x4_6)*x2_1+(21*b_0*d_5+105*b_1*d_4+210*b_2*d_3+210*b_3*d_2+105*b_4*d_1+21*b_5*d_0-21*x3_5-21*x4_5)*x2_2+(d_0*x2_7+7*d_1*x2_6+21*d_2*x2_5+35*d_3*x2_4+35*d_4*x2_3)*b_0+(7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3)*d_0+(140*b_1*d_3+210*b_2*d_2+140*b_3*d_1-35*x3_4-35*x4_4)*x2_3+(42*d_1*x2_5+105*d_2*x2_4)*b_1+105*b_2*d_1*x2_4+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5+(a-x3_0-x4_0)*x2_7-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, d_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*d_6-6*b_1*d_5-15*b_2*d_4-20*b_3*d_3-15*b_4*d_2-6*b_5*d_1-b_6*d_0+x4_6)*x2_0+(-6*b_0*d_5-30*b_1*d_4-60*b_2*d_3-60*b_3*d_2-30*b_4*d_1-6*b_5*d_0+6*x4_5)*x2_1+(-d_0*x2_6-6*d_1*x2_5-15*d_2*x2_4-20*d_3*x2_3-15*d_4*x2_2)*b_0+(-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2)*d_0+(-60*b_1*d_3-90*b_2*d_2-60*b_3*d_1+15*x4_4)*x2_2+(-30*d_1*x2_4-60*d_2*x2_3)*b_1-60*b_2*d_1*x2_3+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, -d_1+y_faux2_1, -d_2+y_faux2_2, -d_3+y_faux2_3, -d_4+y_faux2_4, -d_5+y_faux2_5, -d_6+y_faux2_6, -d_7+y_faux2_7, y_faux3_0-x3_7]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = d_0, y_faux2_1 = d_1, y_faux2_2 = d_2, y_faux2_3 = d_3, y_faux2_4 = d_4, y_faux2_5 = d_5, y_faux2_6 = d_6, y_faux2_7 = d_7, y_faux2_8 = d_8, y_faux2_9 = d_9, y_faux2_10 = d_10, y_faux2_11 = d_11, y_faux2_12 = d_12, y_faux2_13 = d_13, y_faux2_14 = d_14, y_faux3_0 = x3_7]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability:  723190167600000000000000
Random sample for the outputs and inputs is generated from  [a = 230338448890706358234274, k3 = 567903887928076666287160, k4 = 201142349978012375740576, k5 = 248690822989514150850586, k6 = 486296737714490643619928, k7 = 191789053237309822546657, b_0 = 484637472776466487816504, d_0 = 294316281976507924686208, x1_0 = 536260420370512508302958, x2_0 = 677989255733165929932375, x3_0 = 528180725947906933008863, x4_0 = 596922145685515837347411, x5_0 = 127390211381751129435778]
The polynomial system widehat{E^t} contains  83 equations in  68  variables
            "new_logs/Tumor/transcendence_161_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, d, x4(0)]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b, d}
Algebraically independent parameters among derivatives: {x4(0)}
	Adding ODEs: [diff(b(t),t) = 0, diff(d(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t), y_faux2(t) = d(t)]
	New system: [diff(b(t),t) = 0, diff(d(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d(t)*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d(t)*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t), y_faux2(t) = d(t)]

=== Input info ===
State variables:          [b(t), d(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t), y_faux2(t)]
Input variables:          []
Parameters in equations:  [a, k3, k4, k5, k6, k7]
===================

memory used=13816.4MB, alloc=183.8MB, time=126.42
memory used=13928.5MB, alloc=183.8MB, time=127.37
memory used=14030.2MB, alloc=183.8MB, time=128.13
	Adding new y-equations: [y_faux3_0 = x4_0]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, y_faux2_0-d_0, d_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d_0*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d_0+a-x3_0-x4_0)*x2_1-x2_0*(-b_0*d_1-b_1*d_0+x3_1+x4_1))*k5-x1_1*k3+k4*x2_1-k6*x3_1-k6*x4_1+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d_0*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d_2+2*b_1*d_1+b_2*d_0-x3_2-x4_2)*x2_0+(b_0*d_0+a-x3_0-x4_0)*x2_2+2*x2_1*(b_0*d_1+b_1*d_0-x3_1-x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, d_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_0*d_1-b_1*d_0+x4_1)*x2_0-x2_1*(b_0*d_0-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d_3+3*b_1*d_2+3*b_2*d_1+b_3*d_0-x3_3-x4_3)*x2_0+(3*b_0*d_2+6*b_1*d_1+3*b_2*d_0-3*x3_2-3*x4_2)*x2_1+(b_0*d_0+a-x3_0-x4_0)*x2_3+3*x2_2*(b_0*d_1+b_1*d_0-x3_1-x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, d_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*d_2-2*b_1*d_1-b_2*d_0+x4_2)*x2_0+(-2*b_0*d_1-2*b_1*d_0+2*x4_1)*x2_1+x2_2*(-b_0*d_0+x4_0))*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d_4+4*b_1*d_3+6*b_2*d_2+4*b_3*d_1+b_4*d_0-x3_4-x4_4)*x2_0+(4*b_0*d_3+12*b_1*d_2+12*b_2*d_1+4*b_3*d_0-4*x3_3-4*x4_3)*x2_1+(6*b_0*d_2+12*b_1*d_1+6*b_2*d_0-6*x3_2-6*x4_2)*x2_2+(b_0*d_0+a-x3_0-x4_0)*x2_4+4*x2_3*(b_0*d_1+b_1*d_0-x3_1-x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, d_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*d_3-3*b_1*d_2-3*b_2*d_1-b_3*d_0+x4_3)*x2_0+(-3*b_0*d_2-6*b_1*d_1-3*b_2*d_0+3*x4_2)*x2_1+(-d_0*x2_3-3*d_1*x2_2)*b_0-3*x2_2*b_1*d_0+3*x4_1*x2_2+x2_3*x4_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*d_5+5*b_1*d_4+10*b_2*d_3+10*b_3*d_2+5*b_4*d_1+b_5*d_0-x3_5-x4_5)*x2_0+(5*b_0*d_4+20*b_1*d_3+30*b_2*d_2+20*b_3*d_1+5*b_4*d_0-5*x3_4-5*x4_4)*x2_1+(10*b_0*d_3+30*b_1*d_2+30*b_2*d_1+10*b_3*d_0-10*x3_3-10*x4_3)*x2_2+(d_0*x2_5+5*d_1*x2_4+10*d_2*x2_3)*b_0+(5*b_1*x2_4+10*b_2*x2_3)*d_0+(20*b_1*d_1-10*x3_2-10*x4_2)*x2_3+(a-x3_0-x4_0)*x2_5-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, d_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*d_4-4*b_1*d_3-6*b_2*d_2-4*b_3*d_1-b_4*d_0+x4_4)*x2_0+(-4*b_0*d_3-12*b_1*d_2-12*b_2*d_1-4*b_3*d_0+4*x4_3)*x2_1+(-d_0*x2_4-4*d_1*x2_3-6*d_2*x2_2)*b_0+(-4*b_1*x2_3-6*b_2*x2_2)*d_0+(-12*b_1*d_1+6*x4_2)*x2_2+4*x4_1*x2_3+x4_0*x2_4)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*d_6+6*b_1*d_5+15*b_2*d_4+20*b_3*d_3+15*b_4*d_2+6*b_5*d_1+b_6*d_0-x3_6-x4_6)*x2_0+(6*b_0*d_5+30*b_1*d_4+60*b_2*d_3+60*b_3*d_2+30*b_4*d_1+6*b_5*d_0-6*x3_5-6*x4_5)*x2_1+(15*b_0*d_4+60*b_1*d_3+90*b_2*d_2+60*b_3*d_1+15*b_4*d_0-15*x3_4-15*x4_4)*x2_2+(d_0*x2_6+6*d_1*x2_5+15*d_2*x2_4+20*d_3*x2_3)*b_0+(6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3)*d_0+(60*b_1*d_2+60*b_2*d_1-20*x3_3-20*x4_3)*x2_3+30*b_1*d_1*x2_4+(-15*x3_2-15*x4_2)*x2_4+(a-x3_0-x4_0)*x2_6-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, d_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*d_5-5*b_1*d_4-10*b_2*d_3-10*b_3*d_2-5*b_4*d_1-b_5*d_0+x4_5)*x2_0+(-5*b_0*d_4-20*b_1*d_3-30*b_2*d_2-20*b_3*d_1-5*b_4*d_0+5*x4_4)*x2_1+(-d_0*x2_5-5*d_1*x2_4-10*d_2*x2_3-10*d_3*x2_2)*b_0+(-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2)*d_0+(-30*b_1*d_2-30*b_2*d_1+10*x4_3)*x2_2-20*d_1*x2_3*b_1+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*d_7+7*b_1*d_6+21*b_2*d_5+35*b_3*d_4+35*b_4*d_3+21*b_5*d_2+7*b_6*d_1+b_7*d_0-x3_7-x4_7)*x2_0+(7*b_0*d_6+42*b_1*d_5+105*b_2*d_4+140*b_3*d_3+105*b_4*d_2+42*b_5*d_1+7*b_6*d_0-7*x3_6-7*x4_6)*x2_1+(21*b_0*d_5+105*b_1*d_4+210*b_2*d_3+210*b_3*d_2+105*b_4*d_1+21*b_5*d_0-21*x3_5-21*x4_5)*x2_2+(d_0*x2_7+7*d_1*x2_6+21*d_2*x2_5+35*d_3*x2_4+35*d_4*x2_3)*b_0+(7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3)*d_0+(140*b_1*d_3+210*b_2*d_2+140*b_3*d_1-35*x3_4-35*x4_4)*x2_3+(42*d_1*x2_5+105*d_2*x2_4)*b_1+105*b_2*d_1*x2_4+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5+(a-x3_0-x4_0)*x2_7-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, d_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*d_6-6*b_1*d_5-15*b_2*d_4-20*b_3*d_3-15*b_4*d_2-6*b_5*d_1-b_6*d_0+x4_6)*x2_0+(-6*b_0*d_5-30*b_1*d_4-60*b_2*d_3-60*b_3*d_2-30*b_4*d_1-6*b_5*d_0+6*x4_5)*x2_1+(-d_0*x2_6-6*d_1*x2_5-15*d_2*x2_4-20*d_3*x2_3-15*d_4*x2_2)*b_0+(-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2)*d_0+(-60*b_1*d_3-90*b_2*d_2-60*b_3*d_1+15*x4_4)*x2_2+(-30*d_1*x2_4-60*d_2*x2_3)*b_1-60*b_2*d_1*x2_3+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, -d_1+y_faux2_1, -d_2+y_faux2_2, -d_3+y_faux2_3, -d_4+y_faux2_4, -d_5+y_faux2_5, -d_6+y_faux2_6, -d_7+y_faux2_7, y_faux3_0-x4_0]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = d_0, y_faux2_1 = d_1, y_faux2_2 = d_2, y_faux2_3 = d_3, y_faux2_4 = d_4, y_faux2_5 = d_5, y_faux2_6 = d_6, y_faux2_7 = d_7, y_faux2_8 = d_8, y_faux2_9 = d_9, y_faux2_10 = d_10, y_faux2_11 = d_11, y_faux2_12 = d_12, y_faux2_13 = d_13, y_faux2_14 = d_14, y_faux3_0 = x4_0]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability:  723190167600000000000000
Random sample for the outputs and inputs is generated from  [a = 607550574604056247734068, k3 = 51674532947755335850849, k4 = 76135900947674845747937, k5 = 548511882006074627346178, k6 = 475523737672274426935847, k7 = 444815560421465004356593, b_0 = 690753418985137542078171, d_0 = 430784231100755710956727, x1_0 = 433412127166301993717151, x2_0 = 187445163906019669654073, x3_0 = 609171746390673635494653, x4_0 = 311607140054083685726891, x5_0 = 238386432962120925626209]
The polynomial system widehat{E^t} contains  83 equations in  68  variables
            "new_logs/Tumor/transcendence_162_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, d, x4_1]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b, d}
Algebraically independent parameters among derivatives: {x4_1}
	Adding ODEs: [diff(b(t),t) = 0, diff(d(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t), y_faux2(t) = d(t)]
	New system: [diff(b(t),t) = 0, diff(d(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d(t)*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d(t)*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t), y_faux2(t) = d(t)]

=== Input info ===
State variables:          [b(t), d(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t), y_faux2(t)]
Input variables:          []
Parameters in equations:  [a, k3, k4, k5, k6, k7]
===================

memory used=14153.7MB, alloc=183.8MB, time=129.59
memory used=14262.6MB, alloc=215.8MB, time=130.53
memory used=14364.5MB, alloc=215.8MB, time=131.32
	Adding new y-equations: [y_faux3_0 = x4_1]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, y_faux2_0-d_0, d_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d_0*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d_0+a-x3_0-x4_0)*x2_1-x2_0*(-b_0*d_1-b_1*d_0+x3_1+x4_1))*k5-x1_1*k3+k4*x2_1-k6*x3_1-k6*x4_1+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d_0*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d_2+2*b_1*d_1+b_2*d_0-x3_2-x4_2)*x2_0+(b_0*d_0+a-x3_0-x4_0)*x2_2+2*x2_1*(b_0*d_1+b_1*d_0-x3_1-x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, d_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_0*d_1-b_1*d_0+x4_1)*x2_0-x2_1*(b_0*d_0-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d_3+3*b_1*d_2+3*b_2*d_1+b_3*d_0-x3_3-x4_3)*x2_0+(3*b_0*d_2+6*b_1*d_1+3*b_2*d_0-3*x3_2-3*x4_2)*x2_1+(b_0*d_0+a-x3_0-x4_0)*x2_3+3*x2_2*(b_0*d_1+b_1*d_0-x3_1-x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, d_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*d_2-2*b_1*d_1-b_2*d_0+x4_2)*x2_0+(-2*b_0*d_1-2*b_1*d_0+2*x4_1)*x2_1+x2_2*(-b_0*d_0+x4_0))*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d_4+4*b_1*d_3+6*b_2*d_2+4*b_3*d_1+b_4*d_0-x3_4-x4_4)*x2_0+(4*b_0*d_3+12*b_1*d_2+12*b_2*d_1+4*b_3*d_0-4*x3_3-4*x4_3)*x2_1+(6*b_0*d_2+12*b_1*d_1+6*b_2*d_0-6*x3_2-6*x4_2)*x2_2+(b_0*d_0+a-x3_0-x4_0)*x2_4+4*x2_3*(b_0*d_1+b_1*d_0-x3_1-x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, d_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*d_3-3*b_1*d_2-3*b_2*d_1-b_3*d_0+x4_3)*x2_0+(-3*b_0*d_2-6*b_1*d_1-3*b_2*d_0+3*x4_2)*x2_1+(-d_0*x2_3-3*d_1*x2_2)*b_0-3*x2_2*b_1*d_0+3*x4_1*x2_2+x2_3*x4_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*d_5+5*b_1*d_4+10*b_2*d_3+10*b_3*d_2+5*b_4*d_1+b_5*d_0-x3_5-x4_5)*x2_0+(5*b_0*d_4+20*b_1*d_3+30*b_2*d_2+20*b_3*d_1+5*b_4*d_0-5*x3_4-5*x4_4)*x2_1+(10*b_0*d_3+30*b_1*d_2+30*b_2*d_1+10*b_3*d_0-10*x3_3-10*x4_3)*x2_2+(d_0*x2_5+5*d_1*x2_4+10*d_2*x2_3)*b_0+(5*b_1*x2_4+10*b_2*x2_3)*d_0+(20*b_1*d_1-10*x3_2-10*x4_2)*x2_3+(a-x3_0-x4_0)*x2_5-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, d_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*d_4-4*b_1*d_3-6*b_2*d_2-4*b_3*d_1-b_4*d_0+x4_4)*x2_0+(-4*b_0*d_3-12*b_1*d_2-12*b_2*d_1-4*b_3*d_0+4*x4_3)*x2_1+(-d_0*x2_4-4*d_1*x2_3-6*d_2*x2_2)*b_0+(-4*b_1*x2_3-6*b_2*x2_2)*d_0+(-12*b_1*d_1+6*x4_2)*x2_2+4*x4_1*x2_3+x4_0*x2_4)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*d_6+6*b_1*d_5+15*b_2*d_4+20*b_3*d_3+15*b_4*d_2+6*b_5*d_1+b_6*d_0-x3_6-x4_6)*x2_0+(6*b_0*d_5+30*b_1*d_4+60*b_2*d_3+60*b_3*d_2+30*b_4*d_1+6*b_5*d_0-6*x3_5-6*x4_5)*x2_1+(15*b_0*d_4+60*b_1*d_3+90*b_2*d_2+60*b_3*d_1+15*b_4*d_0-15*x3_4-15*x4_4)*x2_2+(d_0*x2_6+6*d_1*x2_5+15*d_2*x2_4+20*d_3*x2_3)*b_0+(6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3)*d_0+(60*b_1*d_2+60*b_2*d_1-20*x3_3-20*x4_3)*x2_3+30*b_1*d_1*x2_4+(-15*x3_2-15*x4_2)*x2_4+(a-x3_0-x4_0)*x2_6-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, d_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*d_5-5*b_1*d_4-10*b_2*d_3-10*b_3*d_2-5*b_4*d_1-b_5*d_0+x4_5)*x2_0+(-5*b_0*d_4-20*b_1*d_3-30*b_2*d_2-20*b_3*d_1-5*b_4*d_0+5*x4_4)*x2_1+(-d_0*x2_5-5*d_1*x2_4-10*d_2*x2_3-10*d_3*x2_2)*b_0+(-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2)*d_0+(-30*b_1*d_2-30*b_2*d_1+10*x4_3)*x2_2-20*d_1*x2_3*b_1+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*d_7+7*b_1*d_6+21*b_2*d_5+35*b_3*d_4+35*b_4*d_3+21*b_5*d_2+7*b_6*d_1+b_7*d_0-x3_7-x4_7)*x2_0+(7*b_0*d_6+42*b_1*d_5+105*b_2*d_4+140*b_3*d_3+105*b_4*d_2+42*b_5*d_1+7*b_6*d_0-7*x3_6-7*x4_6)*x2_1+(21*b_0*d_5+105*b_1*d_4+210*b_2*d_3+210*b_3*d_2+105*b_4*d_1+21*b_5*d_0-21*x3_5-21*x4_5)*x2_2+(d_0*x2_7+7*d_1*x2_6+21*d_2*x2_5+35*d_3*x2_4+35*d_4*x2_3)*b_0+(7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3)*d_0+(140*b_1*d_3+210*b_2*d_2+140*b_3*d_1-35*x3_4-35*x4_4)*x2_3+(42*d_1*x2_5+105*d_2*x2_4)*b_1+105*b_2*d_1*x2_4+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5+(a-x3_0-x4_0)*x2_7-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, d_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*d_6-6*b_1*d_5-15*b_2*d_4-20*b_3*d_3-15*b_4*d_2-6*b_5*d_1-b_6*d_0+x4_6)*x2_0+(-6*b_0*d_5-30*b_1*d_4-60*b_2*d_3-60*b_3*d_2-30*b_4*d_1-6*b_5*d_0+6*x4_5)*x2_1+(-d_0*x2_6-6*d_1*x2_5-15*d_2*x2_4-20*d_3*x2_3-15*d_4*x2_2)*b_0+(-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2)*d_0+(-60*b_1*d_3-90*b_2*d_2-60*b_3*d_1+15*x4_4)*x2_2+(-30*d_1*x2_4-60*d_2*x2_3)*b_1-60*b_2*d_1*x2_3+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, -d_1+y_faux2_1, -d_2+y_faux2_2, -d_3+y_faux2_3, -d_4+y_faux2_4, -d_5+y_faux2_5, -d_6+y_faux2_6, -d_7+y_faux2_7, y_faux3_0-x4_1]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = d_0, y_faux2_1 = d_1, y_faux2_2 = d_2, y_faux2_3 = d_3, y_faux2_4 = d_4, y_faux2_5 = d_5, y_faux2_6 = d_6, y_faux2_7 = d_7, y_faux2_8 = d_8, y_faux2_9 = d_9, y_faux2_10 = d_10, y_faux2_11 = d_11, y_faux2_12 = d_12, y_faux2_13 = d_13, y_faux2_14 = d_14, y_faux3_0 = x4_1]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability:  723190167600000000000000
Random sample for the outputs and inputs is generated from  [a = 257022356603040509812093, k3 = 595814019799346207796999, k4 = 514512731809122233160309, k5 = 161835129196829016467148, k6 = 682778903852982101188168, k7 = 639489052434010472737401, b_0 = 55495766049803045451237, d_0 = 662284953844360477858734, x1_0 = 99988559694093322224983, x2_0 = 359291136845851712380482, x3_0 = 552755778751822360585199, x4_0 = 431086323745084689804739, x5_0 = 710158596359675035443966]
The polynomial system widehat{E^t} contains  83 equations in  68  variables
            "new_logs/Tumor/transcendence_163_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, d, x4_2]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b, d}
Algebraically independent parameters among derivatives: {x4_2}
	Adding ODEs: [diff(b(t),t) = 0, diff(d(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t), y_faux2(t) = d(t)]
	New system: [diff(b(t),t) = 0, diff(d(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d(t)*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d(t)*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t), y_faux2(t) = d(t)]

=== Input info ===
State variables:          [b(t), d(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t), y_faux2(t)]
Input variables:          []
Parameters in equations:  [a, k3, k4, k5, k6, k7]
===================

memory used=14484.0MB, alloc=215.8MB, time=132.81
memory used=14599.6MB, alloc=215.8MB, time=133.77
memory used=14701.6MB, alloc=215.8MB, time=134.58
	Adding new y-equations: [y_faux3_0 = x4_2]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, y_faux2_0-d_0, d_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d_0*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d_0+a-x3_0-x4_0)*x2_1-x2_0*(-b_0*d_1-b_1*d_0+x3_1+x4_1))*k5-x1_1*k3+k4*x2_1-k6*x3_1-k6*x4_1+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d_0*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d_2+2*b_1*d_1+b_2*d_0-x3_2-x4_2)*x2_0+(b_0*d_0+a-x3_0-x4_0)*x2_2+2*x2_1*(b_0*d_1+b_1*d_0-x3_1-x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, d_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_0*d_1-b_1*d_0+x4_1)*x2_0-x2_1*(b_0*d_0-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d_3+3*b_1*d_2+3*b_2*d_1+b_3*d_0-x3_3-x4_3)*x2_0+(3*b_0*d_2+6*b_1*d_1+3*b_2*d_0-3*x3_2-3*x4_2)*x2_1+(b_0*d_0+a-x3_0-x4_0)*x2_3+3*x2_2*(b_0*d_1+b_1*d_0-x3_1-x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, d_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*d_2-2*b_1*d_1-b_2*d_0+x4_2)*x2_0+(-2*b_0*d_1-2*b_1*d_0+2*x4_1)*x2_1+x2_2*(-b_0*d_0+x4_0))*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d_4+4*b_1*d_3+6*b_2*d_2+4*b_3*d_1+b_4*d_0-x3_4-x4_4)*x2_0+(4*b_0*d_3+12*b_1*d_2+12*b_2*d_1+4*b_3*d_0-4*x3_3-4*x4_3)*x2_1+(6*b_0*d_2+12*b_1*d_1+6*b_2*d_0-6*x3_2-6*x4_2)*x2_2+(b_0*d_0+a-x3_0-x4_0)*x2_4+4*x2_3*(b_0*d_1+b_1*d_0-x3_1-x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, d_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*d_3-3*b_1*d_2-3*b_2*d_1-b_3*d_0+x4_3)*x2_0+(-3*b_0*d_2-6*b_1*d_1-3*b_2*d_0+3*x4_2)*x2_1+(-d_0*x2_3-3*d_1*x2_2)*b_0-3*x2_2*b_1*d_0+3*x4_1*x2_2+x2_3*x4_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*d_5+5*b_1*d_4+10*b_2*d_3+10*b_3*d_2+5*b_4*d_1+b_5*d_0-x3_5-x4_5)*x2_0+(5*b_0*d_4+20*b_1*d_3+30*b_2*d_2+20*b_3*d_1+5*b_4*d_0-5*x3_4-5*x4_4)*x2_1+(10*b_0*d_3+30*b_1*d_2+30*b_2*d_1+10*b_3*d_0-10*x3_3-10*x4_3)*x2_2+(d_0*x2_5+5*d_1*x2_4+10*d_2*x2_3)*b_0+(5*b_1*x2_4+10*b_2*x2_3)*d_0+(20*b_1*d_1-10*x3_2-10*x4_2)*x2_3+(a-x3_0-x4_0)*x2_5-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, d_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*d_4-4*b_1*d_3-6*b_2*d_2-4*b_3*d_1-b_4*d_0+x4_4)*x2_0+(-4*b_0*d_3-12*b_1*d_2-12*b_2*d_1-4*b_3*d_0+4*x4_3)*x2_1+(-d_0*x2_4-4*d_1*x2_3-6*d_2*x2_2)*b_0+(-4*b_1*x2_3-6*b_2*x2_2)*d_0+(-12*b_1*d_1+6*x4_2)*x2_2+4*x4_1*x2_3+x4_0*x2_4)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*d_6+6*b_1*d_5+15*b_2*d_4+20*b_3*d_3+15*b_4*d_2+6*b_5*d_1+b_6*d_0-x3_6-x4_6)*x2_0+(6*b_0*d_5+30*b_1*d_4+60*b_2*d_3+60*b_3*d_2+30*b_4*d_1+6*b_5*d_0-6*x3_5-6*x4_5)*x2_1+(15*b_0*d_4+60*b_1*d_3+90*b_2*d_2+60*b_3*d_1+15*b_4*d_0-15*x3_4-15*x4_4)*x2_2+(d_0*x2_6+6*d_1*x2_5+15*d_2*x2_4+20*d_3*x2_3)*b_0+(6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3)*d_0+(60*b_1*d_2+60*b_2*d_1-20*x3_3-20*x4_3)*x2_3+30*b_1*d_1*x2_4+(-15*x3_2-15*x4_2)*x2_4+(a-x3_0-x4_0)*x2_6-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, d_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*d_5-5*b_1*d_4-10*b_2*d_3-10*b_3*d_2-5*b_4*d_1-b_5*d_0+x4_5)*x2_0+(-5*b_0*d_4-20*b_1*d_3-30*b_2*d_2-20*b_3*d_1-5*b_4*d_0+5*x4_4)*x2_1+(-d_0*x2_5-5*d_1*x2_4-10*d_2*x2_3-10*d_3*x2_2)*b_0+(-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2)*d_0+(-30*b_1*d_2-30*b_2*d_1+10*x4_3)*x2_2-20*d_1*x2_3*b_1+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*d_7+7*b_1*d_6+21*b_2*d_5+35*b_3*d_4+35*b_4*d_3+21*b_5*d_2+7*b_6*d_1+b_7*d_0-x3_7-x4_7)*x2_0+(7*b_0*d_6+42*b_1*d_5+105*b_2*d_4+140*b_3*d_3+105*b_4*d_2+42*b_5*d_1+7*b_6*d_0-7*x3_6-7*x4_6)*x2_1+(21*b_0*d_5+105*b_1*d_4+210*b_2*d_3+210*b_3*d_2+105*b_4*d_1+21*b_5*d_0-21*x3_5-21*x4_5)*x2_2+(d_0*x2_7+7*d_1*x2_6+21*d_2*x2_5+35*d_3*x2_4+35*d_4*x2_3)*b_0+(7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3)*d_0+(140*b_1*d_3+210*b_2*d_2+140*b_3*d_1-35*x3_4-35*x4_4)*x2_3+(42*d_1*x2_5+105*d_2*x2_4)*b_1+105*b_2*d_1*x2_4+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5+(a-x3_0-x4_0)*x2_7-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, d_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*d_6-6*b_1*d_5-15*b_2*d_4-20*b_3*d_3-15*b_4*d_2-6*b_5*d_1-b_6*d_0+x4_6)*x2_0+(-6*b_0*d_5-30*b_1*d_4-60*b_2*d_3-60*b_3*d_2-30*b_4*d_1-6*b_5*d_0+6*x4_5)*x2_1+(-d_0*x2_6-6*d_1*x2_5-15*d_2*x2_4-20*d_3*x2_3-15*d_4*x2_2)*b_0+(-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2)*d_0+(-60*b_1*d_3-90*b_2*d_2-60*b_3*d_1+15*x4_4)*x2_2+(-30*d_1*x2_4-60*d_2*x2_3)*b_1-60*b_2*d_1*x2_3+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, -d_1+y_faux2_1, -d_2+y_faux2_2, -d_3+y_faux2_3, -d_4+y_faux2_4, -d_5+y_faux2_5, -d_6+y_faux2_6, -d_7+y_faux2_7, y_faux3_0-x4_2]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = d_0, y_faux2_1 = d_1, y_faux2_2 = d_2, y_faux2_3 = d_3, y_faux2_4 = d_4, y_faux2_5 = d_5, y_faux2_6 = d_6, y_faux2_7 = d_7, y_faux2_8 = d_8, y_faux2_9 = d_9, y_faux2_10 = d_10, y_faux2_11 = d_11, y_faux2_12 = d_12, y_faux2_13 = d_13, y_faux2_14 = d_14, y_faux3_0 = x4_2]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability:  723190167600000000000000
Random sample for the outputs and inputs is generated from  [a = 197050676628388159633542, k3 = 544987532860666716779719, k4 = 533112561180532174013665, k5 = 124940325557638768531424, k6 = 212023922187515994744045, k7 = 420247344888585531506289, b_0 = 123160724823458483338411, d_0 = 684974610149575414240481, x1_0 = 573941108933217829616613, x2_0 = 170017773917864504949320, x3_0 = 645121908900189123547970, x4_0 = 468880149186138667342800, x5_0 = 181436845869305885583274]
The polynomial system widehat{E^t} contains  83 equations in  68  variables
            "new_logs/Tumor/transcendence_164_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, d, x4_3]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b, d}
Algebraically independent parameters among derivatives: {x4_3}
	Adding ODEs: [diff(b(t),t) = 0, diff(d(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t), y_faux2(t) = d(t)]
	New system: [diff(b(t),t) = 0, diff(d(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d(t)*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d(t)*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t), y_faux2(t) = d(t)]

=== Input info ===
State variables:          [b(t), d(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t), y_faux2(t)]
Input variables:          []
Parameters in equations:  [a, k3, k4, k5, k6, k7]
===================

memory used=14817.0MB, alloc=215.8MB, time=136.00
memory used=14935.6MB, alloc=215.8MB, time=137.02
memory used=15037.5MB, alloc=215.8MB, time=137.82
	Adding new y-equations: [y_faux3_0 = x4_3]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, y_faux2_0-d_0, d_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d_0*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d_0+a-x3_0-x4_0)*x2_1-x2_0*(-b_0*d_1-b_1*d_0+x3_1+x4_1))*k5-x1_1*k3+k4*x2_1-k6*x3_1-k6*x4_1+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d_0*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d_2+2*b_1*d_1+b_2*d_0-x3_2-x4_2)*x2_0+(b_0*d_0+a-x3_0-x4_0)*x2_2+2*x2_1*(b_0*d_1+b_1*d_0-x3_1-x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, d_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_0*d_1-b_1*d_0+x4_1)*x2_0-x2_1*(b_0*d_0-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d_3+3*b_1*d_2+3*b_2*d_1+b_3*d_0-x3_3-x4_3)*x2_0+(3*b_0*d_2+6*b_1*d_1+3*b_2*d_0-3*x3_2-3*x4_2)*x2_1+(b_0*d_0+a-x3_0-x4_0)*x2_3+3*x2_2*(b_0*d_1+b_1*d_0-x3_1-x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, d_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*d_2-2*b_1*d_1-b_2*d_0+x4_2)*x2_0+(-2*b_0*d_1-2*b_1*d_0+2*x4_1)*x2_1+x2_2*(-b_0*d_0+x4_0))*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d_4+4*b_1*d_3+6*b_2*d_2+4*b_3*d_1+b_4*d_0-x3_4-x4_4)*x2_0+(4*b_0*d_3+12*b_1*d_2+12*b_2*d_1+4*b_3*d_0-4*x3_3-4*x4_3)*x2_1+(6*b_0*d_2+12*b_1*d_1+6*b_2*d_0-6*x3_2-6*x4_2)*x2_2+(b_0*d_0+a-x3_0-x4_0)*x2_4+4*x2_3*(b_0*d_1+b_1*d_0-x3_1-x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, d_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*d_3-3*b_1*d_2-3*b_2*d_1-b_3*d_0+x4_3)*x2_0+(-3*b_0*d_2-6*b_1*d_1-3*b_2*d_0+3*x4_2)*x2_1+(-d_0*x2_3-3*d_1*x2_2)*b_0-3*x2_2*b_1*d_0+3*x4_1*x2_2+x2_3*x4_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*d_5+5*b_1*d_4+10*b_2*d_3+10*b_3*d_2+5*b_4*d_1+b_5*d_0-x3_5-x4_5)*x2_0+(5*b_0*d_4+20*b_1*d_3+30*b_2*d_2+20*b_3*d_1+5*b_4*d_0-5*x3_4-5*x4_4)*x2_1+(10*b_0*d_3+30*b_1*d_2+30*b_2*d_1+10*b_3*d_0-10*x3_3-10*x4_3)*x2_2+(d_0*x2_5+5*d_1*x2_4+10*d_2*x2_3)*b_0+(5*b_1*x2_4+10*b_2*x2_3)*d_0+(20*b_1*d_1-10*x3_2-10*x4_2)*x2_3+(a-x3_0-x4_0)*x2_5-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, d_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*d_4-4*b_1*d_3-6*b_2*d_2-4*b_3*d_1-b_4*d_0+x4_4)*x2_0+(-4*b_0*d_3-12*b_1*d_2-12*b_2*d_1-4*b_3*d_0+4*x4_3)*x2_1+(-d_0*x2_4-4*d_1*x2_3-6*d_2*x2_2)*b_0+(-4*b_1*x2_3-6*b_2*x2_2)*d_0+(-12*b_1*d_1+6*x4_2)*x2_2+4*x4_1*x2_3+x4_0*x2_4)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*d_6+6*b_1*d_5+15*b_2*d_4+20*b_3*d_3+15*b_4*d_2+6*b_5*d_1+b_6*d_0-x3_6-x4_6)*x2_0+(6*b_0*d_5+30*b_1*d_4+60*b_2*d_3+60*b_3*d_2+30*b_4*d_1+6*b_5*d_0-6*x3_5-6*x4_5)*x2_1+(15*b_0*d_4+60*b_1*d_3+90*b_2*d_2+60*b_3*d_1+15*b_4*d_0-15*x3_4-15*x4_4)*x2_2+(d_0*x2_6+6*d_1*x2_5+15*d_2*x2_4+20*d_3*x2_3)*b_0+(6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3)*d_0+(60*b_1*d_2+60*b_2*d_1-20*x3_3-20*x4_3)*x2_3+30*b_1*d_1*x2_4+(-15*x3_2-15*x4_2)*x2_4+(a-x3_0-x4_0)*x2_6-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, d_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*d_5-5*b_1*d_4-10*b_2*d_3-10*b_3*d_2-5*b_4*d_1-b_5*d_0+x4_5)*x2_0+(-5*b_0*d_4-20*b_1*d_3-30*b_2*d_2-20*b_3*d_1-5*b_4*d_0+5*x4_4)*x2_1+(-d_0*x2_5-5*d_1*x2_4-10*d_2*x2_3-10*d_3*x2_2)*b_0+(-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2)*d_0+(-30*b_1*d_2-30*b_2*d_1+10*x4_3)*x2_2-20*d_1*x2_3*b_1+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*d_7+7*b_1*d_6+21*b_2*d_5+35*b_3*d_4+35*b_4*d_3+21*b_5*d_2+7*b_6*d_1+b_7*d_0-x3_7-x4_7)*x2_0+(7*b_0*d_6+42*b_1*d_5+105*b_2*d_4+140*b_3*d_3+105*b_4*d_2+42*b_5*d_1+7*b_6*d_0-7*x3_6-7*x4_6)*x2_1+(21*b_0*d_5+105*b_1*d_4+210*b_2*d_3+210*b_3*d_2+105*b_4*d_1+21*b_5*d_0-21*x3_5-21*x4_5)*x2_2+(d_0*x2_7+7*d_1*x2_6+21*d_2*x2_5+35*d_3*x2_4+35*d_4*x2_3)*b_0+(7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3)*d_0+(140*b_1*d_3+210*b_2*d_2+140*b_3*d_1-35*x3_4-35*x4_4)*x2_3+(42*d_1*x2_5+105*d_2*x2_4)*b_1+105*b_2*d_1*x2_4+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5+(a-x3_0-x4_0)*x2_7-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, d_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*d_6-6*b_1*d_5-15*b_2*d_4-20*b_3*d_3-15*b_4*d_2-6*b_5*d_1-b_6*d_0+x4_6)*x2_0+(-6*b_0*d_5-30*b_1*d_4-60*b_2*d_3-60*b_3*d_2-30*b_4*d_1-6*b_5*d_0+6*x4_5)*x2_1+(-d_0*x2_6-6*d_1*x2_5-15*d_2*x2_4-20*d_3*x2_3-15*d_4*x2_2)*b_0+(-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2)*d_0+(-60*b_1*d_3-90*b_2*d_2-60*b_3*d_1+15*x4_4)*x2_2+(-30*d_1*x2_4-60*d_2*x2_3)*b_1-60*b_2*d_1*x2_3+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, -d_1+y_faux2_1, -d_2+y_faux2_2, -d_3+y_faux2_3, -d_4+y_faux2_4, -d_5+y_faux2_5, -d_6+y_faux2_6, -d_7+y_faux2_7, y_faux3_0-x4_3]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = d_0, y_faux2_1 = d_1, y_faux2_2 = d_2, y_faux2_3 = d_3, y_faux2_4 = d_4, y_faux2_5 = d_5, y_faux2_6 = d_6, y_faux2_7 = d_7, y_faux2_8 = d_8, y_faux2_9 = d_9, y_faux2_10 = d_10, y_faux2_11 = d_11, y_faux2_12 = d_12, y_faux2_13 = d_13, y_faux2_14 = d_14, y_faux3_0 = x4_3]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability:  723190167600000000000000
Random sample for the outputs and inputs is generated from  [a = 105316508339346028698608, k3 = 597613877345347599619593, k4 = 45777489566622616016241, k5 = 593900271385312986772576, k6 = 655502634719401383690484, k7 = 691384972490649274471159, b_0 = 469312045813243219857490, d_0 = 606357650932234059514268, x1_0 = 443772293749551145676399, x2_0 = 361479007030096560065057, x3_0 = 176868020131518349411047, x4_0 = 349988526686037529913088, x5_0 = 225153344394480557664405]
The polynomial system widehat{E^t} contains  83 equations in  68  variables
            "new_logs/Tumor/transcendence_165_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, d, x4_4]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b, d}
Algebraically independent parameters among derivatives: {x4_4}
	Adding ODEs: [diff(b(t),t) = 0, diff(d(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t), y_faux2(t) = d(t)]
	New system: [diff(b(t),t) = 0, diff(d(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d(t)*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d(t)*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t), y_faux2(t) = d(t)]

=== Input info ===
State variables:          [b(t), d(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t), y_faux2(t)]
Input variables:          []
Parameters in equations:  [a, k3, k4, k5, k6, k7]
===================

memory used=15158.5MB, alloc=215.8MB, time=139.28
memory used=15272.2MB, alloc=215.8MB, time=140.24
memory used=15374.0MB, alloc=215.8MB, time=141.10
	Adding new y-equations: [y_faux3_0 = x4_4]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, y_faux2_0-d_0, d_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d_0*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d_0+a-x3_0-x4_0)*x2_1-x2_0*(-b_0*d_1-b_1*d_0+x3_1+x4_1))*k5-x1_1*k3+k4*x2_1-k6*x3_1-k6*x4_1+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d_0*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d_2+2*b_1*d_1+b_2*d_0-x3_2-x4_2)*x2_0+(b_0*d_0+a-x3_0-x4_0)*x2_2+2*x2_1*(b_0*d_1+b_1*d_0-x3_1-x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, d_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_0*d_1-b_1*d_0+x4_1)*x2_0-x2_1*(b_0*d_0-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d_3+3*b_1*d_2+3*b_2*d_1+b_3*d_0-x3_3-x4_3)*x2_0+(3*b_0*d_2+6*b_1*d_1+3*b_2*d_0-3*x3_2-3*x4_2)*x2_1+(b_0*d_0+a-x3_0-x4_0)*x2_3+3*x2_2*(b_0*d_1+b_1*d_0-x3_1-x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, d_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*d_2-2*b_1*d_1-b_2*d_0+x4_2)*x2_0+(-2*b_0*d_1-2*b_1*d_0+2*x4_1)*x2_1+x2_2*(-b_0*d_0+x4_0))*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d_4+4*b_1*d_3+6*b_2*d_2+4*b_3*d_1+b_4*d_0-x3_4-x4_4)*x2_0+(4*b_0*d_3+12*b_1*d_2+12*b_2*d_1+4*b_3*d_0-4*x3_3-4*x4_3)*x2_1+(6*b_0*d_2+12*b_1*d_1+6*b_2*d_0-6*x3_2-6*x4_2)*x2_2+(b_0*d_0+a-x3_0-x4_0)*x2_4+4*x2_3*(b_0*d_1+b_1*d_0-x3_1-x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, d_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*d_3-3*b_1*d_2-3*b_2*d_1-b_3*d_0+x4_3)*x2_0+(-3*b_0*d_2-6*b_1*d_1-3*b_2*d_0+3*x4_2)*x2_1+(-d_0*x2_3-3*d_1*x2_2)*b_0-3*x2_2*b_1*d_0+3*x4_1*x2_2+x2_3*x4_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*d_5+5*b_1*d_4+10*b_2*d_3+10*b_3*d_2+5*b_4*d_1+b_5*d_0-x3_5-x4_5)*x2_0+(5*b_0*d_4+20*b_1*d_3+30*b_2*d_2+20*b_3*d_1+5*b_4*d_0-5*x3_4-5*x4_4)*x2_1+(10*b_0*d_3+30*b_1*d_2+30*b_2*d_1+10*b_3*d_0-10*x3_3-10*x4_3)*x2_2+(d_0*x2_5+5*d_1*x2_4+10*d_2*x2_3)*b_0+(5*b_1*x2_4+10*b_2*x2_3)*d_0+(20*b_1*d_1-10*x3_2-10*x4_2)*x2_3+(a-x3_0-x4_0)*x2_5-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, d_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*d_4-4*b_1*d_3-6*b_2*d_2-4*b_3*d_1-b_4*d_0+x4_4)*x2_0+(-4*b_0*d_3-12*b_1*d_2-12*b_2*d_1-4*b_3*d_0+4*x4_3)*x2_1+(-d_0*x2_4-4*d_1*x2_3-6*d_2*x2_2)*b_0+(-4*b_1*x2_3-6*b_2*x2_2)*d_0+(-12*b_1*d_1+6*x4_2)*x2_2+4*x4_1*x2_3+x4_0*x2_4)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*d_6+6*b_1*d_5+15*b_2*d_4+20*b_3*d_3+15*b_4*d_2+6*b_5*d_1+b_6*d_0-x3_6-x4_6)*x2_0+(6*b_0*d_5+30*b_1*d_4+60*b_2*d_3+60*b_3*d_2+30*b_4*d_1+6*b_5*d_0-6*x3_5-6*x4_5)*x2_1+(15*b_0*d_4+60*b_1*d_3+90*b_2*d_2+60*b_3*d_1+15*b_4*d_0-15*x3_4-15*x4_4)*x2_2+(d_0*x2_6+6*d_1*x2_5+15*d_2*x2_4+20*d_3*x2_3)*b_0+(6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3)*d_0+(60*b_1*d_2+60*b_2*d_1-20*x3_3-20*x4_3)*x2_3+30*b_1*d_1*x2_4+(-15*x3_2-15*x4_2)*x2_4+(a-x3_0-x4_0)*x2_6-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, d_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*d_5-5*b_1*d_4-10*b_2*d_3-10*b_3*d_2-5*b_4*d_1-b_5*d_0+x4_5)*x2_0+(-5*b_0*d_4-20*b_1*d_3-30*b_2*d_2-20*b_3*d_1-5*b_4*d_0+5*x4_4)*x2_1+(-d_0*x2_5-5*d_1*x2_4-10*d_2*x2_3-10*d_3*x2_2)*b_0+(-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2)*d_0+(-30*b_1*d_2-30*b_2*d_1+10*x4_3)*x2_2-20*d_1*x2_3*b_1+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*d_7+7*b_1*d_6+21*b_2*d_5+35*b_3*d_4+35*b_4*d_3+21*b_5*d_2+7*b_6*d_1+b_7*d_0-x3_7-x4_7)*x2_0+(7*b_0*d_6+42*b_1*d_5+105*b_2*d_4+140*b_3*d_3+105*b_4*d_2+42*b_5*d_1+7*b_6*d_0-7*x3_6-7*x4_6)*x2_1+(21*b_0*d_5+105*b_1*d_4+210*b_2*d_3+210*b_3*d_2+105*b_4*d_1+21*b_5*d_0-21*x3_5-21*x4_5)*x2_2+(d_0*x2_7+7*d_1*x2_6+21*d_2*x2_5+35*d_3*x2_4+35*d_4*x2_3)*b_0+(7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3)*d_0+(140*b_1*d_3+210*b_2*d_2+140*b_3*d_1-35*x3_4-35*x4_4)*x2_3+(42*d_1*x2_5+105*d_2*x2_4)*b_1+105*b_2*d_1*x2_4+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5+(a-x3_0-x4_0)*x2_7-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, d_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*d_6-6*b_1*d_5-15*b_2*d_4-20*b_3*d_3-15*b_4*d_2-6*b_5*d_1-b_6*d_0+x4_6)*x2_0+(-6*b_0*d_5-30*b_1*d_4-60*b_2*d_3-60*b_3*d_2-30*b_4*d_1-6*b_5*d_0+6*x4_5)*x2_1+(-d_0*x2_6-6*d_1*x2_5-15*d_2*x2_4-20*d_3*x2_3-15*d_4*x2_2)*b_0+(-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2)*d_0+(-60*b_1*d_3-90*b_2*d_2-60*b_3*d_1+15*x4_4)*x2_2+(-30*d_1*x2_4-60*d_2*x2_3)*b_1-60*b_2*d_1*x2_3+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, -d_1+y_faux2_1, -d_2+y_faux2_2, -d_3+y_faux2_3, -d_4+y_faux2_4, -d_5+y_faux2_5, -d_6+y_faux2_6, -d_7+y_faux2_7, y_faux3_0-x4_4]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = d_0, y_faux2_1 = d_1, y_faux2_2 = d_2, y_faux2_3 = d_3, y_faux2_4 = d_4, y_faux2_5 = d_5, y_faux2_6 = d_6, y_faux2_7 = d_7, y_faux2_8 = d_8, y_faux2_9 = d_9, y_faux2_10 = d_10, y_faux2_11 = d_11, y_faux2_12 = d_12, y_faux2_13 = d_13, y_faux2_14 = d_14, y_faux3_0 = x4_4]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability:  723190167600000000000000
Random sample for the outputs and inputs is generated from  [a = 470602073720013848251520, k3 = 84055909933255583725027, k4 = 687339905591904045286768, k5 = 144731840789882332316931, k6 = 106652155441998617541496, k7 = 219364685584909325885567, b_0 = 610958507255727372823492, d_0 = 719815747246156288016124, x1_0 = 22081453741683596339811, x2_0 = 425363852208819093226445, x3_0 = 64254847482604038585780, x4_0 = 342900649308408016284375, x5_0 = 666056335214895119377747]
The polynomial system widehat{E^t} contains  83 equations in  68  variables
            "new_logs/Tumor/transcendence_166_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, d, x4_5]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b, d}
Algebraically independent parameters among derivatives: {x4_5}
	Adding ODEs: [diff(b(t),t) = 0, diff(d(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t), y_faux2(t) = d(t)]
	New system: [diff(b(t),t) = 0, diff(d(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d(t)*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d(t)*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t), y_faux2(t) = d(t)]

=== Input info ===
State variables:          [b(t), d(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t), y_faux2(t)]
Input variables:          []
Parameters in equations:  [a, k3, k4, k5, k6, k7]
===================

memory used=15497.6MB, alloc=215.8MB, time=142.49
memory used=15608.9MB, alloc=215.8MB, time=143.37
memory used=15710.5MB, alloc=215.8MB, time=144.17
	Adding new y-equations: [y_faux3_0 = x4_5]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, y_faux2_0-d_0, d_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d_0*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d_0+a-x3_0-x4_0)*x2_1-x2_0*(-b_0*d_1-b_1*d_0+x3_1+x4_1))*k5-x1_1*k3+k4*x2_1-k6*x3_1-k6*x4_1+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d_0*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d_2+2*b_1*d_1+b_2*d_0-x3_2-x4_2)*x2_0+(b_0*d_0+a-x3_0-x4_0)*x2_2+2*x2_1*(b_0*d_1+b_1*d_0-x3_1-x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, d_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_0*d_1-b_1*d_0+x4_1)*x2_0-x2_1*(b_0*d_0-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d_3+3*b_1*d_2+3*b_2*d_1+b_3*d_0-x3_3-x4_3)*x2_0+(3*b_0*d_2+6*b_1*d_1+3*b_2*d_0-3*x3_2-3*x4_2)*x2_1+(b_0*d_0+a-x3_0-x4_0)*x2_3+3*x2_2*(b_0*d_1+b_1*d_0-x3_1-x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, d_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*d_2-2*b_1*d_1-b_2*d_0+x4_2)*x2_0+(-2*b_0*d_1-2*b_1*d_0+2*x4_1)*x2_1+x2_2*(-b_0*d_0+x4_0))*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d_4+4*b_1*d_3+6*b_2*d_2+4*b_3*d_1+b_4*d_0-x3_4-x4_4)*x2_0+(4*b_0*d_3+12*b_1*d_2+12*b_2*d_1+4*b_3*d_0-4*x3_3-4*x4_3)*x2_1+(6*b_0*d_2+12*b_1*d_1+6*b_2*d_0-6*x3_2-6*x4_2)*x2_2+(b_0*d_0+a-x3_0-x4_0)*x2_4+4*x2_3*(b_0*d_1+b_1*d_0-x3_1-x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, d_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*d_3-3*b_1*d_2-3*b_2*d_1-b_3*d_0+x4_3)*x2_0+(-3*b_0*d_2-6*b_1*d_1-3*b_2*d_0+3*x4_2)*x2_1+(-d_0*x2_3-3*d_1*x2_2)*b_0-3*x2_2*b_1*d_0+3*x4_1*x2_2+x2_3*x4_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*d_5+5*b_1*d_4+10*b_2*d_3+10*b_3*d_2+5*b_4*d_1+b_5*d_0-x3_5-x4_5)*x2_0+(5*b_0*d_4+20*b_1*d_3+30*b_2*d_2+20*b_3*d_1+5*b_4*d_0-5*x3_4-5*x4_4)*x2_1+(10*b_0*d_3+30*b_1*d_2+30*b_2*d_1+10*b_3*d_0-10*x3_3-10*x4_3)*x2_2+(d_0*x2_5+5*d_1*x2_4+10*d_2*x2_3)*b_0+(5*b_1*x2_4+10*b_2*x2_3)*d_0+(20*b_1*d_1-10*x3_2-10*x4_2)*x2_3+(a-x3_0-x4_0)*x2_5-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, d_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*d_4-4*b_1*d_3-6*b_2*d_2-4*b_3*d_1-b_4*d_0+x4_4)*x2_0+(-4*b_0*d_3-12*b_1*d_2-12*b_2*d_1-4*b_3*d_0+4*x4_3)*x2_1+(-d_0*x2_4-4*d_1*x2_3-6*d_2*x2_2)*b_0+(-4*b_1*x2_3-6*b_2*x2_2)*d_0+(-12*b_1*d_1+6*x4_2)*x2_2+4*x4_1*x2_3+x4_0*x2_4)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*d_6+6*b_1*d_5+15*b_2*d_4+20*b_3*d_3+15*b_4*d_2+6*b_5*d_1+b_6*d_0-x3_6-x4_6)*x2_0+(6*b_0*d_5+30*b_1*d_4+60*b_2*d_3+60*b_3*d_2+30*b_4*d_1+6*b_5*d_0-6*x3_5-6*x4_5)*x2_1+(15*b_0*d_4+60*b_1*d_3+90*b_2*d_2+60*b_3*d_1+15*b_4*d_0-15*x3_4-15*x4_4)*x2_2+(d_0*x2_6+6*d_1*x2_5+15*d_2*x2_4+20*d_3*x2_3)*b_0+(6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3)*d_0+(60*b_1*d_2+60*b_2*d_1-20*x3_3-20*x4_3)*x2_3+30*b_1*d_1*x2_4+(-15*x3_2-15*x4_2)*x2_4+(a-x3_0-x4_0)*x2_6-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, d_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*d_5-5*b_1*d_4-10*b_2*d_3-10*b_3*d_2-5*b_4*d_1-b_5*d_0+x4_5)*x2_0+(-5*b_0*d_4-20*b_1*d_3-30*b_2*d_2-20*b_3*d_1-5*b_4*d_0+5*x4_4)*x2_1+(-d_0*x2_5-5*d_1*x2_4-10*d_2*x2_3-10*d_3*x2_2)*b_0+(-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2)*d_0+(-30*b_1*d_2-30*b_2*d_1+10*x4_3)*x2_2-20*d_1*x2_3*b_1+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*d_7+7*b_1*d_6+21*b_2*d_5+35*b_3*d_4+35*b_4*d_3+21*b_5*d_2+7*b_6*d_1+b_7*d_0-x3_7-x4_7)*x2_0+(7*b_0*d_6+42*b_1*d_5+105*b_2*d_4+140*b_3*d_3+105*b_4*d_2+42*b_5*d_1+7*b_6*d_0-7*x3_6-7*x4_6)*x2_1+(21*b_0*d_5+105*b_1*d_4+210*b_2*d_3+210*b_3*d_2+105*b_4*d_1+21*b_5*d_0-21*x3_5-21*x4_5)*x2_2+(d_0*x2_7+7*d_1*x2_6+21*d_2*x2_5+35*d_3*x2_4+35*d_4*x2_3)*b_0+(7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3)*d_0+(140*b_1*d_3+210*b_2*d_2+140*b_3*d_1-35*x3_4-35*x4_4)*x2_3+(42*d_1*x2_5+105*d_2*x2_4)*b_1+105*b_2*d_1*x2_4+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5+(a-x3_0-x4_0)*x2_7-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, d_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*d_6-6*b_1*d_5-15*b_2*d_4-20*b_3*d_3-15*b_4*d_2-6*b_5*d_1-b_6*d_0+x4_6)*x2_0+(-6*b_0*d_5-30*b_1*d_4-60*b_2*d_3-60*b_3*d_2-30*b_4*d_1-6*b_5*d_0+6*x4_5)*x2_1+(-d_0*x2_6-6*d_1*x2_5-15*d_2*x2_4-20*d_3*x2_3-15*d_4*x2_2)*b_0+(-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2)*d_0+(-60*b_1*d_3-90*b_2*d_2-60*b_3*d_1+15*x4_4)*x2_2+(-30*d_1*x2_4-60*d_2*x2_3)*b_1-60*b_2*d_1*x2_3+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, -d_1+y_faux2_1, -d_2+y_faux2_2, -d_3+y_faux2_3, -d_4+y_faux2_4, -d_5+y_faux2_5, -d_6+y_faux2_6, -d_7+y_faux2_7, y_faux3_0-x4_5]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = d_0, y_faux2_1 = d_1, y_faux2_2 = d_2, y_faux2_3 = d_3, y_faux2_4 = d_4, y_faux2_5 = d_5, y_faux2_6 = d_6, y_faux2_7 = d_7, y_faux2_8 = d_8, y_faux2_9 = d_9, y_faux2_10 = d_10, y_faux2_11 = d_11, y_faux2_12 = d_12, y_faux2_13 = d_13, y_faux2_14 = d_14, y_faux3_0 = x4_5]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability:  723190167600000000000000
Random sample for the outputs and inputs is generated from  [a = 375614686509474705878520, k3 = 140544386191265933788278, k4 = 442137487324828302563478, k5 = 322715287865297101891194, k6 = 542112178697916329615223, k7 = 87062538140336928582767, b_0 = 687377171180331292368227, d_0 = 289955616516473369680257, x1_0 = 199940119581411200617307, x2_0 = 626014057690695892531975, x3_0 = 331662693668362780078682, x4_0 = 378548070744247498395559, x5_0 = 95099237455015019101627]
The polynomial system widehat{E^t} contains  83 equations in  68  variables
            "new_logs/Tumor/transcendence_167_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, d, x4_6]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b, d}
Algebraically independent parameters among derivatives: {x4_6}
	Adding ODEs: [diff(b(t),t) = 0, diff(d(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t), y_faux2(t) = d(t)]
	New system: [diff(b(t),t) = 0, diff(d(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d(t)*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d(t)*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t), y_faux2(t) = d(t)]

=== Input info ===
State variables:          [b(t), d(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t), y_faux2(t)]
Input variables:          []
Parameters in equations:  [a, k3, k4, k5, k6, k7]
===================

memory used=15832.0MB, alloc=215.8MB, time=145.64
memory used=15945.0MB, alloc=215.8MB, time=146.55
memory used=16047.0MB, alloc=215.8MB, time=147.35
	Adding new y-equations: [y_faux3_0 = x4_6]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, y_faux2_0-d_0, d_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d_0*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d_0+a-x3_0-x4_0)*x2_1-x2_0*(-b_0*d_1-b_1*d_0+x3_1+x4_1))*k5-x1_1*k3+k4*x2_1-k6*x3_1-k6*x4_1+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d_0*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d_2+2*b_1*d_1+b_2*d_0-x3_2-x4_2)*x2_0+(b_0*d_0+a-x3_0-x4_0)*x2_2+2*x2_1*(b_0*d_1+b_1*d_0-x3_1-x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, d_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_0*d_1-b_1*d_0+x4_1)*x2_0-x2_1*(b_0*d_0-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d_3+3*b_1*d_2+3*b_2*d_1+b_3*d_0-x3_3-x4_3)*x2_0+(3*b_0*d_2+6*b_1*d_1+3*b_2*d_0-3*x3_2-3*x4_2)*x2_1+(b_0*d_0+a-x3_0-x4_0)*x2_3+3*x2_2*(b_0*d_1+b_1*d_0-x3_1-x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, d_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*d_2-2*b_1*d_1-b_2*d_0+x4_2)*x2_0+(-2*b_0*d_1-2*b_1*d_0+2*x4_1)*x2_1+x2_2*(-b_0*d_0+x4_0))*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d_4+4*b_1*d_3+6*b_2*d_2+4*b_3*d_1+b_4*d_0-x3_4-x4_4)*x2_0+(4*b_0*d_3+12*b_1*d_2+12*b_2*d_1+4*b_3*d_0-4*x3_3-4*x4_3)*x2_1+(6*b_0*d_2+12*b_1*d_1+6*b_2*d_0-6*x3_2-6*x4_2)*x2_2+(b_0*d_0+a-x3_0-x4_0)*x2_4+4*x2_3*(b_0*d_1+b_1*d_0-x3_1-x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, d_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*d_3-3*b_1*d_2-3*b_2*d_1-b_3*d_0+x4_3)*x2_0+(-3*b_0*d_2-6*b_1*d_1-3*b_2*d_0+3*x4_2)*x2_1+(-d_0*x2_3-3*d_1*x2_2)*b_0-3*x2_2*b_1*d_0+3*x4_1*x2_2+x2_3*x4_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*d_5+5*b_1*d_4+10*b_2*d_3+10*b_3*d_2+5*b_4*d_1+b_5*d_0-x3_5-x4_5)*x2_0+(5*b_0*d_4+20*b_1*d_3+30*b_2*d_2+20*b_3*d_1+5*b_4*d_0-5*x3_4-5*x4_4)*x2_1+(10*b_0*d_3+30*b_1*d_2+30*b_2*d_1+10*b_3*d_0-10*x3_3-10*x4_3)*x2_2+(d_0*x2_5+5*d_1*x2_4+10*d_2*x2_3)*b_0+(5*b_1*x2_4+10*b_2*x2_3)*d_0+(20*b_1*d_1-10*x3_2-10*x4_2)*x2_3+(a-x3_0-x4_0)*x2_5-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, d_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*d_4-4*b_1*d_3-6*b_2*d_2-4*b_3*d_1-b_4*d_0+x4_4)*x2_0+(-4*b_0*d_3-12*b_1*d_2-12*b_2*d_1-4*b_3*d_0+4*x4_3)*x2_1+(-d_0*x2_4-4*d_1*x2_3-6*d_2*x2_2)*b_0+(-4*b_1*x2_3-6*b_2*x2_2)*d_0+(-12*b_1*d_1+6*x4_2)*x2_2+4*x4_1*x2_3+x4_0*x2_4)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*d_6+6*b_1*d_5+15*b_2*d_4+20*b_3*d_3+15*b_4*d_2+6*b_5*d_1+b_6*d_0-x3_6-x4_6)*x2_0+(6*b_0*d_5+30*b_1*d_4+60*b_2*d_3+60*b_3*d_2+30*b_4*d_1+6*b_5*d_0-6*x3_5-6*x4_5)*x2_1+(15*b_0*d_4+60*b_1*d_3+90*b_2*d_2+60*b_3*d_1+15*b_4*d_0-15*x3_4-15*x4_4)*x2_2+(d_0*x2_6+6*d_1*x2_5+15*d_2*x2_4+20*d_3*x2_3)*b_0+(6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3)*d_0+(60*b_1*d_2+60*b_2*d_1-20*x3_3-20*x4_3)*x2_3+30*b_1*d_1*x2_4+(-15*x3_2-15*x4_2)*x2_4+(a-x3_0-x4_0)*x2_6-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, d_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*d_5-5*b_1*d_4-10*b_2*d_3-10*b_3*d_2-5*b_4*d_1-b_5*d_0+x4_5)*x2_0+(-5*b_0*d_4-20*b_1*d_3-30*b_2*d_2-20*b_3*d_1-5*b_4*d_0+5*x4_4)*x2_1+(-d_0*x2_5-5*d_1*x2_4-10*d_2*x2_3-10*d_3*x2_2)*b_0+(-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2)*d_0+(-30*b_1*d_2-30*b_2*d_1+10*x4_3)*x2_2-20*d_1*x2_3*b_1+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*d_7+7*b_1*d_6+21*b_2*d_5+35*b_3*d_4+35*b_4*d_3+21*b_5*d_2+7*b_6*d_1+b_7*d_0-x3_7-x4_7)*x2_0+(7*b_0*d_6+42*b_1*d_5+105*b_2*d_4+140*b_3*d_3+105*b_4*d_2+42*b_5*d_1+7*b_6*d_0-7*x3_6-7*x4_6)*x2_1+(21*b_0*d_5+105*b_1*d_4+210*b_2*d_3+210*b_3*d_2+105*b_4*d_1+21*b_5*d_0-21*x3_5-21*x4_5)*x2_2+(d_0*x2_7+7*d_1*x2_6+21*d_2*x2_5+35*d_3*x2_4+35*d_4*x2_3)*b_0+(7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3)*d_0+(140*b_1*d_3+210*b_2*d_2+140*b_3*d_1-35*x3_4-35*x4_4)*x2_3+(42*d_1*x2_5+105*d_2*x2_4)*b_1+105*b_2*d_1*x2_4+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5+(a-x3_0-x4_0)*x2_7-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, d_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*d_6-6*b_1*d_5-15*b_2*d_4-20*b_3*d_3-15*b_4*d_2-6*b_5*d_1-b_6*d_0+x4_6)*x2_0+(-6*b_0*d_5-30*b_1*d_4-60*b_2*d_3-60*b_3*d_2-30*b_4*d_1-6*b_5*d_0+6*x4_5)*x2_1+(-d_0*x2_6-6*d_1*x2_5-15*d_2*x2_4-20*d_3*x2_3-15*d_4*x2_2)*b_0+(-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2)*d_0+(-60*b_1*d_3-90*b_2*d_2-60*b_3*d_1+15*x4_4)*x2_2+(-30*d_1*x2_4-60*d_2*x2_3)*b_1-60*b_2*d_1*x2_3+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, -d_1+y_faux2_1, -d_2+y_faux2_2, -d_3+y_faux2_3, -d_4+y_faux2_4, -d_5+y_faux2_5, -d_6+y_faux2_6, -d_7+y_faux2_7, y_faux3_0-x4_6]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = d_0, y_faux2_1 = d_1, y_faux2_2 = d_2, y_faux2_3 = d_3, y_faux2_4 = d_4, y_faux2_5 = d_5, y_faux2_6 = d_6, y_faux2_7 = d_7, y_faux2_8 = d_8, y_faux2_9 = d_9, y_faux2_10 = d_10, y_faux2_11 = d_11, y_faux2_12 = d_12, y_faux2_13 = d_13, y_faux2_14 = d_14, y_faux3_0 = x4_6]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability:  723190167600000000000000
Random sample for the outputs and inputs is generated from  [a = 530293925549032953624370, k3 = 493768403274297336889742, k4 = 359695048499865922787207, k5 = 141913098133940118515914, k6 = 148029669557701836968122, k7 = 315634904545961669418810, b_0 = 260752225418303052113876, d_0 = 721512525431877034351406, x1_0 = 546884843444449957407651, x2_0 = 217851066773953800011353, x3_0 = 117136279005767644430734, x4_0 = 376829500622393944483033, x5_0 = 226988314023402779223997]
The polynomial system widehat{E^t} contains  83 equations in  68  variables
            "new_logs/Tumor/transcendence_168_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, d, x4_7]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b, d}
Algebraically independent parameters among derivatives: {x4_7}
	Adding ODEs: [diff(b(t),t) = 0, diff(d(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t), y_faux2(t) = d(t)]
	New system: [diff(b(t),t) = 0, diff(d(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d(t)*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d(t)*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t), y_faux2(t) = d(t)]

=== Input info ===
State variables:          [b(t), d(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t), y_faux2(t)]
Input variables:          []
Parameters in equations:  [a, k3, k4, k5, k6, k7]
===================

memory used=16156.5MB, alloc=215.8MB, time=148.74
memory used=16281.9MB, alloc=215.8MB, time=149.80
memory used=16384.0MB, alloc=215.8MB, time=150.63
	Adding new y-equations: [y_faux3_0 = x4_7]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, y_faux2_0-d_0, d_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d_0*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d_0+a-x3_0-x4_0)*x2_1-x2_0*(-b_0*d_1-b_1*d_0+x3_1+x4_1))*k5-x1_1*k3+k4*x2_1-k6*x3_1-k6*x4_1+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d_0*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d_2+2*b_1*d_1+b_2*d_0-x3_2-x4_2)*x2_0+(b_0*d_0+a-x3_0-x4_0)*x2_2+2*x2_1*(b_0*d_1+b_1*d_0-x3_1-x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, d_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_0*d_1-b_1*d_0+x4_1)*x2_0-x2_1*(b_0*d_0-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d_3+3*b_1*d_2+3*b_2*d_1+b_3*d_0-x3_3-x4_3)*x2_0+(3*b_0*d_2+6*b_1*d_1+3*b_2*d_0-3*x3_2-3*x4_2)*x2_1+(b_0*d_0+a-x3_0-x4_0)*x2_3+3*x2_2*(b_0*d_1+b_1*d_0-x3_1-x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, d_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*d_2-2*b_1*d_1-b_2*d_0+x4_2)*x2_0+(-2*b_0*d_1-2*b_1*d_0+2*x4_1)*x2_1+x2_2*(-b_0*d_0+x4_0))*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d_4+4*b_1*d_3+6*b_2*d_2+4*b_3*d_1+b_4*d_0-x3_4-x4_4)*x2_0+(4*b_0*d_3+12*b_1*d_2+12*b_2*d_1+4*b_3*d_0-4*x3_3-4*x4_3)*x2_1+(6*b_0*d_2+12*b_1*d_1+6*b_2*d_0-6*x3_2-6*x4_2)*x2_2+(b_0*d_0+a-x3_0-x4_0)*x2_4+4*x2_3*(b_0*d_1+b_1*d_0-x3_1-x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, d_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*d_3-3*b_1*d_2-3*b_2*d_1-b_3*d_0+x4_3)*x2_0+(-3*b_0*d_2-6*b_1*d_1-3*b_2*d_0+3*x4_2)*x2_1+(-d_0*x2_3-3*d_1*x2_2)*b_0-3*x2_2*b_1*d_0+3*x4_1*x2_2+x2_3*x4_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*d_5+5*b_1*d_4+10*b_2*d_3+10*b_3*d_2+5*b_4*d_1+b_5*d_0-x3_5-x4_5)*x2_0+(5*b_0*d_4+20*b_1*d_3+30*b_2*d_2+20*b_3*d_1+5*b_4*d_0-5*x3_4-5*x4_4)*x2_1+(10*b_0*d_3+30*b_1*d_2+30*b_2*d_1+10*b_3*d_0-10*x3_3-10*x4_3)*x2_2+(d_0*x2_5+5*d_1*x2_4+10*d_2*x2_3)*b_0+(5*b_1*x2_4+10*b_2*x2_3)*d_0+(20*b_1*d_1-10*x3_2-10*x4_2)*x2_3+(a-x3_0-x4_0)*x2_5-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, d_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*d_4-4*b_1*d_3-6*b_2*d_2-4*b_3*d_1-b_4*d_0+x4_4)*x2_0+(-4*b_0*d_3-12*b_1*d_2-12*b_2*d_1-4*b_3*d_0+4*x4_3)*x2_1+(-d_0*x2_4-4*d_1*x2_3-6*d_2*x2_2)*b_0+(-4*b_1*x2_3-6*b_2*x2_2)*d_0+(-12*b_1*d_1+6*x4_2)*x2_2+4*x4_1*x2_3+x4_0*x2_4)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*d_6+6*b_1*d_5+15*b_2*d_4+20*b_3*d_3+15*b_4*d_2+6*b_5*d_1+b_6*d_0-x3_6-x4_6)*x2_0+(6*b_0*d_5+30*b_1*d_4+60*b_2*d_3+60*b_3*d_2+30*b_4*d_1+6*b_5*d_0-6*x3_5-6*x4_5)*x2_1+(15*b_0*d_4+60*b_1*d_3+90*b_2*d_2+60*b_3*d_1+15*b_4*d_0-15*x3_4-15*x4_4)*x2_2+(d_0*x2_6+6*d_1*x2_5+15*d_2*x2_4+20*d_3*x2_3)*b_0+(6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3)*d_0+(60*b_1*d_2+60*b_2*d_1-20*x3_3-20*x4_3)*x2_3+30*b_1*d_1*x2_4+(-15*x3_2-15*x4_2)*x2_4+(a-x3_0-x4_0)*x2_6-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, d_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*d_5-5*b_1*d_4-10*b_2*d_3-10*b_3*d_2-5*b_4*d_1-b_5*d_0+x4_5)*x2_0+(-5*b_0*d_4-20*b_1*d_3-30*b_2*d_2-20*b_3*d_1-5*b_4*d_0+5*x4_4)*x2_1+(-d_0*x2_5-5*d_1*x2_4-10*d_2*x2_3-10*d_3*x2_2)*b_0+(-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2)*d_0+(-30*b_1*d_2-30*b_2*d_1+10*x4_3)*x2_2-20*d_1*x2_3*b_1+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*d_7+7*b_1*d_6+21*b_2*d_5+35*b_3*d_4+35*b_4*d_3+21*b_5*d_2+7*b_6*d_1+b_7*d_0-x3_7-x4_7)*x2_0+(7*b_0*d_6+42*b_1*d_5+105*b_2*d_4+140*b_3*d_3+105*b_4*d_2+42*b_5*d_1+7*b_6*d_0-7*x3_6-7*x4_6)*x2_1+(21*b_0*d_5+105*b_1*d_4+210*b_2*d_3+210*b_3*d_2+105*b_4*d_1+21*b_5*d_0-21*x3_5-21*x4_5)*x2_2+(d_0*x2_7+7*d_1*x2_6+21*d_2*x2_5+35*d_3*x2_4+35*d_4*x2_3)*b_0+(7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3)*d_0+(140*b_1*d_3+210*b_2*d_2+140*b_3*d_1-35*x3_4-35*x4_4)*x2_3+(42*d_1*x2_5+105*d_2*x2_4)*b_1+105*b_2*d_1*x2_4+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5+(a-x3_0-x4_0)*x2_7-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, d_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*d_6-6*b_1*d_5-15*b_2*d_4-20*b_3*d_3-15*b_4*d_2-6*b_5*d_1-b_6*d_0+x4_6)*x2_0+(-6*b_0*d_5-30*b_1*d_4-60*b_2*d_3-60*b_3*d_2-30*b_4*d_1-6*b_5*d_0+6*x4_5)*x2_1+(-d_0*x2_6-6*d_1*x2_5-15*d_2*x2_4-20*d_3*x2_3-15*d_4*x2_2)*b_0+(-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2)*d_0+(-60*b_1*d_3-90*b_2*d_2-60*b_3*d_1+15*x4_4)*x2_2+(-30*d_1*x2_4-60*d_2*x2_3)*b_1-60*b_2*d_1*x2_3+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, -d_1+y_faux2_1, -d_2+y_faux2_2, -d_3+y_faux2_3, -d_4+y_faux2_4, -d_5+y_faux2_5, -d_6+y_faux2_6, -d_7+y_faux2_7, y_faux3_0-x4_7]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = d_0, y_faux2_1 = d_1, y_faux2_2 = d_2, y_faux2_3 = d_3, y_faux2_4 = d_4, y_faux2_5 = d_5, y_faux2_6 = d_6, y_faux2_7 = d_7, y_faux2_8 = d_8, y_faux2_9 = d_9, y_faux2_10 = d_10, y_faux2_11 = d_11, y_faux2_12 = d_12, y_faux2_13 = d_13, y_faux2_14 = d_14, y_faux3_0 = x4_7]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability:  723190167600000000000000
Random sample for the outputs and inputs is generated from  [a = 496004083346681782155186, k3 = 13285704424858747898741, k4 = 480152626630837465137878, k5 = 442871128294163109499915, k6 = 382650684547568387310032, k7 = 203795818061988424782724, b_0 = 228413974238694992000860, d_0 = 377540682907005147958702, x1_0 = 549764638939255171756493, x2_0 = 129241060593550092074586, x3_0 = 263726941530601206656336, x4_0 = 570782665197743998198980, x5_0 = 149584575482001905943907]
The polynomial system widehat{E^t} contains  83 equations in  68  variables
            "new_logs/Tumor/transcendence_169_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, x3(0), x3_1]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b}
Algebraically independent parameters among derivatives: {x3_1, x3(0)}
	Adding ODEs: [diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t)]
	New system: [diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t)]

=== Input info ===
State variables:          [b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t)]
Input variables:          []
Parameters in equations:  [a, d, k3, k4, k5, k6, k7]
===================

memory used=16528.4MB, alloc=215.8MB, time=152.10
	Adding new y-equations: [y_faux2_0 = x3_0, y_faux3_0 = x3_1]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a-x3_0-x4_0)*x2_1-x2_0*(-b_1*d+x3_1+x4_1))*k5+k4*x2_1-k6*x3_1-k6*x4_1-x1_1*k3+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a-x3_0-x4_0)*x2_2+(b_2*d-x3_2-x4_2)*x2_0-2*x2_1*(-b_1*d+x3_1+x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a-x3_0-x4_0)*x2_3+(3*b_1*x2_2+3*b_2*x2_1+b_3*x2_0)*d+(-x3_3-x4_3)*x2_0+(-3*x3_2-3*x4_2)*x2_1-3*x2_2*(x3_1+x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3)*x2_1+(-6*x3_2-6*x4_2)*x2_2-4*x2_3*(x3_1+x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(a-x3_0-x4_0)*x2_5+(-x3_5-x4_5)*x2_0+(-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3)*x2_2+(-10*x3_2-10*x4_2)*x2_3-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(a-x3_0-x4_0)*x2_6+(-x3_6-x4_6)*x2_0+(-6*x3_5-6*x4_5)*x2_1+(-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3)*x2_3+(-15*x3_2-15*x4_2)*x2_4-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(a-x3_0-x4_0)*x2_7+(-x3_7-x4_7)*x2_0+(-7*x3_6-7*x4_6)*x2_1+(-21*x3_5-21*x4_5)*x2_2+(-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, y_faux2_0-x3_0, y_faux3_0-x3_1]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = x3_0, y_faux3_0 = x3_1]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability:  591701046100000000000000
Random sample for the outputs and inputs is generated from  [a = 43824205675359158317350, d = 362081372637276019607942, k3 = 586418373085691994210384, k4 = 240266235466380177334703, k5 = 553907528902423231681049, k6 = 195049056720086988113981, k7 = 86045391860222081336583, b_0 = 240023827482075569454934, x1_0 = 554574865333055376771203, x2_0 = 143607253749083623464231, x3_0 = 85600960200886256403083, x4_0 = 162202163582537587991743, x5_0 = 431120515800121398541372]
The polynomial system widehat{E^t} contains  69 equations in  61  variables
            "new_logs/Tumor/transcendence_170_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, x3(0), x3_2]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b}
Algebraically independent parameters among derivatives: {x3_2, x3(0)}
	Adding ODEs: [diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t)]
	New system: [diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t)]

=== Input info ===
State variables:          [b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t)]
Input variables:          []
Parameters in equations:  [a, d, k3, k4, k5, k6, k7]
===================

memory used=16676.3MB, alloc=215.8MB, time=153.56
memory used=16808.4MB, alloc=215.8MB, time=154.69
	Adding new y-equations: [y_faux2_0 = x3_0, y_faux3_0 = x3_2]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a-x3_0-x4_0)*x2_1-x2_0*(-b_1*d+x3_1+x4_1))*k5+k4*x2_1-k6*x3_1-k6*x4_1-x1_1*k3+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a-x3_0-x4_0)*x2_2+(b_2*d-x3_2-x4_2)*x2_0-2*x2_1*(-b_1*d+x3_1+x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a-x3_0-x4_0)*x2_3+(3*b_1*x2_2+3*b_2*x2_1+b_3*x2_0)*d+(-x3_3-x4_3)*x2_0+(-3*x3_2-3*x4_2)*x2_1-3*x2_2*(x3_1+x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3)*x2_1+(-6*x3_2-6*x4_2)*x2_2-4*x2_3*(x3_1+x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(a-x3_0-x4_0)*x2_5+(-x3_5-x4_5)*x2_0+(-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3)*x2_2+(-10*x3_2-10*x4_2)*x2_3-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(a-x3_0-x4_0)*x2_6+(-x3_6-x4_6)*x2_0+(-6*x3_5-6*x4_5)*x2_1+(-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3)*x2_3+(-15*x3_2-15*x4_2)*x2_4-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(a-x3_0-x4_0)*x2_7+(-x3_7-x4_7)*x2_0+(-7*x3_6-7*x4_6)*x2_1+(-21*x3_5-21*x4_5)*x2_2+(-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, y_faux2_0-x3_0, y_faux3_0-x3_2]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = x3_0, y_faux3_0 = x3_2]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability:  591701046100000000000000
Random sample for the outputs and inputs is generated from  [a = 416621911957800026520561, d = 286651439083312491393281, k3 = 421362663080608039284584, k4 = 176837981585581868517560, k5 = 100680534097779165159406, k6 = 385994910728691936246134, k7 = 507372701664835449323516, b_0 = 67790797889201599686301, x1_0 = 220416963294050823469492, x2_0 = 326874661783167441450132, x3_0 = 288437061972142069073707, x4_0 = 385421638534063347003185, x5_0 = 154084434985875086501813]
The polynomial system widehat{E^t} contains  69 equations in  61  variables
            "new_logs/Tumor/transcendence_171_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, x3(0), x3_3]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b}
Algebraically independent parameters among derivatives: {x3_3, x3(0)}
	Adding ODEs: [diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t)]
	New system: [diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t)]

=== Input info ===
State variables:          [b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t)]
Input variables:          []
Parameters in equations:  [a, d, k3, k4, k5, k6, k7]
===================

memory used=16955.6MB, alloc=215.8MB, time=156.14
	Adding new y-equations: [y_faux2_0 = x3_0, y_faux3_0 = x3_3]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a-x3_0-x4_0)*x2_1-x2_0*(-b_1*d+x3_1+x4_1))*k5+k4*x2_1-k6*x3_1-k6*x4_1-x1_1*k3+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a-x3_0-x4_0)*x2_2+(b_2*d-x3_2-x4_2)*x2_0-2*x2_1*(-b_1*d+x3_1+x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a-x3_0-x4_0)*x2_3+(3*b_1*x2_2+3*b_2*x2_1+b_3*x2_0)*d+(-x3_3-x4_3)*x2_0+(-3*x3_2-3*x4_2)*x2_1-3*x2_2*(x3_1+x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3)*x2_1+(-6*x3_2-6*x4_2)*x2_2-4*x2_3*(x3_1+x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(a-x3_0-x4_0)*x2_5+(-x3_5-x4_5)*x2_0+(-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3)*x2_2+(-10*x3_2-10*x4_2)*x2_3-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(a-x3_0-x4_0)*x2_6+(-x3_6-x4_6)*x2_0+(-6*x3_5-6*x4_5)*x2_1+(-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3)*x2_3+(-15*x3_2-15*x4_2)*x2_4-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(a-x3_0-x4_0)*x2_7+(-x3_7-x4_7)*x2_0+(-7*x3_6-7*x4_6)*x2_1+(-21*x3_5-21*x4_5)*x2_2+(-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, y_faux2_0-x3_0, y_faux3_0-x3_3]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = x3_0, y_faux3_0 = x3_3]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability:  591701046100000000000000
Random sample for the outputs and inputs is generated from  [a = 335200860351466783644824, d = 544119068663003820825462, k3 = 107328780597765522085421, k4 = 87619897143016710754016, k5 = 418226008051154625088569, k6 = 325926043159512347537992, k7 = 513542102280589645800142, b_0 = 324419815275559941682994, x1_0 = 147228350898437981717320, x2_0 = 201773354571669347863128, x3_0 = 428559942161548644729802, x4_0 = 105512615010427916129406, x5_0 = 13083908101285974612383]
The polynomial system widehat{E^t} contains  69 equations in  61  variables
            "new_logs/Tumor/transcendence_172_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, x3(0), x3_4]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b}
Algebraically independent parameters among derivatives: {x3_4, x3(0)}
	Adding ODEs: [diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t)]
	New system: [diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t)]

=== Input info ===
State variables:          [b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t)]
Input variables:          []
Parameters in equations:  [a, d, k3, k4, k5, k6, k7]
===================

memory used=17107.1MB, alloc=215.8MB, time=157.60
memory used=17246.1MB, alloc=215.8MB, time=158.79
	Adding new y-equations: [y_faux2_0 = x3_0, y_faux3_0 = x3_4]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a-x3_0-x4_0)*x2_1-x2_0*(-b_1*d+x3_1+x4_1))*k5+k4*x2_1-k6*x3_1-k6*x4_1-x1_1*k3+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a-x3_0-x4_0)*x2_2+(b_2*d-x3_2-x4_2)*x2_0-2*x2_1*(-b_1*d+x3_1+x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a-x3_0-x4_0)*x2_3+(3*b_1*x2_2+3*b_2*x2_1+b_3*x2_0)*d+(-x3_3-x4_3)*x2_0+(-3*x3_2-3*x4_2)*x2_1-3*x2_2*(x3_1+x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3)*x2_1+(-6*x3_2-6*x4_2)*x2_2-4*x2_3*(x3_1+x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(a-x3_0-x4_0)*x2_5+(-x3_5-x4_5)*x2_0+(-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3)*x2_2+(-10*x3_2-10*x4_2)*x2_3-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(a-x3_0-x4_0)*x2_6+(-x3_6-x4_6)*x2_0+(-6*x3_5-6*x4_5)*x2_1+(-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3)*x2_3+(-15*x3_2-15*x4_2)*x2_4-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(a-x3_0-x4_0)*x2_7+(-x3_7-x4_7)*x2_0+(-7*x3_6-7*x4_6)*x2_1+(-21*x3_5-21*x4_5)*x2_2+(-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, y_faux2_0-x3_0, y_faux3_0-x3_4]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = x3_0, y_faux3_0 = x3_4]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability:  591701046100000000000000
Random sample for the outputs and inputs is generated from  [a = 465438114377559944156349, d = 512907995659543688705246, k3 = 266054372837423029990323, k4 = 303828645306921464101033, k5 = 350238067931024860037738, k6 = 47437432247186554236194, k7 = 339960438872014479166276, b_0 = 88699333040388740410762, x1_0 = 12910429600580023927660, x2_0 = 169204326206318444420645, x3_0 = 366796573571914751929857, x4_0 = 494909911298671415363693, x5_0 = 155732583066558230389118]
The polynomial system widehat{E^t} contains  69 equations in  61  variables
            "new_logs/Tumor/transcendence_173_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, x3(0), x3_5]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b}
Algebraically independent parameters among derivatives: {x3_5, x3(0)}
	Adding ODEs: [diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t)]
	New system: [diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t)]

=== Input info ===
State variables:          [b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t)]
Input variables:          []
Parameters in equations:  [a, d, k3, k4, k5, k6, k7]
===================

memory used=17394.4MB, alloc=215.8MB, time=160.24
	Adding new y-equations: [y_faux2_0 = x3_0, y_faux3_0 = x3_5]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a-x3_0-x4_0)*x2_1-x2_0*(-b_1*d+x3_1+x4_1))*k5+k4*x2_1-k6*x3_1-k6*x4_1-x1_1*k3+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a-x3_0-x4_0)*x2_2+(b_2*d-x3_2-x4_2)*x2_0-2*x2_1*(-b_1*d+x3_1+x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a-x3_0-x4_0)*x2_3+(3*b_1*x2_2+3*b_2*x2_1+b_3*x2_0)*d+(-x3_3-x4_3)*x2_0+(-3*x3_2-3*x4_2)*x2_1-3*x2_2*(x3_1+x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3)*x2_1+(-6*x3_2-6*x4_2)*x2_2-4*x2_3*(x3_1+x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(a-x3_0-x4_0)*x2_5+(-x3_5-x4_5)*x2_0+(-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3)*x2_2+(-10*x3_2-10*x4_2)*x2_3-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(a-x3_0-x4_0)*x2_6+(-x3_6-x4_6)*x2_0+(-6*x3_5-6*x4_5)*x2_1+(-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3)*x2_3+(-15*x3_2-15*x4_2)*x2_4-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(a-x3_0-x4_0)*x2_7+(-x3_7-x4_7)*x2_0+(-7*x3_6-7*x4_6)*x2_1+(-21*x3_5-21*x4_5)*x2_2+(-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, y_faux2_0-x3_0, y_faux3_0-x3_5]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = x3_0, y_faux3_0 = x3_5]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability:  591701046100000000000000
Random sample for the outputs and inputs is generated from  [a = 441243962716186759161758, d = 152483647446776664662297, k3 = 150560485226521166009054, k4 = 98743466261051490297904, k5 = 5676946953573192336960, k6 = 123334272136523743831635, k7 = 379365031261732751146733, b_0 = 14519603336842733819275, x1_0 = 480132016730455655075954, x2_0 = 339032448715862022655074, x3_0 = 386507328066398323293172, x4_0 = 194268338252533512051854, x5_0 = 170045105237346729380435]
The polynomial system widehat{E^t} contains  69 equations in  61  variables
            "new_logs/Tumor/transcendence_174_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, x3(0), x3_6]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b}
Algebraically independent parameters among derivatives: {x3_6, x3(0)}
	Adding ODEs: [diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t)]
	New system: [diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t)]

=== Input info ===
State variables:          [b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t)]
Input variables:          []
Parameters in equations:  [a, d, k3, k4, k5, k6, k7]
===================

memory used=17545.6MB, alloc=215.8MB, time=161.66
memory used=17684.0MB, alloc=215.8MB, time=162.79
	Adding new y-equations: [y_faux2_0 = x3_0, y_faux3_0 = x3_6]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a-x3_0-x4_0)*x2_1-x2_0*(-b_1*d+x3_1+x4_1))*k5+k4*x2_1-k6*x3_1-k6*x4_1-x1_1*k3+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a-x3_0-x4_0)*x2_2+(b_2*d-x3_2-x4_2)*x2_0-2*x2_1*(-b_1*d+x3_1+x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a-x3_0-x4_0)*x2_3+(3*b_1*x2_2+3*b_2*x2_1+b_3*x2_0)*d+(-x3_3-x4_3)*x2_0+(-3*x3_2-3*x4_2)*x2_1-3*x2_2*(x3_1+x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3)*x2_1+(-6*x3_2-6*x4_2)*x2_2-4*x2_3*(x3_1+x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(a-x3_0-x4_0)*x2_5+(-x3_5-x4_5)*x2_0+(-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3)*x2_2+(-10*x3_2-10*x4_2)*x2_3-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(a-x3_0-x4_0)*x2_6+(-x3_6-x4_6)*x2_0+(-6*x3_5-6*x4_5)*x2_1+(-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3)*x2_3+(-15*x3_2-15*x4_2)*x2_4-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(a-x3_0-x4_0)*x2_7+(-x3_7-x4_7)*x2_0+(-7*x3_6-7*x4_6)*x2_1+(-21*x3_5-21*x4_5)*x2_2+(-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, y_faux2_0-x3_0, y_faux3_0-x3_6]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = x3_0, y_faux3_0 = x3_6]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability:  591701046100000000000000
Random sample for the outputs and inputs is generated from  [a = 304761807668522235493029, d = 62268454026281117064507, k3 = 71276428123488805565864, k4 = 589001428533679026849506, k5 = 342549098271541463895243, k6 = 449543429214266797760699, k7 = 162699251835030593716164, b_0 = 177479837309766464637017, x1_0 = 114765293500817041492665, x2_0 = 564226519133442181443994, x3_0 = 363591274484227742205008, x4_0 = 265723834844321107753056, x5_0 = 483164874992929899168689]
The polynomial system widehat{E^t} contains  69 equations in  61  variables
            "new_logs/Tumor/transcendence_175_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, x3(0), x3_7]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b}
Algebraically independent parameters among derivatives: {x3_7, x3(0)}
	Adding ODEs: [diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t)]
	New system: [diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t)]

=== Input info ===
State variables:          [b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t)]
Input variables:          []
Parameters in equations:  [a, d, k3, k4, k5, k6, k7]
===================

memory used=17832.8MB, alloc=215.8MB, time=164.22
	Adding new y-equations: [y_faux2_0 = x3_0, y_faux3_0 = x3_7]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a-x3_0-x4_0)*x2_1-x2_0*(-b_1*d+x3_1+x4_1))*k5+k4*x2_1-k6*x3_1-k6*x4_1-x1_1*k3+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a-x3_0-x4_0)*x2_2+(b_2*d-x3_2-x4_2)*x2_0-2*x2_1*(-b_1*d+x3_1+x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a-x3_0-x4_0)*x2_3+(3*b_1*x2_2+3*b_2*x2_1+b_3*x2_0)*d+(-x3_3-x4_3)*x2_0+(-3*x3_2-3*x4_2)*x2_1-3*x2_2*(x3_1+x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3)*x2_1+(-6*x3_2-6*x4_2)*x2_2-4*x2_3*(x3_1+x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(a-x3_0-x4_0)*x2_5+(-x3_5-x4_5)*x2_0+(-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3)*x2_2+(-10*x3_2-10*x4_2)*x2_3-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(a-x3_0-x4_0)*x2_6+(-x3_6-x4_6)*x2_0+(-6*x3_5-6*x4_5)*x2_1+(-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3)*x2_3+(-15*x3_2-15*x4_2)*x2_4-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(a-x3_0-x4_0)*x2_7+(-x3_7-x4_7)*x2_0+(-7*x3_6-7*x4_6)*x2_1+(-21*x3_5-21*x4_5)*x2_2+(-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, y_faux2_0-x3_0, y_faux3_0-x3_7]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = x3_0, y_faux3_0 = x3_7]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability:  591701046100000000000000
Random sample for the outputs and inputs is generated from  [a = 541281599185179933727249, d = 465790833952488766163730, k3 = 371479449602081515631405, k4 = 172120831182701237505008, k5 = 429364746269083253285512, k6 = 152664122278594641245508, k7 = 551302287901970424477593, b_0 = 3573252498240894585336, x1_0 = 498184945200621027858481, x2_0 = 340011405918912147420937, x3_0 = 509100022151181726890392, x4_0 = 507209481221208703791528, x5_0 = 209826974230490112020369]
The polynomial system widehat{E^t} contains  69 equations in  61  variables
            "new_logs/Tumor/transcendence_176_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, x3(0), x4(0)]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [b, x3(0), x4_1]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b}
Algebraically independent parameters among derivatives: {x4_1, x3(0)}
	Adding ODEs: [diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t)]
	New system: [diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t)]

=== Input info ===
State variables:          [b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t)]
Input variables:          []
Parameters in equations:  [a, d, k3, k4, k5, k6, k7]
===================

memory used=17987.1MB, alloc=215.8MB, time=165.68
memory used=18134.1MB, alloc=215.8MB, time=166.91
	Adding new y-equations: [y_faux2_0 = x3_0, y_faux3_0 = x4_1]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a-x3_0-x4_0)*x2_1-x2_0*(-b_1*d+x3_1+x4_1))*k5+k4*x2_1-k6*x3_1-k6*x4_1-x1_1*k3+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a-x3_0-x4_0)*x2_2+(b_2*d-x3_2-x4_2)*x2_0-2*x2_1*(-b_1*d+x3_1+x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a-x3_0-x4_0)*x2_3+(3*b_1*x2_2+3*b_2*x2_1+b_3*x2_0)*d+(-x3_3-x4_3)*x2_0+(-3*x3_2-3*x4_2)*x2_1-3*x2_2*(x3_1+x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3)*x2_1+(-6*x3_2-6*x4_2)*x2_2-4*x2_3*(x3_1+x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(a-x3_0-x4_0)*x2_5+(-x3_5-x4_5)*x2_0+(-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3)*x2_2+(-10*x3_2-10*x4_2)*x2_3-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(a-x3_0-x4_0)*x2_6+(-x3_6-x4_6)*x2_0+(-6*x3_5-6*x4_5)*x2_1+(-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3)*x2_3+(-15*x3_2-15*x4_2)*x2_4-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(a-x3_0-x4_0)*x2_7+(-x3_7-x4_7)*x2_0+(-7*x3_6-7*x4_6)*x2_1+(-21*x3_5-21*x4_5)*x2_2+(-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, y_faux2_0-x3_0, y_faux3_0-x4_1]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = x3_0, y_faux3_0 = x4_1]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability:  591701046100000000000000
Random sample for the outputs and inputs is generated from  [a = 330287950403441102428905, d = 489647904191807733254061, k3 = 591129748092913184163526, k4 = 54883380266945848341954, k5 = 489030893205181774704029, k6 = 447626418007414718785468, k7 = 199209358147342619869184, b_0 = 441714722751440161486753, x1_0 = 523719569762767631434816, x2_0 = 468725343021472916088971, x3_0 = 100401478268798050681569, x4_0 = 59283241455654028416473, x5_0 = 50115791471231075727422]
The polynomial system widehat{E^t} contains  69 equations in  61  variables
            "new_logs/Tumor/transcendence_178_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, x3(0), x4_2]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b}
Algebraically independent parameters among derivatives: {x4_2, x3(0)}
	Adding ODEs: [diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t)]
	New system: [diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t)]

=== Input info ===
State variables:          [b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t)]
Input variables:          []
Parameters in equations:  [a, d, k3, k4, k5, k6, k7]
===================

memory used=18285.3MB, alloc=215.8MB, time=168.37
	Adding new y-equations: [y_faux2_0 = x3_0, y_faux3_0 = x4_2]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a-x3_0-x4_0)*x2_1-x2_0*(-b_1*d+x3_1+x4_1))*k5+k4*x2_1-k6*x3_1-k6*x4_1-x1_1*k3+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a-x3_0-x4_0)*x2_2+(b_2*d-x3_2-x4_2)*x2_0-2*x2_1*(-b_1*d+x3_1+x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a-x3_0-x4_0)*x2_3+(3*b_1*x2_2+3*b_2*x2_1+b_3*x2_0)*d+(-x3_3-x4_3)*x2_0+(-3*x3_2-3*x4_2)*x2_1-3*x2_2*(x3_1+x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3)*x2_1+(-6*x3_2-6*x4_2)*x2_2-4*x2_3*(x3_1+x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(a-x3_0-x4_0)*x2_5+(-x3_5-x4_5)*x2_0+(-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3)*x2_2+(-10*x3_2-10*x4_2)*x2_3-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(a-x3_0-x4_0)*x2_6+(-x3_6-x4_6)*x2_0+(-6*x3_5-6*x4_5)*x2_1+(-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3)*x2_3+(-15*x3_2-15*x4_2)*x2_4-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(a-x3_0-x4_0)*x2_7+(-x3_7-x4_7)*x2_0+(-7*x3_6-7*x4_6)*x2_1+(-21*x3_5-21*x4_5)*x2_2+(-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, y_faux2_0-x3_0, y_faux3_0-x4_2]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = x3_0, y_faux3_0 = x4_2]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability:  591701046100000000000000
Random sample for the outputs and inputs is generated from  [a = 13984150779958275859621, d = 155248046509147693089157, k3 = 483807942350374624016722, k4 = 532953026520107954580700, k5 = 160781187206678024451901, k6 = 71985733325420854235553, k7 = 241933605197670430322184, b_0 = 517316859264022792197537, x1_0 = 426831419884033000203985, x2_0 = 367371103812190043694507, x3_0 = 253154196399739661928681, x4_0 = 456734704106126623435122, x5_0 = 438881540610851434259592]
The polynomial system widehat{E^t} contains  69 equations in  61  variables
            "new_logs/Tumor/transcendence_179_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, x3(0), x4_3]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b}
Algebraically independent parameters among derivatives: {x4_3, x3(0)}
	Adding ODEs: [diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t)]
	New system: [diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t)]

=== Input info ===
State variables:          [b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t)]
Input variables:          []
Parameters in equations:  [a, d, k3, k4, k5, k6, k7]
===================

memory used=18438.4MB, alloc=215.8MB, time=169.79
memory used=18571.7MB, alloc=215.8MB, time=170.92
	Adding new y-equations: [y_faux2_0 = x3_0, y_faux3_0 = x4_3]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a-x3_0-x4_0)*x2_1-x2_0*(-b_1*d+x3_1+x4_1))*k5+k4*x2_1-k6*x3_1-k6*x4_1-x1_1*k3+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a-x3_0-x4_0)*x2_2+(b_2*d-x3_2-x4_2)*x2_0-2*x2_1*(-b_1*d+x3_1+x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a-x3_0-x4_0)*x2_3+(3*b_1*x2_2+3*b_2*x2_1+b_3*x2_0)*d+(-x3_3-x4_3)*x2_0+(-3*x3_2-3*x4_2)*x2_1-3*x2_2*(x3_1+x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3)*x2_1+(-6*x3_2-6*x4_2)*x2_2-4*x2_3*(x3_1+x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(a-x3_0-x4_0)*x2_5+(-x3_5-x4_5)*x2_0+(-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3)*x2_2+(-10*x3_2-10*x4_2)*x2_3-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(a-x3_0-x4_0)*x2_6+(-x3_6-x4_6)*x2_0+(-6*x3_5-6*x4_5)*x2_1+(-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3)*x2_3+(-15*x3_2-15*x4_2)*x2_4-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(a-x3_0-x4_0)*x2_7+(-x3_7-x4_7)*x2_0+(-7*x3_6-7*x4_6)*x2_1+(-21*x3_5-21*x4_5)*x2_2+(-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, y_faux2_0-x3_0, y_faux3_0-x4_3]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = x3_0, y_faux3_0 = x4_3]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability:  591701046100000000000000
Random sample for the outputs and inputs is generated from  [a = 399680715895472596918106, d = 230533096696991023721685, k3 = 148836116858918828844792, k4 = 156305682388899479469690, k5 = 5162778931735408512598, k6 = 391842059977601021001769, k7 = 457963246132031814038919, b_0 = 492877367708849812790917, x1_0 = 176693632421067913571170, x2_0 = 232454505185651981830719, x3_0 = 293741344600032849337476, x4_0 = 353902284728199834019079, x5_0 = 515758855723793558569230]
The polynomial system widehat{E^t} contains  69 equations in  61  variables
            "new_logs/Tumor/transcendence_180_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, x3(0), x4_4]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b}
Algebraically independent parameters among derivatives: {x4_4, x3(0)}
	Adding ODEs: [diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t)]
	New system: [diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t)]

=== Input info ===
State variables:          [b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t)]
Input variables:          []
Parameters in equations:  [a, d, k3, k4, k5, k6, k7]
===================

memory used=18724.2MB, alloc=215.8MB, time=172.42
	Adding new y-equations: [y_faux2_0 = x3_0, y_faux3_0 = x4_4]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a-x3_0-x4_0)*x2_1-x2_0*(-b_1*d+x3_1+x4_1))*k5+k4*x2_1-k6*x3_1-k6*x4_1-x1_1*k3+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a-x3_0-x4_0)*x2_2+(b_2*d-x3_2-x4_2)*x2_0-2*x2_1*(-b_1*d+x3_1+x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a-x3_0-x4_0)*x2_3+(3*b_1*x2_2+3*b_2*x2_1+b_3*x2_0)*d+(-x3_3-x4_3)*x2_0+(-3*x3_2-3*x4_2)*x2_1-3*x2_2*(x3_1+x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3)*x2_1+(-6*x3_2-6*x4_2)*x2_2-4*x2_3*(x3_1+x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(a-x3_0-x4_0)*x2_5+(-x3_5-x4_5)*x2_0+(-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3)*x2_2+(-10*x3_2-10*x4_2)*x2_3-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(a-x3_0-x4_0)*x2_6+(-x3_6-x4_6)*x2_0+(-6*x3_5-6*x4_5)*x2_1+(-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3)*x2_3+(-15*x3_2-15*x4_2)*x2_4-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(a-x3_0-x4_0)*x2_7+(-x3_7-x4_7)*x2_0+(-7*x3_6-7*x4_6)*x2_1+(-21*x3_5-21*x4_5)*x2_2+(-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, y_faux2_0-x3_0, y_faux3_0-x4_4]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = x3_0, y_faux3_0 = x4_4]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability:  591701046100000000000000
Random sample for the outputs and inputs is generated from  [a = 154369657275054788775592, d = 108918696284404810023041, k3 = 110348665727068285664972, k4 = 451754571761263046624887, k5 = 228918373943717410999207, k6 = 398724020891546608806262, k7 = 486718336216586978988005, b_0 = 141743516267601719760107, x1_0 = 146705180144482797239057, x2_0 = 78593585450141730397641, x3_0 = 125564093731131848811010, x4_0 = 442817407320262798104286, x5_0 = 438181591061364050272238]
The polynomial system widehat{E^t} contains  69 equations in  61  variables
            "new_logs/Tumor/transcendence_181_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, x3(0), x4_5]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b}
Algebraically independent parameters among derivatives: {x4_5, x3(0)}
	Adding ODEs: [diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t)]
	New system: [diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t)]

=== Input info ===
State variables:          [b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t)]
Input variables:          []
Parameters in equations:  [a, d, k3, k4, k5, k6, k7]
===================

memory used=18878.7MB, alloc=215.8MB, time=173.84
memory used=19010.5MB, alloc=215.8MB, time=174.86
	Adding new y-equations: [y_faux2_0 = x3_0, y_faux3_0 = x4_5]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a-x3_0-x4_0)*x2_1-x2_0*(-b_1*d+x3_1+x4_1))*k5+k4*x2_1-k6*x3_1-k6*x4_1-x1_1*k3+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a-x3_0-x4_0)*x2_2+(b_2*d-x3_2-x4_2)*x2_0-2*x2_1*(-b_1*d+x3_1+x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a-x3_0-x4_0)*x2_3+(3*b_1*x2_2+3*b_2*x2_1+b_3*x2_0)*d+(-x3_3-x4_3)*x2_0+(-3*x3_2-3*x4_2)*x2_1-3*x2_2*(x3_1+x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3)*x2_1+(-6*x3_2-6*x4_2)*x2_2-4*x2_3*(x3_1+x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(a-x3_0-x4_0)*x2_5+(-x3_5-x4_5)*x2_0+(-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3)*x2_2+(-10*x3_2-10*x4_2)*x2_3-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(a-x3_0-x4_0)*x2_6+(-x3_6-x4_6)*x2_0+(-6*x3_5-6*x4_5)*x2_1+(-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3)*x2_3+(-15*x3_2-15*x4_2)*x2_4-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(a-x3_0-x4_0)*x2_7+(-x3_7-x4_7)*x2_0+(-7*x3_6-7*x4_6)*x2_1+(-21*x3_5-21*x4_5)*x2_2+(-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, y_faux2_0-x3_0, y_faux3_0-x4_5]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = x3_0, y_faux3_0 = x4_5]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability:  591701046100000000000000
Random sample for the outputs and inputs is generated from  [a = 485979575035932023050086, d = 135471828037304056962723, k3 = 238541058971332994126158, k4 = 92330167283185253970645, k5 = 273737118445140995062983, k6 = 288729745986328479181337, k7 = 34955725805817864544865, b_0 = 81660784505199930183175, x1_0 = 108314393031251093728225, x2_0 = 351859505343807135235519, x3_0 = 484504080329614602622294, x4_0 = 475563167033747477794815, x5_0 = 345127311365381621213557]
The polynomial system widehat{E^t} contains  69 equations in  61  variables
            "new_logs/Tumor/transcendence_182_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, x3(0), x4_6]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b}
Algebraically independent parameters among derivatives: {x4_6, x3(0)}
	Adding ODEs: [diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t)]
	New system: [diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t)]

=== Input info ===
State variables:          [b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t)]
Input variables:          []
Parameters in equations:  [a, d, k3, k4, k5, k6, k7]
===================

memory used=19163.7MB, alloc=215.8MB, time=176.33
	Adding new y-equations: [y_faux2_0 = x3_0, y_faux3_0 = x4_6]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a-x3_0-x4_0)*x2_1-x2_0*(-b_1*d+x3_1+x4_1))*k5+k4*x2_1-k6*x3_1-k6*x4_1-x1_1*k3+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a-x3_0-x4_0)*x2_2+(b_2*d-x3_2-x4_2)*x2_0-2*x2_1*(-b_1*d+x3_1+x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a-x3_0-x4_0)*x2_3+(3*b_1*x2_2+3*b_2*x2_1+b_3*x2_0)*d+(-x3_3-x4_3)*x2_0+(-3*x3_2-3*x4_2)*x2_1-3*x2_2*(x3_1+x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3)*x2_1+(-6*x3_2-6*x4_2)*x2_2-4*x2_3*(x3_1+x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(a-x3_0-x4_0)*x2_5+(-x3_5-x4_5)*x2_0+(-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3)*x2_2+(-10*x3_2-10*x4_2)*x2_3-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(a-x3_0-x4_0)*x2_6+(-x3_6-x4_6)*x2_0+(-6*x3_5-6*x4_5)*x2_1+(-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3)*x2_3+(-15*x3_2-15*x4_2)*x2_4-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(a-x3_0-x4_0)*x2_7+(-x3_7-x4_7)*x2_0+(-7*x3_6-7*x4_6)*x2_1+(-21*x3_5-21*x4_5)*x2_2+(-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, y_faux2_0-x3_0, y_faux3_0-x4_6]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = x3_0, y_faux3_0 = x4_6]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability:  591701046100000000000000
Random sample for the outputs and inputs is generated from  [a = 568312755578500645931392, d = 454488730804330456581099, k3 = 385015535589658630617780, k4 = 17136567959963265724917, k5 = 65167073891480940736288, k6 = 220468029008750086346788, k7 = 382913699801249431103958, b_0 = 421823500083639496184561, x1_0 = 68481484922091720033611, x2_0 = 541573757378776929111487, x3_0 = 192860894501405684518968, x4_0 = 313749299674980452980203, x5_0 = 221047040418597405893770]
The polynomial system widehat{E^t} contains  69 equations in  61  variables
            "new_logs/Tumor/transcendence_183_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, x3(0), x4_7]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b}
Algebraically independent parameters among derivatives: {x4_7, x3(0)}
	Adding ODEs: [diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t)]
	New system: [diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t)]

=== Input info ===
State variables:          [b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t)]
Input variables:          []
Parameters in equations:  [a, d, k3, k4, k5, k6, k7]
===================

memory used=19315.0MB, alloc=215.8MB, time=177.74
memory used=19447.4MB, alloc=215.8MB, time=178.77
	Adding new y-equations: [y_faux2_0 = x3_0, y_faux3_0 = x4_7]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a-x3_0-x4_0)*x2_1-x2_0*(-b_1*d+x3_1+x4_1))*k5+k4*x2_1-k6*x3_1-k6*x4_1-x1_1*k3+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a-x3_0-x4_0)*x2_2+(b_2*d-x3_2-x4_2)*x2_0-2*x2_1*(-b_1*d+x3_1+x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a-x3_0-x4_0)*x2_3+(3*b_1*x2_2+3*b_2*x2_1+b_3*x2_0)*d+(-x3_3-x4_3)*x2_0+(-3*x3_2-3*x4_2)*x2_1-3*x2_2*(x3_1+x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3)*x2_1+(-6*x3_2-6*x4_2)*x2_2-4*x2_3*(x3_1+x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(a-x3_0-x4_0)*x2_5+(-x3_5-x4_5)*x2_0+(-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3)*x2_2+(-10*x3_2-10*x4_2)*x2_3-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(a-x3_0-x4_0)*x2_6+(-x3_6-x4_6)*x2_0+(-6*x3_5-6*x4_5)*x2_1+(-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3)*x2_3+(-15*x3_2-15*x4_2)*x2_4-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(a-x3_0-x4_0)*x2_7+(-x3_7-x4_7)*x2_0+(-7*x3_6-7*x4_6)*x2_1+(-21*x3_5-21*x4_5)*x2_2+(-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, y_faux2_0-x3_0, y_faux3_0-x4_7]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = x3_0, y_faux3_0 = x4_7]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability:  591701046100000000000000
Random sample for the outputs and inputs is generated from  [a = 471492245597394964874208, d = 340249172615007706417688, k3 = 317943224994085464350931, k4 = 238428901788655756158360, k5 = 104791989988428417791645, k6 = 354961097825520967519246, k7 = 376282105199877051751737, b_0 = 249556853372689926852373, x1_0 = 398526482930784208952874, x2_0 = 476168592658666895832752, x3_0 = 77464914780801364749563, x4_0 = 570245601221192471014078, x5_0 = 222306820145124365453966]
The polynomial system widehat{E^t} contains  69 equations in  61  variables
            "new_logs/Tumor/transcendence_184_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, x3_1, x3_2]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b}
Algebraically independent parameters among derivatives: {x3_1, x3_2}
	Adding ODEs: [diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t)]
	New system: [diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t)]

=== Input info ===
State variables:          [b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t)]
Input variables:          []
Parameters in equations:  [a, d, k3, k4, k5, k6, k7]
===================

memory used=19602.0MB, alloc=215.8MB, time=180.26
	Adding new y-equations: [y_faux2_0 = x3_1, y_faux3_0 = x3_2]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a-x3_0-x4_0)*x2_1-x2_0*(-b_1*d+x3_1+x4_1))*k5+k4*x2_1-k6*x3_1-k6*x4_1-x1_1*k3+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a-x3_0-x4_0)*x2_2+(b_2*d-x3_2-x4_2)*x2_0-2*x2_1*(-b_1*d+x3_1+x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a-x3_0-x4_0)*x2_3+(3*b_1*x2_2+3*b_2*x2_1+b_3*x2_0)*d+(-x3_3-x4_3)*x2_0+(-3*x3_2-3*x4_2)*x2_1-3*x2_2*(x3_1+x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3)*x2_1+(-6*x3_2-6*x4_2)*x2_2-4*x2_3*(x3_1+x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(a-x3_0-x4_0)*x2_5+(-x3_5-x4_5)*x2_0+(-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3)*x2_2+(-10*x3_2-10*x4_2)*x2_3-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(a-x3_0-x4_0)*x2_6+(-x3_6-x4_6)*x2_0+(-6*x3_5-6*x4_5)*x2_1+(-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3)*x2_3+(-15*x3_2-15*x4_2)*x2_4-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(a-x3_0-x4_0)*x2_7+(-x3_7-x4_7)*x2_0+(-7*x3_6-7*x4_6)*x2_1+(-21*x3_5-21*x4_5)*x2_2+(-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, y_faux2_0-x3_1, y_faux3_0-x3_2]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = x3_1, y_faux3_0 = x3_2]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability:  591701046100000000000000
Random sample for the outputs and inputs is generated from  [a = 221556295502755573320491, d = 571926886786137322801973, k3 = 498721248776737138680392, k4 = 381933787022501835393615, k5 = 447086499709818161106109, k6 = 284781642744703883085903, k7 = 251742129687229014084013, b_0 = 268601266345635871308815, x1_0 = 577894668141869240590088, x2_0 = 75877135764989893670119, x3_0 = 158723913205924293323235, x4_0 = 149238993571079716238242, x5_0 = 111789625309526836698966]
The polynomial system widehat{E^t} contains  69 equations in  61  variables
            "new_logs/Tumor/transcendence_185_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, x3_1, x3_3]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b}
Algebraically independent parameters among derivatives: {x3_1, x3_3}
	Adding ODEs: [diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t)]
	New system: [diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t)]

=== Input info ===
State variables:          [b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t)]
Input variables:          []
Parameters in equations:  [a, d, k3, k4, k5, k6, k7]
===================

memory used=19757.5MB, alloc=215.8MB, time=181.74
memory used=19887.8MB, alloc=215.8MB, time=182.75
	Adding new y-equations: [y_faux2_0 = x3_1, y_faux3_0 = x3_3]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a-x3_0-x4_0)*x2_1-x2_0*(-b_1*d+x3_1+x4_1))*k5+k4*x2_1-k6*x3_1-k6*x4_1-x1_1*k3+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a-x3_0-x4_0)*x2_2+(b_2*d-x3_2-x4_2)*x2_0-2*x2_1*(-b_1*d+x3_1+x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a-x3_0-x4_0)*x2_3+(3*b_1*x2_2+3*b_2*x2_1+b_3*x2_0)*d+(-x3_3-x4_3)*x2_0+(-3*x3_2-3*x4_2)*x2_1-3*x2_2*(x3_1+x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3)*x2_1+(-6*x3_2-6*x4_2)*x2_2-4*x2_3*(x3_1+x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(a-x3_0-x4_0)*x2_5+(-x3_5-x4_5)*x2_0+(-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3)*x2_2+(-10*x3_2-10*x4_2)*x2_3-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(a-x3_0-x4_0)*x2_6+(-x3_6-x4_6)*x2_0+(-6*x3_5-6*x4_5)*x2_1+(-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3)*x2_3+(-15*x3_2-15*x4_2)*x2_4-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(a-x3_0-x4_0)*x2_7+(-x3_7-x4_7)*x2_0+(-7*x3_6-7*x4_6)*x2_1+(-21*x3_5-21*x4_5)*x2_2+(-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, y_faux2_0-x3_1, y_faux3_0-x3_3]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = x3_1, y_faux3_0 = x3_3]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability:  591701046100000000000000
Random sample for the outputs and inputs is generated from  [a = 462877121711235855947787, d = 473554204758656943039264, k3 = 120080502730897354598931, k4 = 137748885801695043301494, k5 = 267372505267852084051461, k6 = 395039146159588840731594, k7 = 210860332826654345444077, b_0 = 328431006251432675228945, x1_0 = 479521415425598023859490, x2_0 = 493455981717483642315099, x3_0 = 203662414161810895965891, x4_0 = 304097250006096270207748, x5_0 = 518426003565828323377299]
The polynomial system widehat{E^t} contains  69 equations in  61  variables
            "new_logs/Tumor/transcendence_186_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, x3_1, x3_4]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b}
Algebraically independent parameters among derivatives: {x3_1, x3_4}
	Adding ODEs: [diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t)]
	New system: [diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t)]

=== Input info ===
State variables:          [b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t)]
Input variables:          []
Parameters in equations:  [a, d, k3, k4, k5, k6, k7]
===================

memory used=20043.6MB, alloc=215.8MB, time=184.24
	Adding new y-equations: [y_faux2_0 = x3_1, y_faux3_0 = x3_4]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a-x3_0-x4_0)*x2_1-x2_0*(-b_1*d+x3_1+x4_1))*k5+k4*x2_1-k6*x3_1-k6*x4_1-x1_1*k3+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a-x3_0-x4_0)*x2_2+(b_2*d-x3_2-x4_2)*x2_0-2*x2_1*(-b_1*d+x3_1+x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a-x3_0-x4_0)*x2_3+(3*b_1*x2_2+3*b_2*x2_1+b_3*x2_0)*d+(-x3_3-x4_3)*x2_0+(-3*x3_2-3*x4_2)*x2_1-3*x2_2*(x3_1+x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3)*x2_1+(-6*x3_2-6*x4_2)*x2_2-4*x2_3*(x3_1+x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(a-x3_0-x4_0)*x2_5+(-x3_5-x4_5)*x2_0+(-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3)*x2_2+(-10*x3_2-10*x4_2)*x2_3-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(a-x3_0-x4_0)*x2_6+(-x3_6-x4_6)*x2_0+(-6*x3_5-6*x4_5)*x2_1+(-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3)*x2_3+(-15*x3_2-15*x4_2)*x2_4-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(a-x3_0-x4_0)*x2_7+(-x3_7-x4_7)*x2_0+(-7*x3_6-7*x4_6)*x2_1+(-21*x3_5-21*x4_5)*x2_2+(-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, y_faux2_0-x3_1, y_faux3_0-x3_4]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = x3_1, y_faux3_0 = x3_4]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability:  591701046100000000000000
Random sample for the outputs and inputs is generated from  [a = 346003904336988224876355, d = 428381111128278434244626, k3 = 245982729992481921146222, k4 = 461779505029198941199527, k5 = 280441073564002181401057, k6 = 62198379176367398805015, k7 = 121283304052581266361491, b_0 = 358688241309835506130976, x1_0 = 3899758413584178939590, x2_0 = 40877408776755821415686, x3_0 = 328317324140783994107620, x4_0 = 372588180041820217284137, x5_0 = 278074785416670136611783]
The polynomial system widehat{E^t} contains  69 equations in  61  variables
            "new_logs/Tumor/transcendence_187_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, x3_1, x3_5]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b}
Algebraically independent parameters among derivatives: {x3_1, x3_5}
	Adding ODEs: [diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t)]
	New system: [diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t)]

=== Input info ===
State variables:          [b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t)]
Input variables:          []
Parameters in equations:  [a, d, k3, k4, k5, k6, k7]
===================

memory used=20197.9MB, alloc=215.8MB, time=185.69
memory used=20326.5MB, alloc=215.8MB, time=186.68
	Adding new y-equations: [y_faux2_0 = x3_1, y_faux3_0 = x3_5]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a-x3_0-x4_0)*x2_1-x2_0*(-b_1*d+x3_1+x4_1))*k5+k4*x2_1-k6*x3_1-k6*x4_1-x1_1*k3+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a-x3_0-x4_0)*x2_2+(b_2*d-x3_2-x4_2)*x2_0-2*x2_1*(-b_1*d+x3_1+x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a-x3_0-x4_0)*x2_3+(3*b_1*x2_2+3*b_2*x2_1+b_3*x2_0)*d+(-x3_3-x4_3)*x2_0+(-3*x3_2-3*x4_2)*x2_1-3*x2_2*(x3_1+x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3)*x2_1+(-6*x3_2-6*x4_2)*x2_2-4*x2_3*(x3_1+x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(a-x3_0-x4_0)*x2_5+(-x3_5-x4_5)*x2_0+(-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3)*x2_2+(-10*x3_2-10*x4_2)*x2_3-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(a-x3_0-x4_0)*x2_6+(-x3_6-x4_6)*x2_0+(-6*x3_5-6*x4_5)*x2_1+(-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3)*x2_3+(-15*x3_2-15*x4_2)*x2_4-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(a-x3_0-x4_0)*x2_7+(-x3_7-x4_7)*x2_0+(-7*x3_6-7*x4_6)*x2_1+(-21*x3_5-21*x4_5)*x2_2+(-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, y_faux2_0-x3_1, y_faux3_0-x3_5]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = x3_1, y_faux3_0 = x3_5]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability:  591701046100000000000000
Random sample for the outputs and inputs is generated from  [a = 579917607128021676360636, d = 398763358647563791966250, k3 = 176357976548793503122444, k4 = 183104638407727774744373, k5 = 264062092143675508568742, k6 = 493830442057811273250978, k7 = 351161501762163722238862, b_0 = 431655037125536957025011, x1_0 = 527146502816209109318459, x2_0 = 20280471015161796258591, x3_0 = 496697957747931323881053, x4_0 = 367059789612209885179919, x5_0 = 82093002971848751835584]
The polynomial system widehat{E^t} contains  69 equations in  61  variables
            "new_logs/Tumor/transcendence_188_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, x3_1, x3_6]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b}
Algebraically independent parameters among derivatives: {x3_1, x3_6}
	Adding ODEs: [diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t)]
	New system: [diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t)]

=== Input info ===
State variables:          [b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t)]
Input variables:          []
Parameters in equations:  [a, d, k3, k4, k5, k6, k7]
===================

memory used=20482.9MB, alloc=215.8MB, time=188.14
	Adding new y-equations: [y_faux2_0 = x3_1, y_faux3_0 = x3_6]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a-x3_0-x4_0)*x2_1-x2_0*(-b_1*d+x3_1+x4_1))*k5+k4*x2_1-k6*x3_1-k6*x4_1-x1_1*k3+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a-x3_0-x4_0)*x2_2+(b_2*d-x3_2-x4_2)*x2_0-2*x2_1*(-b_1*d+x3_1+x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a-x3_0-x4_0)*x2_3+(3*b_1*x2_2+3*b_2*x2_1+b_3*x2_0)*d+(-x3_3-x4_3)*x2_0+(-3*x3_2-3*x4_2)*x2_1-3*x2_2*(x3_1+x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3)*x2_1+(-6*x3_2-6*x4_2)*x2_2-4*x2_3*(x3_1+x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(a-x3_0-x4_0)*x2_5+(-x3_5-x4_5)*x2_0+(-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3)*x2_2+(-10*x3_2-10*x4_2)*x2_3-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(a-x3_0-x4_0)*x2_6+(-x3_6-x4_6)*x2_0+(-6*x3_5-6*x4_5)*x2_1+(-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3)*x2_3+(-15*x3_2-15*x4_2)*x2_4-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(a-x3_0-x4_0)*x2_7+(-x3_7-x4_7)*x2_0+(-7*x3_6-7*x4_6)*x2_1+(-21*x3_5-21*x4_5)*x2_2+(-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, y_faux2_0-x3_1, y_faux3_0-x3_6]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = x3_1, y_faux3_0 = x3_6]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability:  591701046100000000000000
Random sample for the outputs and inputs is generated from  [a = 481722982265779416627134, d = 241011270973852337854904, k3 = 541596878075173954556832, k4 = 382383002925387778315975, k5 = 34970460052425393454453, k6 = 4952704045054443189684, k7 = 212871890176528108362430, b_0 = 349064503949467352411523, x1_0 = 426057410915070856129828, x2_0 = 1156259396369847490268, x3_0 = 498529287444877011032336, x4_0 = 445471926464068039438586, x5_0 = 288614405062192260419232]
The polynomial system widehat{E^t} contains  69 equations in  61  variables
            "new_logs/Tumor/transcendence_189_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, x3_1, x3_7]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b}
Algebraically independent parameters among derivatives: {x3_1, x3_7}
	Adding ODEs: [diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t)]
	New system: [diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t)]

=== Input info ===
State variables:          [b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t)]
Input variables:          []
Parameters in equations:  [a, d, k3, k4, k5, k6, k7]
===================

memory used=20639.7MB, alloc=215.8MB, time=189.59
memory used=20767.6MB, alloc=215.8MB, time=190.57
	Adding new y-equations: [y_faux2_0 = x3_1, y_faux3_0 = x3_7]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a-x3_0-x4_0)*x2_1-x2_0*(-b_1*d+x3_1+x4_1))*k5+k4*x2_1-k6*x3_1-k6*x4_1-x1_1*k3+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a-x3_0-x4_0)*x2_2+(b_2*d-x3_2-x4_2)*x2_0-2*x2_1*(-b_1*d+x3_1+x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a-x3_0-x4_0)*x2_3+(3*b_1*x2_2+3*b_2*x2_1+b_3*x2_0)*d+(-x3_3-x4_3)*x2_0+(-3*x3_2-3*x4_2)*x2_1-3*x2_2*(x3_1+x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3)*x2_1+(-6*x3_2-6*x4_2)*x2_2-4*x2_3*(x3_1+x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(a-x3_0-x4_0)*x2_5+(-x3_5-x4_5)*x2_0+(-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3)*x2_2+(-10*x3_2-10*x4_2)*x2_3-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(a-x3_0-x4_0)*x2_6+(-x3_6-x4_6)*x2_0+(-6*x3_5-6*x4_5)*x2_1+(-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3)*x2_3+(-15*x3_2-15*x4_2)*x2_4-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(a-x3_0-x4_0)*x2_7+(-x3_7-x4_7)*x2_0+(-7*x3_6-7*x4_6)*x2_1+(-21*x3_5-21*x4_5)*x2_2+(-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, y_faux2_0-x3_1, y_faux3_0-x3_7]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = x3_1, y_faux3_0 = x3_7]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability:  591701046100000000000000
Random sample for the outputs and inputs is generated from  [a = 371832894324369753496853, d = 203443140703640715488996, k3 = 150496293251929785435618, k4 = 474898761547058847017512, k5 = 570482957485440303295671, k6 = 108248674789687104727751, k7 = 323580726678167094142698, b_0 = 48473054282103820341843, x1_0 = 397780114011247367142074, x2_0 = 95320328657554773182815, x3_0 = 201034652007523591477798, x4_0 = 493698874700021544051610, x5_0 = 218868296207187476661435]
The polynomial system widehat{E^t} contains  69 equations in  61  variables
            "new_logs/Tumor/transcendence_190_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, x3_1, x4(0)]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b}
Algebraically independent parameters among derivatives: {x3_1, x4(0)}
	Adding ODEs: [diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t)]
	New system: [diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t)]

=== Input info ===
State variables:          [b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t)]
Input variables:          []
Parameters in equations:  [a, d, k3, k4, k5, k6, k7]
===================

memory used=20925.0MB, alloc=215.8MB, time=192.05
	Adding new y-equations: [y_faux2_0 = x3_1, y_faux3_0 = x4_0]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a-x3_0-x4_0)*x2_1-x2_0*(-b_1*d+x3_1+x4_1))*k5+k4*x2_1-k6*x3_1-k6*x4_1-x1_1*k3+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a-x3_0-x4_0)*x2_2+(b_2*d-x3_2-x4_2)*x2_0-2*x2_1*(-b_1*d+x3_1+x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a-x3_0-x4_0)*x2_3+(3*b_1*x2_2+3*b_2*x2_1+b_3*x2_0)*d+(-x3_3-x4_3)*x2_0+(-3*x3_2-3*x4_2)*x2_1-3*x2_2*(x3_1+x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3)*x2_1+(-6*x3_2-6*x4_2)*x2_2-4*x2_3*(x3_1+x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(a-x3_0-x4_0)*x2_5+(-x3_5-x4_5)*x2_0+(-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3)*x2_2+(-10*x3_2-10*x4_2)*x2_3-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(a-x3_0-x4_0)*x2_6+(-x3_6-x4_6)*x2_0+(-6*x3_5-6*x4_5)*x2_1+(-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3)*x2_3+(-15*x3_2-15*x4_2)*x2_4-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(a-x3_0-x4_0)*x2_7+(-x3_7-x4_7)*x2_0+(-7*x3_6-7*x4_6)*x2_1+(-21*x3_5-21*x4_5)*x2_2+(-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, y_faux2_0-x3_1, y_faux3_0-x4_0]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = x3_1, y_faux3_0 = x4_0]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability:  591701046100000000000000
Random sample for the outputs and inputs is generated from  [a = 22475227778342491875184, d = 307639339173734152998674, k3 = 566404190643561280855746, k4 = 409508108551585241790386, k5 = 80141885923622314019792, k6 = 194651952584633314005712, k7 = 125220597645680949838019, b_0 = 81640956877675201510243, x1_0 = 162055680803368837015146, x2_0 = 538294219162924131908257, x3_0 = 30040955954426182105379, x4_0 = 341157886290946644334519, x5_0 = 3808962916159691960219]
The polynomial system widehat{E^t} contains  69 equations in  61  variables
            "new_logs/Tumor/transcendence_191_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, x3_1, x4_1]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [b, x3_1, x4_2]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b}
Algebraically independent parameters among derivatives: {x3_1, x4_2}
	Adding ODEs: [diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t)]
	New system: [diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t)]

=== Input info ===
State variables:          [b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t)]
Input variables:          []
Parameters in equations:  [a, d, k3, k4, k5, k6, k7]
===================

memory used=21083.1MB, alloc=215.8MB, time=193.55
memory used=21212.6MB, alloc=215.8MB, time=194.55
	Adding new y-equations: [y_faux2_0 = x3_1, y_faux3_0 = x4_2]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a-x3_0-x4_0)*x2_1-x2_0*(-b_1*d+x3_1+x4_1))*k5+k4*x2_1-k6*x3_1-k6*x4_1-x1_1*k3+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a-x3_0-x4_0)*x2_2+(b_2*d-x3_2-x4_2)*x2_0-2*x2_1*(-b_1*d+x3_1+x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a-x3_0-x4_0)*x2_3+(3*b_1*x2_2+3*b_2*x2_1+b_3*x2_0)*d+(-x3_3-x4_3)*x2_0+(-3*x3_2-3*x4_2)*x2_1-3*x2_2*(x3_1+x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3)*x2_1+(-6*x3_2-6*x4_2)*x2_2-4*x2_3*(x3_1+x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(a-x3_0-x4_0)*x2_5+(-x3_5-x4_5)*x2_0+(-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3)*x2_2+(-10*x3_2-10*x4_2)*x2_3-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(a-x3_0-x4_0)*x2_6+(-x3_6-x4_6)*x2_0+(-6*x3_5-6*x4_5)*x2_1+(-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3)*x2_3+(-15*x3_2-15*x4_2)*x2_4-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(a-x3_0-x4_0)*x2_7+(-x3_7-x4_7)*x2_0+(-7*x3_6-7*x4_6)*x2_1+(-21*x3_5-21*x4_5)*x2_2+(-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, y_faux2_0-x3_1, y_faux3_0-x4_2]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = x3_1, y_faux3_0 = x4_2]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability:  591701046100000000000000
Random sample for the outputs and inputs is generated from  [a = 175995554714304429386843, d = 72224906801257549769305, k3 = 517174980116523909801292, k4 = 561553112976984280022307, k5 = 146400705461468507622939, k6 = 210619872837963871641187, k7 = 5607884116047089678057, b_0 = 379119057320978862220493, x1_0 = 251463451641365614075027, x2_0 = 334135606810635758172390, x3_0 = 504859427386489207030438, x4_0 = 299838814897838044233829, x5_0 = 188007923849772464929705]
The polynomial system widehat{E^t} contains  69 equations in  61  variables
            "new_logs/Tumor/transcendence_193_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, x3_1, x4_3]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b}
Algebraically independent parameters among derivatives: {x3_1, x4_3}
	Adding ODEs: [diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t)]
	New system: [diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t)]

=== Input info ===
State variables:          [b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t)]
Input variables:          []
Parameters in equations:  [a, d, k3, k4, k5, k6, k7]
===================

memory used=21370.4MB, alloc=215.8MB, time=196.04
	Adding new y-equations: [y_faux2_0 = x3_1, y_faux3_0 = x4_3]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a-x3_0-x4_0)*x2_1-x2_0*(-b_1*d+x3_1+x4_1))*k5+k4*x2_1-k6*x3_1-k6*x4_1-x1_1*k3+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a-x3_0-x4_0)*x2_2+(b_2*d-x3_2-x4_2)*x2_0-2*x2_1*(-b_1*d+x3_1+x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a-x3_0-x4_0)*x2_3+(3*b_1*x2_2+3*b_2*x2_1+b_3*x2_0)*d+(-x3_3-x4_3)*x2_0+(-3*x3_2-3*x4_2)*x2_1-3*x2_2*(x3_1+x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3)*x2_1+(-6*x3_2-6*x4_2)*x2_2-4*x2_3*(x3_1+x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(a-x3_0-x4_0)*x2_5+(-x3_5-x4_5)*x2_0+(-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3)*x2_2+(-10*x3_2-10*x4_2)*x2_3-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(a-x3_0-x4_0)*x2_6+(-x3_6-x4_6)*x2_0+(-6*x3_5-6*x4_5)*x2_1+(-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3)*x2_3+(-15*x3_2-15*x4_2)*x2_4-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(a-x3_0-x4_0)*x2_7+(-x3_7-x4_7)*x2_0+(-7*x3_6-7*x4_6)*x2_1+(-21*x3_5-21*x4_5)*x2_2+(-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, y_faux2_0-x3_1, y_faux3_0-x4_3]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = x3_1, y_faux3_0 = x4_3]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability:  591701046100000000000000
Random sample for the outputs and inputs is generated from  [a = 536924243743848601839852, d = 550106585891372734955278, k3 = 451167998674402240344426, k4 = 284823876301914871695073, k5 = 476527357396700168390200, k6 = 409212604592131032376658, k7 = 308669134249749192953328, b_0 = 566758389576003812696166, x1_0 = 415835131659454770634673, x2_0 = 364823719475085554225849, x3_0 = 456498981564297460390402, x4_0 = 238620693921541301223027, x5_0 = 544018638765707733334505]
The polynomial system widehat{E^t} contains  69 equations in  61  variables
            "new_logs/Tumor/transcendence_194_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, x3_1, x4_4]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b}
Algebraically independent parameters among derivatives: {x3_1, x4_4}
	Adding ODEs: [diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t)]
	New system: [diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t)]

=== Input info ===
State variables:          [b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t)]
Input variables:          []
Parameters in equations:  [a, d, k3, k4, k5, k6, k7]
===================

memory used=21529.3MB, alloc=215.8MB, time=197.50
memory used=21656.2MB, alloc=215.8MB, time=198.47
	Adding new y-equations: [y_faux2_0 = x3_1, y_faux3_0 = x4_4]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a-x3_0-x4_0)*x2_1-x2_0*(-b_1*d+x3_1+x4_1))*k5+k4*x2_1-k6*x3_1-k6*x4_1-x1_1*k3+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a-x3_0-x4_0)*x2_2+(b_2*d-x3_2-x4_2)*x2_0-2*x2_1*(-b_1*d+x3_1+x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a-x3_0-x4_0)*x2_3+(3*b_1*x2_2+3*b_2*x2_1+b_3*x2_0)*d+(-x3_3-x4_3)*x2_0+(-3*x3_2-3*x4_2)*x2_1-3*x2_2*(x3_1+x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3)*x2_1+(-6*x3_2-6*x4_2)*x2_2-4*x2_3*(x3_1+x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(a-x3_0-x4_0)*x2_5+(-x3_5-x4_5)*x2_0+(-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3)*x2_2+(-10*x3_2-10*x4_2)*x2_3-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(a-x3_0-x4_0)*x2_6+(-x3_6-x4_6)*x2_0+(-6*x3_5-6*x4_5)*x2_1+(-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3)*x2_3+(-15*x3_2-15*x4_2)*x2_4-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(a-x3_0-x4_0)*x2_7+(-x3_7-x4_7)*x2_0+(-7*x3_6-7*x4_6)*x2_1+(-21*x3_5-21*x4_5)*x2_2+(-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, y_faux2_0-x3_1, y_faux3_0-x4_4]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = x3_1, y_faux3_0 = x4_4]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability:  591701046100000000000000
Random sample for the outputs and inputs is generated from  [a = 308673596963580832252404, d = 15494380389792080888937, k3 = 510280704365016840989818, k4 = 481616494090281341716978, k5 = 132565048410329864692065, k6 = 446450391065391577920621, k7 = 321123186232526581999519, b_0 = 28600107534478167639252, x1_0 = 423961142709974859081440, x2_0 = 473785519996081330846015, x3_0 = 220281321030266284355768, x4_0 = 211760966472195068423943, x5_0 = 295923317702236791070836]
The polynomial system widehat{E^t} contains  69 equations in  61  variables
            "new_logs/Tumor/transcendence_195_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, x3_1, x4_5]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b}
Algebraically independent parameters among derivatives: {x3_1, x4_5}
	Adding ODEs: [diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t)]
	New system: [diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t)]

=== Input info ===
State variables:          [b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t)]
Input variables:          []
Parameters in equations:  [a, d, k3, k4, k5, k6, k7]
===================

memory used=21815.0MB, alloc=215.8MB, time=199.97
	Adding new y-equations: [y_faux2_0 = x3_1, y_faux3_0 = x4_5]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a-x3_0-x4_0)*x2_1-x2_0*(-b_1*d+x3_1+x4_1))*k5+k4*x2_1-k6*x3_1-k6*x4_1-x1_1*k3+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a-x3_0-x4_0)*x2_2+(b_2*d-x3_2-x4_2)*x2_0-2*x2_1*(-b_1*d+x3_1+x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a-x3_0-x4_0)*x2_3+(3*b_1*x2_2+3*b_2*x2_1+b_3*x2_0)*d+(-x3_3-x4_3)*x2_0+(-3*x3_2-3*x4_2)*x2_1-3*x2_2*(x3_1+x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3)*x2_1+(-6*x3_2-6*x4_2)*x2_2-4*x2_3*(x3_1+x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(a-x3_0-x4_0)*x2_5+(-x3_5-x4_5)*x2_0+(-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3)*x2_2+(-10*x3_2-10*x4_2)*x2_3-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(a-x3_0-x4_0)*x2_6+(-x3_6-x4_6)*x2_0+(-6*x3_5-6*x4_5)*x2_1+(-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3)*x2_3+(-15*x3_2-15*x4_2)*x2_4-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(a-x3_0-x4_0)*x2_7+(-x3_7-x4_7)*x2_0+(-7*x3_6-7*x4_6)*x2_1+(-21*x3_5-21*x4_5)*x2_2+(-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, y_faux2_0-x3_1, y_faux3_0-x4_5]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = x3_1, y_faux3_0 = x4_5]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability:  591701046100000000000000
Random sample for the outputs and inputs is generated from  [a = 507281011585438043848689, d = 516503694045486725945928, k3 = 5469463130503959529991, k4 = 372637103544409965111352, k5 = 428006730034502416356538, k6 = 508666879599538978795292, k7 = 7179003404824809002364, b_0 = 115253278186662844371372, x1_0 = 431983731514603327718883, x2_0 = 444748101241041962756111, x3_0 = 89064244122616233484287, x4_0 = 445562526476671326987401, x5_0 = 293724194707710709723231]
The polynomial system widehat{E^t} contains  69 equations in  61  variables
            "new_logs/Tumor/transcendence_196_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, x3_1, x4_6]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b}
Algebraically independent parameters among derivatives: {x3_1, x4_6}
	Adding ODEs: [diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t)]
	New system: [diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t)]

=== Input info ===
State variables:          [b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t)]
Input variables:          []
Parameters in equations:  [a, d, k3, k4, k5, k6, k7]
===================

memory used=21975.3MB, alloc=215.8MB, time=201.46
memory used=22100.7MB, alloc=215.8MB, time=202.45
	Adding new y-equations: [y_faux2_0 = x3_1, y_faux3_0 = x4_6]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a-x3_0-x4_0)*x2_1-x2_0*(-b_1*d+x3_1+x4_1))*k5+k4*x2_1-k6*x3_1-k6*x4_1-x1_1*k3+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a-x3_0-x4_0)*x2_2+(b_2*d-x3_2-x4_2)*x2_0-2*x2_1*(-b_1*d+x3_1+x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a-x3_0-x4_0)*x2_3+(3*b_1*x2_2+3*b_2*x2_1+b_3*x2_0)*d+(-x3_3-x4_3)*x2_0+(-3*x3_2-3*x4_2)*x2_1-3*x2_2*(x3_1+x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3)*x2_1+(-6*x3_2-6*x4_2)*x2_2-4*x2_3*(x3_1+x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(a-x3_0-x4_0)*x2_5+(-x3_5-x4_5)*x2_0+(-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3)*x2_2+(-10*x3_2-10*x4_2)*x2_3-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(a-x3_0-x4_0)*x2_6+(-x3_6-x4_6)*x2_0+(-6*x3_5-6*x4_5)*x2_1+(-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3)*x2_3+(-15*x3_2-15*x4_2)*x2_4-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(a-x3_0-x4_0)*x2_7+(-x3_7-x4_7)*x2_0+(-7*x3_6-7*x4_6)*x2_1+(-21*x3_5-21*x4_5)*x2_2+(-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, y_faux2_0-x3_1, y_faux3_0-x4_6]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = x3_1, y_faux3_0 = x4_6]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability:  591701046100000000000000
Random sample for the outputs and inputs is generated from  [a = 16647864364534901998868, d = 563558948742013467686250, k3 = 455498245825457250801206, k4 = 268993024268894201060881, k5 = 333151036756152284297999, k6 = 47408203433915406297119, k7 = 340451588114874963673899, b_0 = 65376060805330909038330, x1_0 = 428980712285841971791868, x2_0 = 278579918358221859319529, x3_0 = 75620839359463186802151, x4_0 = 294688061120519263487180, x5_0 = 391911103961753215560370]
The polynomial system widehat{E^t} contains  69 equations in  61  variables
            "new_logs/Tumor/transcendence_197_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, x3_1, x4_7]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b}
Algebraically independent parameters among derivatives: {x3_1, x4_7}
	Adding ODEs: [diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t)]
	New system: [diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t)]

=== Input info ===
State variables:          [b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t)]
Input variables:          []
Parameters in equations:  [a, d, k3, k4, k5, k6, k7]
===================

memory used=22242.4MB, alloc=215.8MB, time=203.92
	Adding new y-equations: [y_faux2_0 = x3_1, y_faux3_0 = x4_7]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a-x3_0-x4_0)*x2_1-x2_0*(-b_1*d+x3_1+x4_1))*k5+k4*x2_1-k6*x3_1-k6*x4_1-x1_1*k3+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a-x3_0-x4_0)*x2_2+(b_2*d-x3_2-x4_2)*x2_0-2*x2_1*(-b_1*d+x3_1+x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a-x3_0-x4_0)*x2_3+(3*b_1*x2_2+3*b_2*x2_1+b_3*x2_0)*d+(-x3_3-x4_3)*x2_0+(-3*x3_2-3*x4_2)*x2_1-3*x2_2*(x3_1+x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3)*x2_1+(-6*x3_2-6*x4_2)*x2_2-4*x2_3*(x3_1+x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(a-x3_0-x4_0)*x2_5+(-x3_5-x4_5)*x2_0+(-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3)*x2_2+(-10*x3_2-10*x4_2)*x2_3-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(a-x3_0-x4_0)*x2_6+(-x3_6-x4_6)*x2_0+(-6*x3_5-6*x4_5)*x2_1+(-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3)*x2_3+(-15*x3_2-15*x4_2)*x2_4-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(a-x3_0-x4_0)*x2_7+(-x3_7-x4_7)*x2_0+(-7*x3_6-7*x4_6)*x2_1+(-21*x3_5-21*x4_5)*x2_2+(-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, y_faux2_0-x3_1, y_faux3_0-x4_7]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = x3_1, y_faux3_0 = x4_7]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability:  591701046100000000000000
Random sample for the outputs and inputs is generated from  [a = 414627968931674882303798, d = 356311732596445847315836, k3 = 209416622794072046719673, k4 = 30380355252672895752744, k5 = 527114390852825140903344, k6 = 346313781841365879744161, k7 = 365620157154030532307596, b_0 = 534062351117087344374804, x1_0 = 289460533461712936770448, x2_0 = 363905611708402152385596, x3_0 = 516658815351626489373724, x4_0 = 580317072138517481531338, x5_0 = 506139089181283345824817]
The polynomial system widehat{E^t} contains  69 equations in  61  variables
            "new_logs/Tumor/transcendence_198_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, x3_2, x3_3]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b}
Algebraically independent parameters among derivatives: {x3_2, x3_3}
	Adding ODEs: [diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t)]
	New system: [diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t)]

=== Input info ===
State variables:          [b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t)]
Input variables:          []
Parameters in equations:  [a, d, k3, k4, k5, k6, k7]
===================

memory used=22403.9MB, alloc=215.8MB, time=205.45
memory used=22531.3MB, alloc=215.8MB, time=206.48
	Adding new y-equations: [y_faux2_0 = x3_2, y_faux3_0 = x3_3]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a-x3_0-x4_0)*x2_1-x2_0*(-b_1*d+x3_1+x4_1))*k5+k4*x2_1-k6*x3_1-k6*x4_1-x1_1*k3+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a-x3_0-x4_0)*x2_2+(b_2*d-x3_2-x4_2)*x2_0-2*x2_1*(-b_1*d+x3_1+x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a-x3_0-x4_0)*x2_3+(3*b_1*x2_2+3*b_2*x2_1+b_3*x2_0)*d+(-x3_3-x4_3)*x2_0+(-3*x3_2-3*x4_2)*x2_1-3*x2_2*(x3_1+x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3)*x2_1+(-6*x3_2-6*x4_2)*x2_2-4*x2_3*(x3_1+x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(a-x3_0-x4_0)*x2_5+(-x3_5-x4_5)*x2_0+(-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3)*x2_2+(-10*x3_2-10*x4_2)*x2_3-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(a-x3_0-x4_0)*x2_6+(-x3_6-x4_6)*x2_0+(-6*x3_5-6*x4_5)*x2_1+(-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3)*x2_3+(-15*x3_2-15*x4_2)*x2_4-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(a-x3_0-x4_0)*x2_7+(-x3_7-x4_7)*x2_0+(-7*x3_6-7*x4_6)*x2_1+(-21*x3_5-21*x4_5)*x2_2+(-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, y_faux2_0-x3_2, y_faux3_0-x3_3]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = x3_2, y_faux3_0 = x3_3]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability:  591701046100000000000000
Random sample for the outputs and inputs is generated from  [a = 350648755711841120961522, d = 393899261670470876197019, k3 = 491601862444962139062812, k4 = 124640583488246168327866, k5 = 392987486605427946723131, k6 = 588503052816056017061354, k7 = 567766259251274140098536, b_0 = 565711117975120407483844, x1_0 = 420148220808740948763831, x2_0 = 357557597064144341096196, x3_0 = 564483540508188038107420, x4_0 = 94564691055833741208235, x5_0 = 480732835067716504700096]
The polynomial system widehat{E^t} contains  69 equations in  61  variables
            "new_logs/Tumor/transcendence_199_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, x3_2, x3_4]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b}
Algebraically independent parameters among derivatives: {x3_2, x3_4}
	Adding ODEs: [diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t)]
	New system: [diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t)]

=== Input info ===
State variables:          [b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t)]
Input variables:          []
Parameters in equations:  [a, d, k3, k4, k5, k6, k7]
===================

memory used=22693.7MB, alloc=215.8MB, time=208.00
	Adding new y-equations: [y_faux2_0 = x3_2, y_faux3_0 = x3_4]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a-x3_0-x4_0)*x2_1-x2_0*(-b_1*d+x3_1+x4_1))*k5+k4*x2_1-k6*x3_1-k6*x4_1-x1_1*k3+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a-x3_0-x4_0)*x2_2+(b_2*d-x3_2-x4_2)*x2_0-2*x2_1*(-b_1*d+x3_1+x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a-x3_0-x4_0)*x2_3+(3*b_1*x2_2+3*b_2*x2_1+b_3*x2_0)*d+(-x3_3-x4_3)*x2_0+(-3*x3_2-3*x4_2)*x2_1-3*x2_2*(x3_1+x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3)*x2_1+(-6*x3_2-6*x4_2)*x2_2-4*x2_3*(x3_1+x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(a-x3_0-x4_0)*x2_5+(-x3_5-x4_5)*x2_0+(-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3)*x2_2+(-10*x3_2-10*x4_2)*x2_3-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(a-x3_0-x4_0)*x2_6+(-x3_6-x4_6)*x2_0+(-6*x3_5-6*x4_5)*x2_1+(-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3)*x2_3+(-15*x3_2-15*x4_2)*x2_4-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(a-x3_0-x4_0)*x2_7+(-x3_7-x4_7)*x2_0+(-7*x3_6-7*x4_6)*x2_1+(-21*x3_5-21*x4_5)*x2_2+(-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, y_faux2_0-x3_2, y_faux3_0-x3_4]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = x3_2, y_faux3_0 = x3_4]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability:  591701046100000000000000
Random sample for the outputs and inputs is generated from  [a = 69491609587962440586950, d = 424698104656929676627936, k3 = 22465975636955716491979, k4 = 507277865342046176504978, k5 = 89282301483831491558968, k6 = 351753344830620100216702, k7 = 375088642172939188555238, b_0 = 182325862139461242568582, x1_0 = 161280010093968555271262, x2_0 = 530395256057566017641378, x3_0 = 305132125633610179751625, x4_0 = 137668633112244837643174, x5_0 = 265793390569206109145179]
The polynomial system widehat{E^t} contains  69 equations in  61  variables
            "new_logs/Tumor/transcendence_200_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, x3_2, x3_5]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b}
Algebraically independent parameters among derivatives: {x3_2, x3_5}
	Adding ODEs: [diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t)]
	New system: [diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t)]

=== Input info ===
State variables:          [b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t)]
Input variables:          []
Parameters in equations:  [a, d, k3, k4, k5, k6, k7]
===================

memory used=22855.8MB, alloc=215.8MB, time=209.52
memory used=22981.6MB, alloc=215.8MB, time=210.52
	Adding new y-equations: [y_faux2_0 = x3_2, y_faux3_0 = x3_5]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a-x3_0-x4_0)*x2_1-x2_0*(-b_1*d+x3_1+x4_1))*k5+k4*x2_1-k6*x3_1-k6*x4_1-x1_1*k3+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a-x3_0-x4_0)*x2_2+(b_2*d-x3_2-x4_2)*x2_0-2*x2_1*(-b_1*d+x3_1+x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a-x3_0-x4_0)*x2_3+(3*b_1*x2_2+3*b_2*x2_1+b_3*x2_0)*d+(-x3_3-x4_3)*x2_0+(-3*x3_2-3*x4_2)*x2_1-3*x2_2*(x3_1+x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3)*x2_1+(-6*x3_2-6*x4_2)*x2_2-4*x2_3*(x3_1+x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(a-x3_0-x4_0)*x2_5+(-x3_5-x4_5)*x2_0+(-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3)*x2_2+(-10*x3_2-10*x4_2)*x2_3-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(a-x3_0-x4_0)*x2_6+(-x3_6-x4_6)*x2_0+(-6*x3_5-6*x4_5)*x2_1+(-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3)*x2_3+(-15*x3_2-15*x4_2)*x2_4-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(a-x3_0-x4_0)*x2_7+(-x3_7-x4_7)*x2_0+(-7*x3_6-7*x4_6)*x2_1+(-21*x3_5-21*x4_5)*x2_2+(-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, y_faux2_0-x3_2, y_faux3_0-x3_5]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = x3_2, y_faux3_0 = x3_5]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability:  591701046100000000000000
Random sample for the outputs and inputs is generated from  [a = 461253769542852654403180, d = 404250653925791229030934, k3 = 422038832875455737146629, k4 = 57967690896171788545747, k5 = 208732555157860709626315, k6 = 505811663299583723310380, k7 = 267126577761734770952771, b_0 = 306994174401432937473635, x1_0 = 208660984615116736231564, x2_0 = 5770552147492392780198, x3_0 = 91669229288911416808994, x4_0 = 436439314922708119992371, x5_0 = 112084586788485546206429]
The polynomial system widehat{E^t} contains  69 equations in  61  variables
            "new_logs/Tumor/transcendence_201_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, x3_2, x3_6]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b}
Algebraically independent parameters among derivatives: {x3_2, x3_6}
	Adding ODEs: [diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t)]
	New system: [diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t)]

=== Input info ===
State variables:          [b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t)]
Input variables:          []
Parameters in equations:  [a, d, k3, k4, k5, k6, k7]
===================

memory used=23144.5MB, alloc=215.8MB, time=212.08
	Adding new y-equations: [y_faux2_0 = x3_2, y_faux3_0 = x3_6]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a-x3_0-x4_0)*x2_1-x2_0*(-b_1*d+x3_1+x4_1))*k5+k4*x2_1-k6*x3_1-k6*x4_1-x1_1*k3+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a-x3_0-x4_0)*x2_2+(b_2*d-x3_2-x4_2)*x2_0-2*x2_1*(-b_1*d+x3_1+x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a-x3_0-x4_0)*x2_3+(3*b_1*x2_2+3*b_2*x2_1+b_3*x2_0)*d+(-x3_3-x4_3)*x2_0+(-3*x3_2-3*x4_2)*x2_1-3*x2_2*(x3_1+x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3)*x2_1+(-6*x3_2-6*x4_2)*x2_2-4*x2_3*(x3_1+x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(a-x3_0-x4_0)*x2_5+(-x3_5-x4_5)*x2_0+(-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3)*x2_2+(-10*x3_2-10*x4_2)*x2_3-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(a-x3_0-x4_0)*x2_6+(-x3_6-x4_6)*x2_0+(-6*x3_5-6*x4_5)*x2_1+(-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3)*x2_3+(-15*x3_2-15*x4_2)*x2_4-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(a-x3_0-x4_0)*x2_7+(-x3_7-x4_7)*x2_0+(-7*x3_6-7*x4_6)*x2_1+(-21*x3_5-21*x4_5)*x2_2+(-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, y_faux2_0-x3_2, y_faux3_0-x3_6]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = x3_2, y_faux3_0 = x3_6]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability:  591701046100000000000000
Random sample for the outputs and inputs is generated from  [a = 227687319481967270141669, d = 125054518368162935326516, k3 = 66363409297694719010342, k4 = 41416488783790932178429, k5 = 62625077703874102508499, k6 = 150174684164192614396142, k7 = 59856173870335689532246, b_0 = 229291545805575386553391, x1_0 = 208779504445117764944419, x2_0 = 214966267836196883516148, x3_0 = 123308755507781616337565, x4_0 = 75672959226570479898927, x5_0 = 123987820453118308908280]
The polynomial system widehat{E^t} contains  69 equations in  61  variables
            "new_logs/Tumor/transcendence_202_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, x3_2, x3_7]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b}
Algebraically independent parameters among derivatives: {x3_2, x3_7}
	Adding ODEs: [diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t)]
	New system: [diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t)]

=== Input info ===
State variables:          [b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t)]
Input variables:          []
Parameters in equations:  [a, d, k3, k4, k5, k6, k7]
===================

memory used=23308.3MB, alloc=215.8MB, time=213.65
	Adding new y-equations: [y_faux2_0 = x3_2, y_faux3_0 = x3_7]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a-x3_0-x4_0)*x2_1-x2_0*(-b_1*d+x3_1+x4_1))*k5+k4*x2_1-k6*x3_1-k6*x4_1-x1_1*k3+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a-x3_0-x4_0)*x2_2+(b_2*d-x3_2-x4_2)*x2_0-2*x2_1*(-b_1*d+x3_1+x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a-x3_0-x4_0)*x2_3+(3*b_1*x2_2+3*b_2*x2_1+b_3*x2_0)*d+(-x3_3-x4_3)*x2_0+(-3*x3_2-3*x4_2)*x2_1-3*x2_2*(x3_1+x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3)*x2_1+(-6*x3_2-6*x4_2)*x2_2-4*x2_3*(x3_1+x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(a-x3_0-x4_0)*x2_5+(-x3_5-x4_5)*x2_0+(-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3)*x2_2+(-10*x3_2-10*x4_2)*x2_3-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(a-x3_0-x4_0)*x2_6+(-x3_6-x4_6)*x2_0+(-6*x3_5-6*x4_5)*x2_1+(-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3)*x2_3+(-15*x3_2-15*x4_2)*x2_4-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(a-x3_0-x4_0)*x2_7+(-x3_7-x4_7)*x2_0+(-7*x3_6-7*x4_6)*x2_1+(-21*x3_5-21*x4_5)*x2_2+(-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, y_faux2_0-x3_2, y_faux3_0-x3_7]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = x3_2, y_faux3_0 = x3_7]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability:  591701046100000000000000
Random sample for the outputs and inputs is generated from  [a = 533931947985006945818981, d = 40677708964462496185082, k3 = 62861805121325075867597, k4 = 285519795682654838899182, k5 = 537958862549375969907296, k6 = 579908056704287897814452, k7 = 525460478526902066873243, b_0 = 221828690816289574713703, x1_0 = 490905799371719647498309, x2_0 = 323643950523247775372270, x3_0 = 184292316358577664930989, x4_0 = 212737357215455084235885, x5_0 = 563142876202782250910863]
The polynomial system widehat{E^t} contains  69 equations in  61  variables
            "new_logs/Tumor/transcendence_203_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, x3_2, x4(0)]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b}
Algebraically independent parameters among derivatives: {x3_2, x4(0)}
	Adding ODEs: [diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t)]
	New system: [diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t)]

=== Input info ===
State variables:          [b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t)]
Input variables:          []
Parameters in equations:  [a, d, k3, k4, k5, k6, k7]
===================

memory used=23475.7MB, alloc=215.8MB, time=215.13
memory used=23618.8MB, alloc=215.8MB, time=216.32
	Adding new y-equations: [y_faux2_0 = x3_2, y_faux3_0 = x4_0]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a-x3_0-x4_0)*x2_1-x2_0*(-b_1*d+x3_1+x4_1))*k5+k4*x2_1-k6*x3_1-k6*x4_1-x1_1*k3+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a-x3_0-x4_0)*x2_2+(b_2*d-x3_2-x4_2)*x2_0-2*x2_1*(-b_1*d+x3_1+x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a-x3_0-x4_0)*x2_3+(3*b_1*x2_2+3*b_2*x2_1+b_3*x2_0)*d+(-x3_3-x4_3)*x2_0+(-3*x3_2-3*x4_2)*x2_1-3*x2_2*(x3_1+x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3)*x2_1+(-6*x3_2-6*x4_2)*x2_2-4*x2_3*(x3_1+x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(a-x3_0-x4_0)*x2_5+(-x3_5-x4_5)*x2_0+(-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3)*x2_2+(-10*x3_2-10*x4_2)*x2_3-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(a-x3_0-x4_0)*x2_6+(-x3_6-x4_6)*x2_0+(-6*x3_5-6*x4_5)*x2_1+(-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3)*x2_3+(-15*x3_2-15*x4_2)*x2_4-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(a-x3_0-x4_0)*x2_7+(-x3_7-x4_7)*x2_0+(-7*x3_6-7*x4_6)*x2_1+(-21*x3_5-21*x4_5)*x2_2+(-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, y_faux2_0-x3_2, y_faux3_0-x4_0]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = x3_2, y_faux3_0 = x4_0]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability:  591701046100000000000000
Random sample for the outputs and inputs is generated from  [a = 10667415054615831071248, d = 229174519335502169806884, k3 = 408476837516037321805693, k4 = 248498292243330523279313, k5 = 151792335170038164211525, k6 = 493131258827108820508598, k7 = 206839514238660807543092, b_0 = 418960492880456092663795, x1_0 = 304948777816604137751987, x2_0 = 24006330653773802153209, x3_0 = 327347956645734341107211, x4_0 = 582117230222928934723205, x5_0 = 378901804039847447412924]
The polynomial system widehat{E^t} contains  69 equations in  61  variables
            "new_logs/Tumor/transcendence_204_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, x3_2, x4_1]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b}
Algebraically independent parameters among derivatives: {x3_2, x4_1}
	Adding ODEs: [diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t)]
	New system: [diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t)]

=== Input info ===
State variables:          [b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t)]
Input variables:          []
Parameters in equations:  [a, d, k3, k4, k5, k6, k7]
===================

memory used=23783.8MB, alloc=215.8MB, time=217.88
	Adding new y-equations: [y_faux2_0 = x3_2, y_faux3_0 = x4_1]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a-x3_0-x4_0)*x2_1-x2_0*(-b_1*d+x3_1+x4_1))*k5+k4*x2_1-k6*x3_1-k6*x4_1-x1_1*k3+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a-x3_0-x4_0)*x2_2+(b_2*d-x3_2-x4_2)*x2_0-2*x2_1*(-b_1*d+x3_1+x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a-x3_0-x4_0)*x2_3+(3*b_1*x2_2+3*b_2*x2_1+b_3*x2_0)*d+(-x3_3-x4_3)*x2_0+(-3*x3_2-3*x4_2)*x2_1-3*x2_2*(x3_1+x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3)*x2_1+(-6*x3_2-6*x4_2)*x2_2-4*x2_3*(x3_1+x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(a-x3_0-x4_0)*x2_5+(-x3_5-x4_5)*x2_0+(-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3)*x2_2+(-10*x3_2-10*x4_2)*x2_3-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(a-x3_0-x4_0)*x2_6+(-x3_6-x4_6)*x2_0+(-6*x3_5-6*x4_5)*x2_1+(-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3)*x2_3+(-15*x3_2-15*x4_2)*x2_4-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(a-x3_0-x4_0)*x2_7+(-x3_7-x4_7)*x2_0+(-7*x3_6-7*x4_6)*x2_1+(-21*x3_5-21*x4_5)*x2_2+(-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, y_faux2_0-x3_2, y_faux3_0-x4_1]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = x3_2, y_faux3_0 = x4_1]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability:  591701046100000000000000
Random sample for the outputs and inputs is generated from  [a = 69965987916971608693300, d = 516929538332253769423333, k3 = 533445762684767771966215, k4 = 335086632952196665311807, k5 = 86914316293986398538272, k6 = 8018110331850228596403, k7 = 386339732590265697938737, b_0 = 407712819967469127612344, x1_0 = 86555661882002349652419, x2_0 = 184996029943202256822088, x3_0 = 460049592286451131673533, x4_0 = 248740497852731070789836, x5_0 = 215860553446509596678948]
The polynomial system widehat{E^t} contains  69 equations in  61  variables
            "new_logs/Tumor/transcendence_205_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, x3_2, x4_2]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [b, x3_2, x4_3]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b}
Algebraically independent parameters among derivatives: {x3_2, x4_3}
	Adding ODEs: [diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t)]
	New system: [diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t)]

=== Input info ===
State variables:          [b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t)]
Input variables:          []
Parameters in equations:  [a, d, k3, k4, k5, k6, k7]
===================

memory used=23949.6MB, alloc=215.8MB, time=219.43
memory used=24076.6MB, alloc=215.8MB, time=220.48
	Adding new y-equations: [y_faux2_0 = x3_2, y_faux3_0 = x4_3]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a-x3_0-x4_0)*x2_1-x2_0*(-b_1*d+x3_1+x4_1))*k5+k4*x2_1-k6*x3_1-k6*x4_1-x1_1*k3+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a-x3_0-x4_0)*x2_2+(b_2*d-x3_2-x4_2)*x2_0-2*x2_1*(-b_1*d+x3_1+x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a-x3_0-x4_0)*x2_3+(3*b_1*x2_2+3*b_2*x2_1+b_3*x2_0)*d+(-x3_3-x4_3)*x2_0+(-3*x3_2-3*x4_2)*x2_1-3*x2_2*(x3_1+x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3)*x2_1+(-6*x3_2-6*x4_2)*x2_2-4*x2_3*(x3_1+x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(a-x3_0-x4_0)*x2_5+(-x3_5-x4_5)*x2_0+(-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3)*x2_2+(-10*x3_2-10*x4_2)*x2_3-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(a-x3_0-x4_0)*x2_6+(-x3_6-x4_6)*x2_0+(-6*x3_5-6*x4_5)*x2_1+(-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3)*x2_3+(-15*x3_2-15*x4_2)*x2_4-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(a-x3_0-x4_0)*x2_7+(-x3_7-x4_7)*x2_0+(-7*x3_6-7*x4_6)*x2_1+(-21*x3_5-21*x4_5)*x2_2+(-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, y_faux2_0-x3_2, y_faux3_0-x4_3]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = x3_2, y_faux3_0 = x4_3]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability:  591701046100000000000000
Random sample for the outputs and inputs is generated from  [a = 255118706707278241476960, d = 439771331126520794314273, k3 = 543161399526190513379110, k4 = 219949853472295491121601, k5 = 64681020954782466873745, k6 = 63004978937597219506365, k7 = 47950475805781669615899, b_0 = 306355407511894818666669, x1_0 = 31765658821212478118839, x2_0 = 286456493303627533629092, x3_0 = 72684448167739874677279, x4_0 = 469893204838769453659355, x5_0 = 213829024121073010728265]
The polynomial system widehat{E^t} contains  69 equations in  61  variables
            "new_logs/Tumor/transcendence_207_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, x3_2, x4_4]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b}
Algebraically independent parameters among derivatives: {x3_2, x4_4}
	Adding ODEs: [diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t)]
	New system: [diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t)]

=== Input info ===
State variables:          [b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t)]
Input variables:          []
Parameters in equations:  [a, d, k3, k4, k5, k6, k7]
===================

memory used=24241.3MB, alloc=215.8MB, time=222.02
	Adding new y-equations: [y_faux2_0 = x3_2, y_faux3_0 = x4_4]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a-x3_0-x4_0)*x2_1-x2_0*(-b_1*d+x3_1+x4_1))*k5+k4*x2_1-k6*x3_1-k6*x4_1-x1_1*k3+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a-x3_0-x4_0)*x2_2+(b_2*d-x3_2-x4_2)*x2_0-2*x2_1*(-b_1*d+x3_1+x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a-x3_0-x4_0)*x2_3+(3*b_1*x2_2+3*b_2*x2_1+b_3*x2_0)*d+(-x3_3-x4_3)*x2_0+(-3*x3_2-3*x4_2)*x2_1-3*x2_2*(x3_1+x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3)*x2_1+(-6*x3_2-6*x4_2)*x2_2-4*x2_3*(x3_1+x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(a-x3_0-x4_0)*x2_5+(-x3_5-x4_5)*x2_0+(-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3)*x2_2+(-10*x3_2-10*x4_2)*x2_3-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(a-x3_0-x4_0)*x2_6+(-x3_6-x4_6)*x2_0+(-6*x3_5-6*x4_5)*x2_1+(-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3)*x2_3+(-15*x3_2-15*x4_2)*x2_4-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(a-x3_0-x4_0)*x2_7+(-x3_7-x4_7)*x2_0+(-7*x3_6-7*x4_6)*x2_1+(-21*x3_5-21*x4_5)*x2_2+(-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, y_faux2_0-x3_2, y_faux3_0-x4_4]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = x3_2, y_faux3_0 = x4_4]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability:  591701046100000000000000
Random sample for the outputs and inputs is generated from  [a = 167370109571590004264180, d = 554294258841117961600152, k3 = 344853730573245924947849, k4 = 171005194561885568394408, k5 = 97738753394908703663607, k6 = 272545001295611277153303, k7 = 316230722240820041245923, b_0 = 125970880564425202185677, x1_0 = 363925520710917964619506, x2_0 = 453011238839241009850740, x3_0 = 160715717346429422463510, x4_0 = 53736020445457784865907, x5_0 = 514050264470260497146107]
The polynomial system widehat{E^t} contains  69 equations in  61  variables
            "new_logs/Tumor/transcendence_208_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, x3_2, x4_5]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b}
Algebraically independent parameters among derivatives: {x3_2, x4_5}
	Adding ODEs: [diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t)]
	New system: [diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t)]

=== Input info ===
State variables:          [b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t)]
Input variables:          []
Parameters in equations:  [a, d, k3, k4, k5, k6, k7]
===================

memory used=24396.9MB, alloc=215.8MB, time=223.51
memory used=24522.7MB, alloc=215.8MB, time=224.55
	Adding new y-equations: [y_faux2_0 = x3_2, y_faux3_0 = x4_5]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a-x3_0-x4_0)*x2_1-x2_0*(-b_1*d+x3_1+x4_1))*k5+k4*x2_1-k6*x3_1-k6*x4_1-x1_1*k3+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a-x3_0-x4_0)*x2_2+(b_2*d-x3_2-x4_2)*x2_0-2*x2_1*(-b_1*d+x3_1+x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a-x3_0-x4_0)*x2_3+(3*b_1*x2_2+3*b_2*x2_1+b_3*x2_0)*d+(-x3_3-x4_3)*x2_0+(-3*x3_2-3*x4_2)*x2_1-3*x2_2*(x3_1+x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3)*x2_1+(-6*x3_2-6*x4_2)*x2_2-4*x2_3*(x3_1+x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(a-x3_0-x4_0)*x2_5+(-x3_5-x4_5)*x2_0+(-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3)*x2_2+(-10*x3_2-10*x4_2)*x2_3-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(a-x3_0-x4_0)*x2_6+(-x3_6-x4_6)*x2_0+(-6*x3_5-6*x4_5)*x2_1+(-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3)*x2_3+(-15*x3_2-15*x4_2)*x2_4-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(a-x3_0-x4_0)*x2_7+(-x3_7-x4_7)*x2_0+(-7*x3_6-7*x4_6)*x2_1+(-21*x3_5-21*x4_5)*x2_2+(-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, y_faux2_0-x3_2, y_faux3_0-x4_5]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = x3_2, y_faux3_0 = x4_5]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability:  591701046100000000000000
Random sample for the outputs and inputs is generated from  [a = 387028835315029094567473, d = 398479688309465025417059, k3 = 63395606716096837736170, k4 = 165941536557221667931978, k5 = 367068199195743919643395, k6 = 306419326050931017411075, k7 = 356497897106049205165438, b_0 = 413456975749313391151191, x1_0 = 461262589603863674004545, x2_0 = 402971673549084276677950, x3_0 = 99729599899254456606036, x4_0 = 111881821202851021767149, x5_0 = 128545616109636763442299]
The polynomial system widehat{E^t} contains  69 equations in  61  variables
            "new_logs/Tumor/transcendence_209_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, x3_2, x4_6]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b}
Algebraically independent parameters among derivatives: {x3_2, x4_6}
	Adding ODEs: [diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t)]
	New system: [diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t)]

=== Input info ===
State variables:          [b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t)]
Input variables:          []
Parameters in equations:  [a, d, k3, k4, k5, k6, k7]
===================

memory used=24683.0MB, alloc=215.8MB, time=226.10
	Adding new y-equations: [y_faux2_0 = x3_2, y_faux3_0 = x4_6]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a-x3_0-x4_0)*x2_1-x2_0*(-b_1*d+x3_1+x4_1))*k5+k4*x2_1-k6*x3_1-k6*x4_1-x1_1*k3+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a-x3_0-x4_0)*x2_2+(b_2*d-x3_2-x4_2)*x2_0-2*x2_1*(-b_1*d+x3_1+x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a-x3_0-x4_0)*x2_3+(3*b_1*x2_2+3*b_2*x2_1+b_3*x2_0)*d+(-x3_3-x4_3)*x2_0+(-3*x3_2-3*x4_2)*x2_1-3*x2_2*(x3_1+x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3)*x2_1+(-6*x3_2-6*x4_2)*x2_2-4*x2_3*(x3_1+x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(a-x3_0-x4_0)*x2_5+(-x3_5-x4_5)*x2_0+(-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3)*x2_2+(-10*x3_2-10*x4_2)*x2_3-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(a-x3_0-x4_0)*x2_6+(-x3_6-x4_6)*x2_0+(-6*x3_5-6*x4_5)*x2_1+(-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3)*x2_3+(-15*x3_2-15*x4_2)*x2_4-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(a-x3_0-x4_0)*x2_7+(-x3_7-x4_7)*x2_0+(-7*x3_6-7*x4_6)*x2_1+(-21*x3_5-21*x4_5)*x2_2+(-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, y_faux2_0-x3_2, y_faux3_0-x4_6]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = x3_2, y_faux3_0 = x4_6]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability:  591701046100000000000000
Random sample for the outputs and inputs is generated from  [a = 168762036674288201679760, d = 384563415425169938418797, k3 = 1266293075112831331754, k4 = 237130079695744288389023, k5 = 278169484708796392116368, k6 = 567179754799174177141677, k7 = 141391635958796730666574, b_0 = 518744288151070707455999, x1_0 = 517291162191242221346686, x2_0 = 493324573724216267704250, x3_0 = 367892113818695765812803, x4_0 = 241309774260309337201329, x5_0 = 358083874791242973667281]
The polynomial system widehat{E^t} contains  69 equations in  61  variables
            "new_logs/Tumor/transcendence_210_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, x3_2, x4_7]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b}
Algebraically independent parameters among derivatives: {x3_2, x4_7}
	Adding ODEs: [diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t)]
	New system: [diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t)]

=== Input info ===
State variables:          [b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t)]
Input variables:          []
Parameters in equations:  [a, d, k3, k4, k5, k6, k7]
===================

memory used=24842.0MB, alloc=215.8MB, time=227.59
memory used=24967.5MB, alloc=215.8MB, time=228.56
	Adding new y-equations: [y_faux2_0 = x3_2, y_faux3_0 = x4_7]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a-x3_0-x4_0)*x2_1-x2_0*(-b_1*d+x3_1+x4_1))*k5+k4*x2_1-k6*x3_1-k6*x4_1-x1_1*k3+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a-x3_0-x4_0)*x2_2+(b_2*d-x3_2-x4_2)*x2_0-2*x2_1*(-b_1*d+x3_1+x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a-x3_0-x4_0)*x2_3+(3*b_1*x2_2+3*b_2*x2_1+b_3*x2_0)*d+(-x3_3-x4_3)*x2_0+(-3*x3_2-3*x4_2)*x2_1-3*x2_2*(x3_1+x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3)*x2_1+(-6*x3_2-6*x4_2)*x2_2-4*x2_3*(x3_1+x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(a-x3_0-x4_0)*x2_5+(-x3_5-x4_5)*x2_0+(-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3)*x2_2+(-10*x3_2-10*x4_2)*x2_3-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(a-x3_0-x4_0)*x2_6+(-x3_6-x4_6)*x2_0+(-6*x3_5-6*x4_5)*x2_1+(-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3)*x2_3+(-15*x3_2-15*x4_2)*x2_4-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(a-x3_0-x4_0)*x2_7+(-x3_7-x4_7)*x2_0+(-7*x3_6-7*x4_6)*x2_1+(-21*x3_5-21*x4_5)*x2_2+(-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, y_faux2_0-x3_2, y_faux3_0-x4_7]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = x3_2, y_faux3_0 = x4_7]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability:  591701046100000000000000
Random sample for the outputs and inputs is generated from  [a = 552731264944341661753237, d = 375779159925019038551987, k3 = 154643498216634175550685, k4 = 588738157502126068884841, k5 = 357323464644243727570767, k6 = 511894440183768453447853, k7 = 309389828182722854999210, b_0 = 460728476125165358071476, x1_0 = 385737893436603987415396, x2_0 = 361279623315000128907260, x3_0 = 219394958473810604237292, x4_0 = 86897924160933064566934, x5_0 = 462846020462617125808082]
The polynomial system widehat{E^t} contains  69 equations in  61  variables
            "new_logs/Tumor/transcendence_211_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, x3_3, x3_4]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b}
Algebraically independent parameters among derivatives: {x3_3, x3_4}
	Adding ODEs: [diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t)]
	New system: [diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t)]

=== Input info ===
State variables:          [b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t)]
Input variables:          []
Parameters in equations:  [a, d, k3, k4, k5, k6, k7]
===================

memory used=25129.4MB, alloc=215.8MB, time=230.09
	Adding new y-equations: [y_faux2_0 = x3_3, y_faux3_0 = x3_4]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a-x3_0-x4_0)*x2_1-x2_0*(-b_1*d+x3_1+x4_1))*k5+k4*x2_1-k6*x3_1-k6*x4_1-x1_1*k3+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a-x3_0-x4_0)*x2_2+(b_2*d-x3_2-x4_2)*x2_0-2*x2_1*(-b_1*d+x3_1+x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a-x3_0-x4_0)*x2_3+(3*b_1*x2_2+3*b_2*x2_1+b_3*x2_0)*d+(-x3_3-x4_3)*x2_0+(-3*x3_2-3*x4_2)*x2_1-3*x2_2*(x3_1+x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3)*x2_1+(-6*x3_2-6*x4_2)*x2_2-4*x2_3*(x3_1+x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(a-x3_0-x4_0)*x2_5+(-x3_5-x4_5)*x2_0+(-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3)*x2_2+(-10*x3_2-10*x4_2)*x2_3-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(a-x3_0-x4_0)*x2_6+(-x3_6-x4_6)*x2_0+(-6*x3_5-6*x4_5)*x2_1+(-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3)*x2_3+(-15*x3_2-15*x4_2)*x2_4-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(a-x3_0-x4_0)*x2_7+(-x3_7-x4_7)*x2_0+(-7*x3_6-7*x4_6)*x2_1+(-21*x3_5-21*x4_5)*x2_2+(-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, y_faux2_0-x3_3, y_faux3_0-x3_4]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = x3_3, y_faux3_0 = x3_4]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability:  591701046100000000000000
Random sample for the outputs and inputs is generated from  [a = 172435217563843234227454, d = 280929859347251673125497, k3 = 586794208191025157144950, k4 = 549102537700273840831560, k5 = 137938463210195724210075, k6 = 545550846054024372235433, k7 = 296976435890149651502277, b_0 = 89853889538804499039902, x1_0 = 356255045560261617207510, x2_0 = 348331290229702682683857, x3_0 = 86802867309196051397163, x4_0 = 176931559692282154945040, x5_0 = 99253329606049135176012]
The polynomial system widehat{E^t} contains  69 equations in  61  variables
            "new_logs/Tumor/transcendence_212_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, x3_3, x3_5]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b}
Algebraically independent parameters among derivatives: {x3_3, x3_5}
	Adding ODEs: [diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t)]
	New system: [diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t)]

=== Input info ===
State variables:          [b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t)]
Input variables:          []
Parameters in equations:  [a, d, k3, k4, k5, k6, k7]
===================

memory used=25290.7MB, alloc=215.8MB, time=231.60
	Adding new y-equations: [y_faux2_0 = x3_3, y_faux3_0 = x3_5]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a-x3_0-x4_0)*x2_1-x2_0*(-b_1*d+x3_1+x4_1))*k5+k4*x2_1-k6*x3_1-k6*x4_1-x1_1*k3+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a-x3_0-x4_0)*x2_2+(b_2*d-x3_2-x4_2)*x2_0-2*x2_1*(-b_1*d+x3_1+x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a-x3_0-x4_0)*x2_3+(3*b_1*x2_2+3*b_2*x2_1+b_3*x2_0)*d+(-x3_3-x4_3)*x2_0+(-3*x3_2-3*x4_2)*x2_1-3*x2_2*(x3_1+x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3)*x2_1+(-6*x3_2-6*x4_2)*x2_2-4*x2_3*(x3_1+x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(a-x3_0-x4_0)*x2_5+(-x3_5-x4_5)*x2_0+(-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3)*x2_2+(-10*x3_2-10*x4_2)*x2_3-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(a-x3_0-x4_0)*x2_6+(-x3_6-x4_6)*x2_0+(-6*x3_5-6*x4_5)*x2_1+(-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3)*x2_3+(-15*x3_2-15*x4_2)*x2_4-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(a-x3_0-x4_0)*x2_7+(-x3_7-x4_7)*x2_0+(-7*x3_6-7*x4_6)*x2_1+(-21*x3_5-21*x4_5)*x2_2+(-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, y_faux2_0-x3_3, y_faux3_0-x3_5]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = x3_3, y_faux3_0 = x3_5]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability:  591701046100000000000000
Random sample for the outputs and inputs is generated from  [a = 177467656557602735691655, d = 338815853892255400017687, k3 = 38035271735760771316942, k4 = 121987915322248496669420, k5 = 479122844098013073247743, k6 = 84183296598234995209648, k7 = 480422254493157933101371, b_0 = 250042882201866296977934, x1_0 = 552223455013788636982936, x2_0 = 526322004623510566344198, x3_0 = 149365830198088661907644, x4_0 = 27204785018264326477695, x5_0 = 422871720552989805055189]
The polynomial system widehat{E^t} contains  69 equations in  61  variables
            "new_logs/Tumor/transcendence_213_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, x3_3, x3_6]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b}
Algebraically independent parameters among derivatives: {x3_3, x3_6}
	Adding ODEs: [diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t)]
	New system: [diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t)]

=== Input info ===
State variables:          [b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t)]
Input variables:          []
Parameters in equations:  [a, d, k3, k4, k5, k6, k7]
===================

memory used=25462.8MB, alloc=215.8MB, time=233.16
memory used=25603.4MB, alloc=215.8MB, time=234.32
	Adding new y-equations: [y_faux2_0 = x3_3, y_faux3_0 = x3_6]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a-x3_0-x4_0)*x2_1-x2_0*(-b_1*d+x3_1+x4_1))*k5+k4*x2_1-k6*x3_1-k6*x4_1-x1_1*k3+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a-x3_0-x4_0)*x2_2+(b_2*d-x3_2-x4_2)*x2_0-2*x2_1*(-b_1*d+x3_1+x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a-x3_0-x4_0)*x2_3+(3*b_1*x2_2+3*b_2*x2_1+b_3*x2_0)*d+(-x3_3-x4_3)*x2_0+(-3*x3_2-3*x4_2)*x2_1-3*x2_2*(x3_1+x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3)*x2_1+(-6*x3_2-6*x4_2)*x2_2-4*x2_3*(x3_1+x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(a-x3_0-x4_0)*x2_5+(-x3_5-x4_5)*x2_0+(-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3)*x2_2+(-10*x3_2-10*x4_2)*x2_3-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(a-x3_0-x4_0)*x2_6+(-x3_6-x4_6)*x2_0+(-6*x3_5-6*x4_5)*x2_1+(-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3)*x2_3+(-15*x3_2-15*x4_2)*x2_4-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(a-x3_0-x4_0)*x2_7+(-x3_7-x4_7)*x2_0+(-7*x3_6-7*x4_6)*x2_1+(-21*x3_5-21*x4_5)*x2_2+(-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, y_faux2_0-x3_3, y_faux3_0-x3_6]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = x3_3, y_faux3_0 = x3_6]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability:  591701046100000000000000
Random sample for the outputs and inputs is generated from  [a = 154150615525545222906175, d = 21117317217014728296226, k3 = 559370447817370869375231, k4 = 1816269308244048676523, k5 = 247013291084020377072365, k6 = 200485521223414820140571, k7 = 335415309953291179074895, b_0 = 458721624554673990753647, x1_0 = 124946914946176116382047, x2_0 = 188485806577329672698495, x3_0 = 523713371367267911224869, x4_0 = 340218768125649853664317, x5_0 = 226498404041224394893473]
The polynomial system widehat{E^t} contains  69 equations in  61  variables
            "new_logs/Tumor/transcendence_214_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, x3_3, x3_7]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b}
Algebraically independent parameters among derivatives: {x3_3, x3_7}
	Adding ODEs: [diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t)]
	New system: [diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t)]

=== Input info ===
State variables:          [b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t)]
Input variables:          []
Parameters in equations:  [a, d, k3, k4, k5, k6, k7]
===================

memory used=25768.1MB, alloc=215.8MB, time=235.88
	Adding new y-equations: [y_faux2_0 = x3_3, y_faux3_0 = x3_7]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a-x3_0-x4_0)*x2_1-x2_0*(-b_1*d+x3_1+x4_1))*k5+k4*x2_1-k6*x3_1-k6*x4_1-x1_1*k3+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a-x3_0-x4_0)*x2_2+(b_2*d-x3_2-x4_2)*x2_0-2*x2_1*(-b_1*d+x3_1+x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a-x3_0-x4_0)*x2_3+(3*b_1*x2_2+3*b_2*x2_1+b_3*x2_0)*d+(-x3_3-x4_3)*x2_0+(-3*x3_2-3*x4_2)*x2_1-3*x2_2*(x3_1+x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3)*x2_1+(-6*x3_2-6*x4_2)*x2_2-4*x2_3*(x3_1+x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(a-x3_0-x4_0)*x2_5+(-x3_5-x4_5)*x2_0+(-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3)*x2_2+(-10*x3_2-10*x4_2)*x2_3-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(a-x3_0-x4_0)*x2_6+(-x3_6-x4_6)*x2_0+(-6*x3_5-6*x4_5)*x2_1+(-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3)*x2_3+(-15*x3_2-15*x4_2)*x2_4-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(a-x3_0-x4_0)*x2_7+(-x3_7-x4_7)*x2_0+(-7*x3_6-7*x4_6)*x2_1+(-21*x3_5-21*x4_5)*x2_2+(-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, y_faux2_0-x3_3, y_faux3_0-x3_7]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = x3_3, y_faux3_0 = x3_7]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability:  591701046100000000000000
Random sample for the outputs and inputs is generated from  [a = 434394816436828340019684, d = 484686175890256545281060, k3 = 522383470604598320250671, k4 = 325033574700589722017850, k5 = 556576075810120378771657, k6 = 479452090468641695408626, k7 = 538736262203022488739152, b_0 = 263621765944581137239050, x1_0 = 82022287009375453418807, x2_0 = 355262961011409019516547, x3_0 = 352290140023254349106434, x4_0 = 138732989223708449844388, x5_0 = 147830761739493068301624]
The polynomial system widehat{E^t} contains  69 equations in  61  variables
            "new_logs/Tumor/transcendence_215_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, x3_3, x4(0)]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b}
Algebraically independent parameters among derivatives: {x3_3, x4(0)}
	Adding ODEs: [diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t)]
	New system: [diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t)]

=== Input info ===
State variables:          [b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t)]
Input variables:          []
Parameters in equations:  [a, d, k3, k4, k5, k6, k7]
===================

memory used=25936.9MB, alloc=215.8MB, time=237.48
memory used=26060.9MB, alloc=215.8MB, time=238.47
	Adding new y-equations: [y_faux2_0 = x3_3, y_faux3_0 = x4_0]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a-x3_0-x4_0)*x2_1-x2_0*(-b_1*d+x3_1+x4_1))*k5+k4*x2_1-k6*x3_1-k6*x4_1-x1_1*k3+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a-x3_0-x4_0)*x2_2+(b_2*d-x3_2-x4_2)*x2_0-2*x2_1*(-b_1*d+x3_1+x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a-x3_0-x4_0)*x2_3+(3*b_1*x2_2+3*b_2*x2_1+b_3*x2_0)*d+(-x3_3-x4_3)*x2_0+(-3*x3_2-3*x4_2)*x2_1-3*x2_2*(x3_1+x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3)*x2_1+(-6*x3_2-6*x4_2)*x2_2-4*x2_3*(x3_1+x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(a-x3_0-x4_0)*x2_5+(-x3_5-x4_5)*x2_0+(-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3)*x2_2+(-10*x3_2-10*x4_2)*x2_3-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(a-x3_0-x4_0)*x2_6+(-x3_6-x4_6)*x2_0+(-6*x3_5-6*x4_5)*x2_1+(-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3)*x2_3+(-15*x3_2-15*x4_2)*x2_4-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(a-x3_0-x4_0)*x2_7+(-x3_7-x4_7)*x2_0+(-7*x3_6-7*x4_6)*x2_1+(-21*x3_5-21*x4_5)*x2_2+(-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, y_faux2_0-x3_3, y_faux3_0-x4_0]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = x3_3, y_faux3_0 = x4_0]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability:  591701046100000000000000
Random sample for the outputs and inputs is generated from  [a = 81411903083148115479750, d = 546577105325090604682105, k3 = 388540389816191812879293, k4 = 485798165960589000156984, k5 = 316770560055913703131725, k6 = 114231741323169372398488, k7 = 144068534618258752980077, b_0 = 551870262978722024574024, x1_0 = 379320015574081038338936, x2_0 = 395768434468270159358368, x3_0 = 576684457261579066946776, x4_0 = 504450537875661661287463, x5_0 = 278767105557059055963910]
The polynomial system widehat{E^t} contains  69 equations in  61  variables
            "new_logs/Tumor/transcendence_216_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, x3_3, x4_1]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b}
Algebraically independent parameters among derivatives: {x3_3, x4_1}
	Adding ODEs: [diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t)]
	New system: [diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t)]

=== Input info ===
State variables:          [b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t)]
Input variables:          []
Parameters in equations:  [a, d, k3, k4, k5, k6, k7]
===================

memory used=26226.4MB, alloc=215.8MB, time=240.01
	Adding new y-equations: [y_faux2_0 = x3_3, y_faux3_0 = x4_1]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a-x3_0-x4_0)*x2_1-x2_0*(-b_1*d+x3_1+x4_1))*k5+k4*x2_1-k6*x3_1-k6*x4_1-x1_1*k3+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a-x3_0-x4_0)*x2_2+(b_2*d-x3_2-x4_2)*x2_0-2*x2_1*(-b_1*d+x3_1+x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a-x3_0-x4_0)*x2_3+(3*b_1*x2_2+3*b_2*x2_1+b_3*x2_0)*d+(-x3_3-x4_3)*x2_0+(-3*x3_2-3*x4_2)*x2_1-3*x2_2*(x3_1+x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3)*x2_1+(-6*x3_2-6*x4_2)*x2_2-4*x2_3*(x3_1+x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(a-x3_0-x4_0)*x2_5+(-x3_5-x4_5)*x2_0+(-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3)*x2_2+(-10*x3_2-10*x4_2)*x2_3-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(a-x3_0-x4_0)*x2_6+(-x3_6-x4_6)*x2_0+(-6*x3_5-6*x4_5)*x2_1+(-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3)*x2_3+(-15*x3_2-15*x4_2)*x2_4-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(a-x3_0-x4_0)*x2_7+(-x3_7-x4_7)*x2_0+(-7*x3_6-7*x4_6)*x2_1+(-21*x3_5-21*x4_5)*x2_2+(-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, y_faux2_0-x3_3, y_faux3_0-x4_1]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = x3_3, y_faux3_0 = x4_1]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability:  591701046100000000000000
Random sample for the outputs and inputs is generated from  [a = 8128323820172945695816, d = 274236791008485140985877, k3 = 52243145283310020267129, k4 = 17459335272391550328854, k5 = 383235503501118693419581, k6 = 368189391925103437903353, k7 = 386940481095235739046669, b_0 = 421438640133150800693054, x1_0 = 404828739016296285451320, x2_0 = 147932999091575493870308, x3_0 = 366385694149172572479798, x4_0 = 312206864785055863590993, x5_0 = 206462479444174762455232]
The polynomial system widehat{E^t} contains  69 equations in  61  variables
            "new_logs/Tumor/transcendence_217_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, x3_3, x4_2]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b}
Algebraically independent parameters among derivatives: {x3_3, x4_2}
	Adding ODEs: [diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t)]
	New system: [diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t)]

=== Input info ===
State variables:          [b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t)]
Input variables:          []
Parameters in equations:  [a, d, k3, k4, k5, k6, k7]
===================

memory used=26391.3MB, alloc=215.8MB, time=241.59
	Adding new y-equations: [y_faux2_0 = x3_3, y_faux3_0 = x4_2]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a-x3_0-x4_0)*x2_1-x2_0*(-b_1*d+x3_1+x4_1))*k5+k4*x2_1-k6*x3_1-k6*x4_1-x1_1*k3+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a-x3_0-x4_0)*x2_2+(b_2*d-x3_2-x4_2)*x2_0-2*x2_1*(-b_1*d+x3_1+x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a-x3_0-x4_0)*x2_3+(3*b_1*x2_2+3*b_2*x2_1+b_3*x2_0)*d+(-x3_3-x4_3)*x2_0+(-3*x3_2-3*x4_2)*x2_1-3*x2_2*(x3_1+x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3)*x2_1+(-6*x3_2-6*x4_2)*x2_2-4*x2_3*(x3_1+x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(a-x3_0-x4_0)*x2_5+(-x3_5-x4_5)*x2_0+(-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3)*x2_2+(-10*x3_2-10*x4_2)*x2_3-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(a-x3_0-x4_0)*x2_6+(-x3_6-x4_6)*x2_0+(-6*x3_5-6*x4_5)*x2_1+(-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3)*x2_3+(-15*x3_2-15*x4_2)*x2_4-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(a-x3_0-x4_0)*x2_7+(-x3_7-x4_7)*x2_0+(-7*x3_6-7*x4_6)*x2_1+(-21*x3_5-21*x4_5)*x2_2+(-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, y_faux2_0-x3_3, y_faux3_0-x4_2]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = x3_3, y_faux3_0 = x4_2]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability:  591701046100000000000000
Random sample for the outputs and inputs is generated from  [a = 553880700155213917736514, d = 369135747193409896909593, k3 = 378502608057893763530454, k4 = 289329557934621965897741, k5 = 298741760078073558418167, k6 = 376243778692916634136285, k7 = 194902858686950393712216, b_0 = 475295887575908867377882, x1_0 = 14157979464176339569944, x2_0 = 387719957248021435987617, x3_0 = 575075344711063118976159, x4_0 = 539755466358575068878197, x5_0 = 37127237227043477473255]
The polynomial system widehat{E^t} contains  69 equations in  61  variables
            "new_logs/Tumor/transcendence_218_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, x3_3, x4_3]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [b, x3_3, x4_4]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b}
Algebraically independent parameters among derivatives: {x3_3, x4_4}
	Adding ODEs: [diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t)]
	New system: [diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t)]

=== Input info ===
State variables:          [b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t)]
Input variables:          []
Parameters in equations:  [a, d, k3, k4, k5, k6, k7]
===================

memory used=26567.3MB, alloc=215.8MB, time=243.24
memory used=26709.9MB, alloc=215.8MB, time=244.44
	Adding new y-equations: [y_faux2_0 = x3_3, y_faux3_0 = x4_4]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a-x3_0-x4_0)*x2_1-x2_0*(-b_1*d+x3_1+x4_1))*k5+k4*x2_1-k6*x3_1-k6*x4_1-x1_1*k3+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a-x3_0-x4_0)*x2_2+(b_2*d-x3_2-x4_2)*x2_0-2*x2_1*(-b_1*d+x3_1+x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a-x3_0-x4_0)*x2_3+(3*b_1*x2_2+3*b_2*x2_1+b_3*x2_0)*d+(-x3_3-x4_3)*x2_0+(-3*x3_2-3*x4_2)*x2_1-3*x2_2*(x3_1+x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3)*x2_1+(-6*x3_2-6*x4_2)*x2_2-4*x2_3*(x3_1+x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(a-x3_0-x4_0)*x2_5+(-x3_5-x4_5)*x2_0+(-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3)*x2_2+(-10*x3_2-10*x4_2)*x2_3-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(a-x3_0-x4_0)*x2_6+(-x3_6-x4_6)*x2_0+(-6*x3_5-6*x4_5)*x2_1+(-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3)*x2_3+(-15*x3_2-15*x4_2)*x2_4-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(a-x3_0-x4_0)*x2_7+(-x3_7-x4_7)*x2_0+(-7*x3_6-7*x4_6)*x2_1+(-21*x3_5-21*x4_5)*x2_2+(-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, y_faux2_0-x3_3, y_faux3_0-x4_4]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = x3_3, y_faux3_0 = x4_4]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability:  591701046100000000000000
Random sample for the outputs and inputs is generated from  [a = 428771323579136301829641, d = 106056893098008963604863, k3 = 48549614686438488290540, k4 = 333538907295963348080904, k5 = 470395515422059262143699, k6 = 15592895358228116480515, k7 = 196328691418508601353928, b_0 = 374845287022348292952875, x1_0 = 50515360858933933379689, x2_0 = 60854640730312556699223, x3_0 = 38151511120265697862203, x4_0 = 160890263913050922433833, x5_0 = 47810115517289625257363]
The polynomial system widehat{E^t} contains  69 equations in  61  variables
            "new_logs/Tumor/transcendence_220_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, x3_3, x4_5]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b}
Algebraically independent parameters among derivatives: {x3_3, x4_5}
	Adding ODEs: [diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t)]
	New system: [diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t)]

=== Input info ===
State variables:          [b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t)]
Input variables:          []
Parameters in equations:  [a, d, k3, k4, k5, k6, k7]
===================

memory used=26881.7MB, alloc=215.8MB, time=246.01
	Adding new y-equations: [y_faux2_0 = x3_3, y_faux3_0 = x4_5]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a-x3_0-x4_0)*x2_1-x2_0*(-b_1*d+x3_1+x4_1))*k5+k4*x2_1-k6*x3_1-k6*x4_1-x1_1*k3+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a-x3_0-x4_0)*x2_2+(b_2*d-x3_2-x4_2)*x2_0-2*x2_1*(-b_1*d+x3_1+x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a-x3_0-x4_0)*x2_3+(3*b_1*x2_2+3*b_2*x2_1+b_3*x2_0)*d+(-x3_3-x4_3)*x2_0+(-3*x3_2-3*x4_2)*x2_1-3*x2_2*(x3_1+x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3)*x2_1+(-6*x3_2-6*x4_2)*x2_2-4*x2_3*(x3_1+x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(a-x3_0-x4_0)*x2_5+(-x3_5-x4_5)*x2_0+(-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3)*x2_2+(-10*x3_2-10*x4_2)*x2_3-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(a-x3_0-x4_0)*x2_6+(-x3_6-x4_6)*x2_0+(-6*x3_5-6*x4_5)*x2_1+(-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3)*x2_3+(-15*x3_2-15*x4_2)*x2_4-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(a-x3_0-x4_0)*x2_7+(-x3_7-x4_7)*x2_0+(-7*x3_6-7*x4_6)*x2_1+(-21*x3_5-21*x4_5)*x2_2+(-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, y_faux2_0-x3_3, y_faux3_0-x4_5]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = x3_3, y_faux3_0 = x4_5]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability:  591701046100000000000000
Random sample for the outputs and inputs is generated from  [a = 144333395651638914962285, d = 289602230711300890727291, k3 = 485594538921056318129563, k4 = 438895294724723387900197, k5 = 60110510393080120232037, k6 = 167974990318760935270490, k7 = 506049096229321564434129, b_0 = 166787450324597913080488, x1_0 = 574528880601830594238418, x2_0 = 34269754631387569461308, x3_0 = 146331075189017296886159, x4_0 = 556172603560672361850672, x5_0 = 296811286494041990249167]
The polynomial system widehat{E^t} contains  69 equations in  61  variables
            "new_logs/Tumor/transcendence_221_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, x3_3, x4_6]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b}
Algebraically independent parameters among derivatives: {x3_3, x4_6}
	Adding ODEs: [diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t)]
	New system: [diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t)]

=== Input info ===
State variables:          [b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t)]
Input variables:          []
Parameters in equations:  [a, d, k3, k4, k5, k6, k7]
===================

memory used=27045.5MB, alloc=215.8MB, time=247.52
memory used=27170.6MB, alloc=215.8MB, time=248.44
	Adding new y-equations: [y_faux2_0 = x3_3, y_faux3_0 = x4_6]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a-x3_0-x4_0)*x2_1-x2_0*(-b_1*d+x3_1+x4_1))*k5+k4*x2_1-k6*x3_1-k6*x4_1-x1_1*k3+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a-x3_0-x4_0)*x2_2+(b_2*d-x3_2-x4_2)*x2_0-2*x2_1*(-b_1*d+x3_1+x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a-x3_0-x4_0)*x2_3+(3*b_1*x2_2+3*b_2*x2_1+b_3*x2_0)*d+(-x3_3-x4_3)*x2_0+(-3*x3_2-3*x4_2)*x2_1-3*x2_2*(x3_1+x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3)*x2_1+(-6*x3_2-6*x4_2)*x2_2-4*x2_3*(x3_1+x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(a-x3_0-x4_0)*x2_5+(-x3_5-x4_5)*x2_0+(-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3)*x2_2+(-10*x3_2-10*x4_2)*x2_3-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(a-x3_0-x4_0)*x2_6+(-x3_6-x4_6)*x2_0+(-6*x3_5-6*x4_5)*x2_1+(-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3)*x2_3+(-15*x3_2-15*x4_2)*x2_4-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(a-x3_0-x4_0)*x2_7+(-x3_7-x4_7)*x2_0+(-7*x3_6-7*x4_6)*x2_1+(-21*x3_5-21*x4_5)*x2_2+(-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, y_faux2_0-x3_3, y_faux3_0-x4_6]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = x3_3, y_faux3_0 = x4_6]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability:  591701046100000000000000
Random sample for the outputs and inputs is generated from  [a = 490343057867633732217735, d = 396654232047345121234640, k3 = 237618701792964158849849, k4 = 34858002057433713976619, k5 = 79372514610773419577612, k6 = 434803310218262369765423, k7 = 421345119654304585591776, b_0 = 201513910350715745493970, x1_0 = 328786500557897951671518, x2_0 = 101266177228283605990962, x3_0 = 274159037952815296343732, x4_0 = 122472611080329098048295, x5_0 = 345892463836509759058694]
The polynomial system widehat{E^t} contains  69 equations in  61  variables
            "new_logs/Tumor/transcendence_222_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, x3_3, x4_7]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b}
Algebraically independent parameters among derivatives: {x3_3, x4_7}
	Adding ODEs: [diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t)]
	New system: [diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t)]

=== Input info ===
State variables:          [b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t)]
Input variables:          []
Parameters in equations:  [a, d, k3, k4, k5, k6, k7]
===================

memory used=27335.1MB, alloc=215.8MB, time=250.00
	Adding new y-equations: [y_faux2_0 = x3_3, y_faux3_0 = x4_7]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a-x3_0-x4_0)*x2_1-x2_0*(-b_1*d+x3_1+x4_1))*k5+k4*x2_1-k6*x3_1-k6*x4_1-x1_1*k3+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a-x3_0-x4_0)*x2_2+(b_2*d-x3_2-x4_2)*x2_0-2*x2_1*(-b_1*d+x3_1+x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a-x3_0-x4_0)*x2_3+(3*b_1*x2_2+3*b_2*x2_1+b_3*x2_0)*d+(-x3_3-x4_3)*x2_0+(-3*x3_2-3*x4_2)*x2_1-3*x2_2*(x3_1+x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3)*x2_1+(-6*x3_2-6*x4_2)*x2_2-4*x2_3*(x3_1+x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(a-x3_0-x4_0)*x2_5+(-x3_5-x4_5)*x2_0+(-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3)*x2_2+(-10*x3_2-10*x4_2)*x2_3-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(a-x3_0-x4_0)*x2_6+(-x3_6-x4_6)*x2_0+(-6*x3_5-6*x4_5)*x2_1+(-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3)*x2_3+(-15*x3_2-15*x4_2)*x2_4-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(a-x3_0-x4_0)*x2_7+(-x3_7-x4_7)*x2_0+(-7*x3_6-7*x4_6)*x2_1+(-21*x3_5-21*x4_5)*x2_2+(-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, y_faux2_0-x3_3, y_faux3_0-x4_7]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = x3_3, y_faux3_0 = x4_7]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability:  591701046100000000000000
Random sample for the outputs and inputs is generated from  [a = 131740017808277212067466, d = 169963229088474702563419, k3 = 540895346298478902764678, k4 = 204716206679644250335179, k5 = 96898975853718844302722, k6 = 154390223370705074419768, k7 = 17881109866181887803310, b_0 = 46776111321730674595295, x1_0 = 204170223472154908755275, x2_0 = 392309842253980868494696, x3_0 = 153881845861953942070700, x4_0 = 437657064338537290762119, x5_0 = 232048987373825213900860]
The polynomial system widehat{E^t} contains  69 equations in  61  variables
            "new_logs/Tumor/transcendence_223_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, x3_4, x3_5]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b}
Algebraically independent parameters among derivatives: {x3_4, x3_5}
	Adding ODEs: [diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t)]
	New system: [diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t)]

=== Input info ===
State variables:          [b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t)]
Input variables:          []
Parameters in equations:  [a, d, k3, k4, k5, k6, k7]
===================

memory used=27503.2MB, alloc=215.8MB, time=251.54
	Adding new y-equations: [y_faux2_0 = x3_4, y_faux3_0 = x3_5]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a-x3_0-x4_0)*x2_1-x2_0*(-b_1*d+x3_1+x4_1))*k5+k4*x2_1-k6*x3_1-k6*x4_1-x1_1*k3+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a-x3_0-x4_0)*x2_2+(b_2*d-x3_2-x4_2)*x2_0-2*x2_1*(-b_1*d+x3_1+x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a-x3_0-x4_0)*x2_3+(3*b_1*x2_2+3*b_2*x2_1+b_3*x2_0)*d+(-x3_3-x4_3)*x2_0+(-3*x3_2-3*x4_2)*x2_1-3*x2_2*(x3_1+x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3)*x2_1+(-6*x3_2-6*x4_2)*x2_2-4*x2_3*(x3_1+x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(a-x3_0-x4_0)*x2_5+(-x3_5-x4_5)*x2_0+(-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3)*x2_2+(-10*x3_2-10*x4_2)*x2_3-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(a-x3_0-x4_0)*x2_6+(-x3_6-x4_6)*x2_0+(-6*x3_5-6*x4_5)*x2_1+(-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3)*x2_3+(-15*x3_2-15*x4_2)*x2_4-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(a-x3_0-x4_0)*x2_7+(-x3_7-x4_7)*x2_0+(-7*x3_6-7*x4_6)*x2_1+(-21*x3_5-21*x4_5)*x2_2+(-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, y_faux2_0-x3_4, y_faux3_0-x3_5]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = x3_4, y_faux3_0 = x3_5]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability:  591701046100000000000000
Random sample for the outputs and inputs is generated from  [a = 247141039596038883615855, d = 196053378396060199280389, k3 = 308959702771351367126159, k4 = 583103241598061228496852, k5 = 331581977613450837984086, k6 = 2393747473885982982041, k7 = 17487110209630458123624, b_0 = 89033139615496266048351, x1_0 = 304672961260496812769998, x2_0 = 409624267514516446755645, x3_0 = 258868050538714575140272, x4_0 = 556194724773728023862159, x5_0 = 59717472762179697467553]
The polynomial system widehat{E^t} contains  69 equations in  61  variables
            "new_logs/Tumor/transcendence_224_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, x3_4, x3_6]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b}
Algebraically independent parameters among derivatives: {x3_4, x3_6}
	Adding ODEs: [diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t)]
	New system: [diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t)]

=== Input info ===
State variables:          [b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t)]
Input variables:          []
Parameters in equations:  [a, d, k3, k4, k5, k6, k7]
===================

memory used=27678.8MB, alloc=215.8MB, time=253.09
memory used=27809.4MB, alloc=215.8MB, time=254.14
	Adding new y-equations: [y_faux2_0 = x3_4, y_faux3_0 = x3_6]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a-x3_0-x4_0)*x2_1-x2_0*(-b_1*d+x3_1+x4_1))*k5+k4*x2_1-k6*x3_1-k6*x4_1-x1_1*k3+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a-x3_0-x4_0)*x2_2+(b_2*d-x3_2-x4_2)*x2_0-2*x2_1*(-b_1*d+x3_1+x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a-x3_0-x4_0)*x2_3+(3*b_1*x2_2+3*b_2*x2_1+b_3*x2_0)*d+(-x3_3-x4_3)*x2_0+(-3*x3_2-3*x4_2)*x2_1-3*x2_2*(x3_1+x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3)*x2_1+(-6*x3_2-6*x4_2)*x2_2-4*x2_3*(x3_1+x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(a-x3_0-x4_0)*x2_5+(-x3_5-x4_5)*x2_0+(-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3)*x2_2+(-10*x3_2-10*x4_2)*x2_3-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(a-x3_0-x4_0)*x2_6+(-x3_6-x4_6)*x2_0+(-6*x3_5-6*x4_5)*x2_1+(-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3)*x2_3+(-15*x3_2-15*x4_2)*x2_4-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(a-x3_0-x4_0)*x2_7+(-x3_7-x4_7)*x2_0+(-7*x3_6-7*x4_6)*x2_1+(-21*x3_5-21*x4_5)*x2_2+(-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, y_faux2_0-x3_4, y_faux3_0-x3_6]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = x3_4, y_faux3_0 = x3_6]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability:  591701046100000000000000
Random sample for the outputs and inputs is generated from  [a = 14683438051620491350963, d = 591430501647582462883110, k3 = 283674490128987309445857, k4 = 228527031699649262607024, k5 = 330777023798707604240298, k6 = 182514671892825755602351, k7 = 128501991282344224415928, b_0 = 198016473716568983166016, x1_0 = 111717330344383513781540, x2_0 = 483891498509988693619425, x3_0 = 483608817818074382899592, x4_0 = 439269272968493300839520, x5_0 = 330653893854517571824878]
The polynomial system widehat{E^t} contains  69 equations in  61  variables
            "new_logs/Tumor/transcendence_225_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, x3_4, x3_7]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b}
Algebraically independent parameters among derivatives: {x3_4, x3_7}
	Adding ODEs: [diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t)]
	New system: [diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t)]

=== Input info ===
State variables:          [b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t)]
Input variables:          []
Parameters in equations:  [a, d, k3, k4, k5, k6, k7]
===================

memory used=27966.7MB, alloc=215.8MB, time=255.67
	Adding new y-equations: [y_faux2_0 = x3_4, y_faux3_0 = x3_7]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a-x3_0-x4_0)*x2_1-x2_0*(-b_1*d+x3_1+x4_1))*k5+k4*x2_1-k6*x3_1-k6*x4_1-x1_1*k3+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a-x3_0-x4_0)*x2_2+(b_2*d-x3_2-x4_2)*x2_0-2*x2_1*(-b_1*d+x3_1+x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a-x3_0-x4_0)*x2_3+(3*b_1*x2_2+3*b_2*x2_1+b_3*x2_0)*d+(-x3_3-x4_3)*x2_0+(-3*x3_2-3*x4_2)*x2_1-3*x2_2*(x3_1+x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3)*x2_1+(-6*x3_2-6*x4_2)*x2_2-4*x2_3*(x3_1+x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(a-x3_0-x4_0)*x2_5+(-x3_5-x4_5)*x2_0+(-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3)*x2_2+(-10*x3_2-10*x4_2)*x2_3-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(a-x3_0-x4_0)*x2_6+(-x3_6-x4_6)*x2_0+(-6*x3_5-6*x4_5)*x2_1+(-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3)*x2_3+(-15*x3_2-15*x4_2)*x2_4-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(a-x3_0-x4_0)*x2_7+(-x3_7-x4_7)*x2_0+(-7*x3_6-7*x4_6)*x2_1+(-21*x3_5-21*x4_5)*x2_2+(-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, y_faux2_0-x3_4, y_faux3_0-x3_7]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = x3_4, y_faux3_0 = x3_7]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability:  591701046100000000000000
Random sample for the outputs and inputs is generated from  [a = 517717757060726096963968, d = 90244684159551998876533, k3 = 440829360193003699501861, k4 = 504724519825160513832237, k5 = 517933765242538157095507, k6 = 186708456086675238365538, k7 = 77073062256817087895551, b_0 = 226129466647131673926711, x1_0 = 421015261837886002920165, x2_0 = 425999591139976216197030, x3_0 = 262292248713511446708961, x4_0 = 287663699534126011540383, x5_0 = 546657021274636971697129]
The polynomial system widehat{E^t} contains  69 equations in  61  variables
            "new_logs/Tumor/transcendence_226_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, x3_4, x4(0)]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b}
Algebraically independent parameters among derivatives: {x3_4, x4(0)}
	Adding ODEs: [diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t)]
	New system: [diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t)]

=== Input info ===
State variables:          [b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t)]
Input variables:          []
Parameters in equations:  [a, d, k3, k4, k5, k6, k7]
===================

memory used=28122.4MB, alloc=215.8MB, time=257.18
memory used=28250.0MB, alloc=215.8MB, time=258.20
	Adding new y-equations: [y_faux2_0 = x3_4, y_faux3_0 = x4_0]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a-x3_0-x4_0)*x2_1-x2_0*(-b_1*d+x3_1+x4_1))*k5+k4*x2_1-k6*x3_1-k6*x4_1-x1_1*k3+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a-x3_0-x4_0)*x2_2+(b_2*d-x3_2-x4_2)*x2_0-2*x2_1*(-b_1*d+x3_1+x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a-x3_0-x4_0)*x2_3+(3*b_1*x2_2+3*b_2*x2_1+b_3*x2_0)*d+(-x3_3-x4_3)*x2_0+(-3*x3_2-3*x4_2)*x2_1-3*x2_2*(x3_1+x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3)*x2_1+(-6*x3_2-6*x4_2)*x2_2-4*x2_3*(x3_1+x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(a-x3_0-x4_0)*x2_5+(-x3_5-x4_5)*x2_0+(-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3)*x2_2+(-10*x3_2-10*x4_2)*x2_3-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(a-x3_0-x4_0)*x2_6+(-x3_6-x4_6)*x2_0+(-6*x3_5-6*x4_5)*x2_1+(-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3)*x2_3+(-15*x3_2-15*x4_2)*x2_4-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(a-x3_0-x4_0)*x2_7+(-x3_7-x4_7)*x2_0+(-7*x3_6-7*x4_6)*x2_1+(-21*x3_5-21*x4_5)*x2_2+(-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, y_faux2_0-x3_4, y_faux3_0-x4_0]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = x3_4, y_faux3_0 = x4_0]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability:  591701046100000000000000
Random sample for the outputs and inputs is generated from  [a = 392383933187876786329865, d = 418853560460205893590789, k3 = 77649595039529606282545, k4 = 193255001828284647400172, k5 = 510245390414550058215072, k6 = 574742793115688368676486, k7 = 94592508189701879253741, b_0 = 47890969367792795185837, x1_0 = 54290261029277288941873, x2_0 = 242061100948228007628023, x3_0 = 319393777156470265775999, x4_0 = 354097914905048263703801, x5_0 = 118180382232911491331974]
The polynomial system widehat{E^t} contains  69 equations in  61  variables
            "new_logs/Tumor/transcendence_227_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, x3_4, x4_1]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b}
Algebraically independent parameters among derivatives: {x3_4, x4_1}
	Adding ODEs: [diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t)]
	New system: [diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t)]

=== Input info ===
State variables:          [b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t)]
Input variables:          []
Parameters in equations:  [a, d, k3, k4, k5, k6, k7]
===================

memory used=28413.9MB, alloc=215.8MB, time=259.77
	Adding new y-equations: [y_faux2_0 = x3_4, y_faux3_0 = x4_1]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a-x3_0-x4_0)*x2_1-x2_0*(-b_1*d+x3_1+x4_1))*k5+k4*x2_1-k6*x3_1-k6*x4_1-x1_1*k3+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a-x3_0-x4_0)*x2_2+(b_2*d-x3_2-x4_2)*x2_0-2*x2_1*(-b_1*d+x3_1+x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a-x3_0-x4_0)*x2_3+(3*b_1*x2_2+3*b_2*x2_1+b_3*x2_0)*d+(-x3_3-x4_3)*x2_0+(-3*x3_2-3*x4_2)*x2_1-3*x2_2*(x3_1+x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3)*x2_1+(-6*x3_2-6*x4_2)*x2_2-4*x2_3*(x3_1+x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(a-x3_0-x4_0)*x2_5+(-x3_5-x4_5)*x2_0+(-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3)*x2_2+(-10*x3_2-10*x4_2)*x2_3-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(a-x3_0-x4_0)*x2_6+(-x3_6-x4_6)*x2_0+(-6*x3_5-6*x4_5)*x2_1+(-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3)*x2_3+(-15*x3_2-15*x4_2)*x2_4-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(a-x3_0-x4_0)*x2_7+(-x3_7-x4_7)*x2_0+(-7*x3_6-7*x4_6)*x2_1+(-21*x3_5-21*x4_5)*x2_2+(-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, y_faux2_0-x3_4, y_faux3_0-x4_1]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = x3_4, y_faux3_0 = x4_1]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability:  591701046100000000000000
Random sample for the outputs and inputs is generated from  [a = 331840064660443212024594, d = 198650673235772994991026, k3 = 186415658232903147640053, k4 = 585660242716431815461996, k5 = 369520713410888779747818, k6 = 313913527804205304364215, k7 = 532615107549919176687166, b_0 = 495124648742987788220518, x1_0 = 26557203818834783519825, x2_0 = 291264840523062816100660, x3_0 = 5444148449424677874344, x4_0 = 475393483326639193616802, x5_0 = 170458178427042749015608]
The polynomial system widehat{E^t} contains  69 equations in  61  variables
            "new_logs/Tumor/transcendence_228_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, x3_4, x4_2]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b}
Algebraically independent parameters among derivatives: {x3_4, x4_2}
	Adding ODEs: [diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t)]
	New system: [diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t)]

=== Input info ===
State variables:          [b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t)]
Input variables:          []
Parameters in equations:  [a, d, k3, k4, k5, k6, k7]
===================

memory used=28572.5MB, alloc=215.8MB, time=261.26
memory used=28697.8MB, alloc=215.8MB, time=262.21
	Adding new y-equations: [y_faux2_0 = x3_4, y_faux3_0 = x4_2]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a-x3_0-x4_0)*x2_1-x2_0*(-b_1*d+x3_1+x4_1))*k5+k4*x2_1-k6*x3_1-k6*x4_1-x1_1*k3+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a-x3_0-x4_0)*x2_2+(b_2*d-x3_2-x4_2)*x2_0-2*x2_1*(-b_1*d+x3_1+x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a-x3_0-x4_0)*x2_3+(3*b_1*x2_2+3*b_2*x2_1+b_3*x2_0)*d+(-x3_3-x4_3)*x2_0+(-3*x3_2-3*x4_2)*x2_1-3*x2_2*(x3_1+x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3)*x2_1+(-6*x3_2-6*x4_2)*x2_2-4*x2_3*(x3_1+x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(a-x3_0-x4_0)*x2_5+(-x3_5-x4_5)*x2_0+(-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3)*x2_2+(-10*x3_2-10*x4_2)*x2_3-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(a-x3_0-x4_0)*x2_6+(-x3_6-x4_6)*x2_0+(-6*x3_5-6*x4_5)*x2_1+(-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3)*x2_3+(-15*x3_2-15*x4_2)*x2_4-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(a-x3_0-x4_0)*x2_7+(-x3_7-x4_7)*x2_0+(-7*x3_6-7*x4_6)*x2_1+(-21*x3_5-21*x4_5)*x2_2+(-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, y_faux2_0-x3_4, y_faux3_0-x4_2]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = x3_4, y_faux3_0 = x4_2]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability:  591701046100000000000000
Random sample for the outputs and inputs is generated from  [a = 86296098708976027795741, d = 523974767332296894537092, k3 = 372954007085896114250420, k4 = 481531667659914710861320, k5 = 455031847931727071946994, k6 = 302907374019395890541265, k7 = 440441897337207925260039, b_0 = 172806529212561022366097, x1_0 = 247443888267937446769906, x2_0 = 390579404519087084913556, x3_0 = 359828972839278505545982, x4_0 = 560821303018393003684392, x5_0 = 20031753362674092690083]
The polynomial system widehat{E^t} contains  69 equations in  61  variables
            "new_logs/Tumor/transcendence_229_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, x3_4, x4_3]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b}
Algebraically independent parameters among derivatives: {x3_4, x4_3}
	Adding ODEs: [diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t)]
	New system: [diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t)]

=== Input info ===
State variables:          [b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t)]
Input variables:          []
Parameters in equations:  [a, d, k3, k4, k5, k6, k7]
===================

memory used=28847.6MB, alloc=215.8MB, time=263.63
	Adding new y-equations: [y_faux2_0 = x3_4, y_faux3_0 = x4_3]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a-x3_0-x4_0)*x2_1-x2_0*(-b_1*d+x3_1+x4_1))*k5+k4*x2_1-k6*x3_1-k6*x4_1-x1_1*k3+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a-x3_0-x4_0)*x2_2+(b_2*d-x3_2-x4_2)*x2_0-2*x2_1*(-b_1*d+x3_1+x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a-x3_0-x4_0)*x2_3+(3*b_1*x2_2+3*b_2*x2_1+b_3*x2_0)*d+(-x3_3-x4_3)*x2_0+(-3*x3_2-3*x4_2)*x2_1-3*x2_2*(x3_1+x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3)*x2_1+(-6*x3_2-6*x4_2)*x2_2-4*x2_3*(x3_1+x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(a-x3_0-x4_0)*x2_5+(-x3_5-x4_5)*x2_0+(-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3)*x2_2+(-10*x3_2-10*x4_2)*x2_3-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(a-x3_0-x4_0)*x2_6+(-x3_6-x4_6)*x2_0+(-6*x3_5-6*x4_5)*x2_1+(-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3)*x2_3+(-15*x3_2-15*x4_2)*x2_4-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(a-x3_0-x4_0)*x2_7+(-x3_7-x4_7)*x2_0+(-7*x3_6-7*x4_6)*x2_1+(-21*x3_5-21*x4_5)*x2_2+(-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, y_faux2_0-x3_4, y_faux3_0-x4_3]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = x3_4, y_faux3_0 = x4_3]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability:  591701046100000000000000
Random sample for the outputs and inputs is generated from  [a = 333356575236424519450758, d = 543729748902152763594995, k3 = 225919213701090051780399, k4 = 154798941754961731818580, k5 = 221377539101066342465973, k6 = 167936862989125364299237, k7 = 308643852377756121708153, b_0 = 534373023084960545227889, x1_0 = 258779160575011169107578, x2_0 = 130444577619988738944334, x3_0 = 66056039392937598611711, x4_0 = 27536436112260954546447, x5_0 = 391876027772090122737315]
The polynomial system widehat{E^t} contains  69 equations in  61  variables
            "new_logs/Tumor/transcendence_230_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, x3_4, x4_4]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [b, x3_4, x4_5]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b}
Algebraically independent parameters among derivatives: {x3_4, x4_5}
	Adding ODEs: [diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t)]
	New system: [diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t)]

=== Input info ===
State variables:          [b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t)]
Input variables:          []
Parameters in equations:  [a, d, k3, k4, k5, k6, k7]
===================

memory used=29025.0MB, alloc=215.8MB, time=265.32
memory used=29150.8MB, alloc=215.8MB, time=266.32
	Adding new y-equations: [y_faux2_0 = x3_4, y_faux3_0 = x4_5]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a-x3_0-x4_0)*x2_1-x2_0*(-b_1*d+x3_1+x4_1))*k5+k4*x2_1-k6*x3_1-k6*x4_1-x1_1*k3+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a-x3_0-x4_0)*x2_2+(b_2*d-x3_2-x4_2)*x2_0-2*x2_1*(-b_1*d+x3_1+x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a-x3_0-x4_0)*x2_3+(3*b_1*x2_2+3*b_2*x2_1+b_3*x2_0)*d+(-x3_3-x4_3)*x2_0+(-3*x3_2-3*x4_2)*x2_1-3*x2_2*(x3_1+x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3)*x2_1+(-6*x3_2-6*x4_2)*x2_2-4*x2_3*(x3_1+x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(a-x3_0-x4_0)*x2_5+(-x3_5-x4_5)*x2_0+(-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3)*x2_2+(-10*x3_2-10*x4_2)*x2_3-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(a-x3_0-x4_0)*x2_6+(-x3_6-x4_6)*x2_0+(-6*x3_5-6*x4_5)*x2_1+(-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3)*x2_3+(-15*x3_2-15*x4_2)*x2_4-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(a-x3_0-x4_0)*x2_7+(-x3_7-x4_7)*x2_0+(-7*x3_6-7*x4_6)*x2_1+(-21*x3_5-21*x4_5)*x2_2+(-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, y_faux2_0-x3_4, y_faux3_0-x4_5]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = x3_4, y_faux3_0 = x4_5]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability:  591701046100000000000000
Random sample for the outputs and inputs is generated from  [a = 571794576963115402193787, d = 538228859917133033767184, k3 = 543382297155305217436849, k4 = 415727671817698966122599, k5 = 221329317830310219660332, k6 = 32529846737080269702899, k7 = 558070901545899413561607, b_0 = 311274861676180583701318, x1_0 = 521060716585466709369082, x2_0 = 103451996466339428170726, x3_0 = 394560972024120032205130, x4_0 = 304201220454420725707568, x5_0 = 481003010674747859339092]
The polynomial system widehat{E^t} contains  69 equations in  61  variables
            "new_logs/Tumor/transcendence_232_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, x3_4, x4_6]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b}
Algebraically independent parameters among derivatives: {x3_4, x4_6}
	Adding ODEs: [diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t)]
	New system: [diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t)]

=== Input info ===
State variables:          [b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t)]
Input variables:          []
Parameters in equations:  [a, d, k3, k4, k5, k6, k7]
===================

memory used=29319.9MB, alloc=215.8MB, time=267.86
	Adding new y-equations: [y_faux2_0 = x3_4, y_faux3_0 = x4_6]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a-x3_0-x4_0)*x2_1-x2_0*(-b_1*d+x3_1+x4_1))*k5+k4*x2_1-k6*x3_1-k6*x4_1-x1_1*k3+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a-x3_0-x4_0)*x2_2+(b_2*d-x3_2-x4_2)*x2_0-2*x2_1*(-b_1*d+x3_1+x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a-x3_0-x4_0)*x2_3+(3*b_1*x2_2+3*b_2*x2_1+b_3*x2_0)*d+(-x3_3-x4_3)*x2_0+(-3*x3_2-3*x4_2)*x2_1-3*x2_2*(x3_1+x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3)*x2_1+(-6*x3_2-6*x4_2)*x2_2-4*x2_3*(x3_1+x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(a-x3_0-x4_0)*x2_5+(-x3_5-x4_5)*x2_0+(-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3)*x2_2+(-10*x3_2-10*x4_2)*x2_3-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(a-x3_0-x4_0)*x2_6+(-x3_6-x4_6)*x2_0+(-6*x3_5-6*x4_5)*x2_1+(-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3)*x2_3+(-15*x3_2-15*x4_2)*x2_4-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(a-x3_0-x4_0)*x2_7+(-x3_7-x4_7)*x2_0+(-7*x3_6-7*x4_6)*x2_1+(-21*x3_5-21*x4_5)*x2_2+(-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, y_faux2_0-x3_4, y_faux3_0-x4_6]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = x3_4, y_faux3_0 = x4_6]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability:  591701046100000000000000
Random sample for the outputs and inputs is generated from  [a = 312933640844961035006492, d = 572807357066623747177383, k3 = 403577202320976247225625, k4 = 380908587850578906228151, k5 = 412325405931654308159609, k6 = 287836557272264573122754, k7 = 454626497283161643639976, b_0 = 288294675480663183796072, x1_0 = 67240406988458024562881, x2_0 = 52427690206761908532263, x3_0 = 400098906736283719566181, x4_0 = 216464741649865872325641, x5_0 = 439643878751815648609428]
The polynomial system widehat{E^t} contains  69 equations in  61  variables
            "new_logs/Tumor/transcendence_233_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, x3_4, x4_7]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b}
Algebraically independent parameters among derivatives: {x3_4, x4_7}
	Adding ODEs: [diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t)]
	New system: [diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t)]

=== Input info ===
State variables:          [b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t)]
Input variables:          []
Parameters in equations:  [a, d, k3, k4, k5, k6, k7]
===================

memory used=29496.9MB, alloc=215.8MB, time=269.53
	Adding new y-equations: [y_faux2_0 = x3_4, y_faux3_0 = x4_7]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a-x3_0-x4_0)*x2_1-x2_0*(-b_1*d+x3_1+x4_1))*k5+k4*x2_1-k6*x3_1-k6*x4_1-x1_1*k3+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a-x3_0-x4_0)*x2_2+(b_2*d-x3_2-x4_2)*x2_0-2*x2_1*(-b_1*d+x3_1+x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a-x3_0-x4_0)*x2_3+(3*b_1*x2_2+3*b_2*x2_1+b_3*x2_0)*d+(-x3_3-x4_3)*x2_0+(-3*x3_2-3*x4_2)*x2_1-3*x2_2*(x3_1+x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3)*x2_1+(-6*x3_2-6*x4_2)*x2_2-4*x2_3*(x3_1+x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(a-x3_0-x4_0)*x2_5+(-x3_5-x4_5)*x2_0+(-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3)*x2_2+(-10*x3_2-10*x4_2)*x2_3-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(a-x3_0-x4_0)*x2_6+(-x3_6-x4_6)*x2_0+(-6*x3_5-6*x4_5)*x2_1+(-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3)*x2_3+(-15*x3_2-15*x4_2)*x2_4-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(a-x3_0-x4_0)*x2_7+(-x3_7-x4_7)*x2_0+(-7*x3_6-7*x4_6)*x2_1+(-21*x3_5-21*x4_5)*x2_2+(-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, y_faux2_0-x3_4, y_faux3_0-x4_7]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = x3_4, y_faux3_0 = x4_7]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability:  591701046100000000000000
Random sample for the outputs and inputs is generated from  [a = 152305458815946011558433, d = 287210982842938463094048, k3 = 177313890101252215013715, k4 = 76938135890939145863889, k5 = 155962504371988293856955, k6 = 295022275533709774320847, k7 = 308124558217542321610698, b_0 = 284846914310449164973043, x1_0 = 119138542964407698080229, x2_0 = 585718953496028295627248, x3_0 = 74731610327689204333391, x4_0 = 216597751358632576363911, x5_0 = 224382514887665982509631]
The polynomial system widehat{E^t} contains  69 equations in  61  variables
            "new_logs/Tumor/transcendence_234_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, x3_5, x3_6]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b}
Algebraically independent parameters among derivatives: {x3_5, x3_6}
	Adding ODEs: [diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t)]
	New system: [diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t)]

=== Input info ===
State variables:          [b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t)]
Input variables:          []
Parameters in equations:  [a, d, k3, k4, k5, k6, k7]
===================

memory used=29662.7MB, alloc=215.8MB, time=271.05
memory used=29793.8MB, alloc=215.8MB, time=272.10
	Adding new y-equations: [y_faux2_0 = x3_5, y_faux3_0 = x3_6]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a-x3_0-x4_0)*x2_1-x2_0*(-b_1*d+x3_1+x4_1))*k5+k4*x2_1-k6*x3_1-k6*x4_1-x1_1*k3+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a-x3_0-x4_0)*x2_2+(b_2*d-x3_2-x4_2)*x2_0-2*x2_1*(-b_1*d+x3_1+x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a-x3_0-x4_0)*x2_3+(3*b_1*x2_2+3*b_2*x2_1+b_3*x2_0)*d+(-x3_3-x4_3)*x2_0+(-3*x3_2-3*x4_2)*x2_1-3*x2_2*(x3_1+x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3)*x2_1+(-6*x3_2-6*x4_2)*x2_2-4*x2_3*(x3_1+x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(a-x3_0-x4_0)*x2_5+(-x3_5-x4_5)*x2_0+(-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3)*x2_2+(-10*x3_2-10*x4_2)*x2_3-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(a-x3_0-x4_0)*x2_6+(-x3_6-x4_6)*x2_0+(-6*x3_5-6*x4_5)*x2_1+(-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3)*x2_3+(-15*x3_2-15*x4_2)*x2_4-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(a-x3_0-x4_0)*x2_7+(-x3_7-x4_7)*x2_0+(-7*x3_6-7*x4_6)*x2_1+(-21*x3_5-21*x4_5)*x2_2+(-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, y_faux2_0-x3_5, y_faux3_0-x3_6]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = x3_5, y_faux3_0 = x3_6]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability:  591701046100000000000000
Random sample for the outputs and inputs is generated from  [a = 279352117944158713172734, d = 483434319435795896507483, k3 = 466722857675965677546952, k4 = 238749131000262871773309, k5 = 313977461384296654186178, k6 = 385799827094252272178656, k7 = 61875573090398907526340, b_0 = 246801266154612736777074, x1_0 = 524956927100760890773164, x2_0 = 294741281435060402033659, x3_0 = 121928943588050007083323, x4_0 = 100448714174559940375174, x5_0 = 574848354868051108163816]
The polynomial system widehat{E^t} contains  69 equations in  61  variables
            "new_logs/Tumor/transcendence_235_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, x3_5, x3_7]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b}
Algebraically independent parameters among derivatives: {x3_5, x3_7}
	Adding ODEs: [diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t)]
	New system: [diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t)]

=== Input info ===
State variables:          [b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t)]
Input variables:          []
Parameters in equations:  [a, d, k3, k4, k5, k6, k7]
===================

memory used=29970.6MB, alloc=215.8MB, time=273.71
	Adding new y-equations: [y_faux2_0 = x3_5, y_faux3_0 = x3_7]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a-x3_0-x4_0)*x2_1-x2_0*(-b_1*d+x3_1+x4_1))*k5+k4*x2_1-k6*x3_1-k6*x4_1-x1_1*k3+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a-x3_0-x4_0)*x2_2+(b_2*d-x3_2-x4_2)*x2_0-2*x2_1*(-b_1*d+x3_1+x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a-x3_0-x4_0)*x2_3+(3*b_1*x2_2+3*b_2*x2_1+b_3*x2_0)*d+(-x3_3-x4_3)*x2_0+(-3*x3_2-3*x4_2)*x2_1-3*x2_2*(x3_1+x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3)*x2_1+(-6*x3_2-6*x4_2)*x2_2-4*x2_3*(x3_1+x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(a-x3_0-x4_0)*x2_5+(-x3_5-x4_5)*x2_0+(-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3)*x2_2+(-10*x3_2-10*x4_2)*x2_3-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(a-x3_0-x4_0)*x2_6+(-x3_6-x4_6)*x2_0+(-6*x3_5-6*x4_5)*x2_1+(-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3)*x2_3+(-15*x3_2-15*x4_2)*x2_4-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(a-x3_0-x4_0)*x2_7+(-x3_7-x4_7)*x2_0+(-7*x3_6-7*x4_6)*x2_1+(-21*x3_5-21*x4_5)*x2_2+(-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, y_faux2_0-x3_5, y_faux3_0-x3_7]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = x3_5, y_faux3_0 = x3_7]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability:  591701046100000000000000
Random sample for the outputs and inputs is generated from  [a = 382333021902378350714875, d = 111151791878994062870989, k3 = 526463799767936043291053, k4 = 393443927675740624919430, k5 = 178494636126515100176633, k6 = 583964349628081940933903, k7 = 544090050070489175185160, b_0 = 63364771522962023149964, x1_0 = 525616867223725905252567, x2_0 = 553981196626608305674108, x3_0 = 100119486810103322833530, x4_0 = 521785427130307350801754, x5_0 = 541099413692026688387112]
The polynomial system widehat{E^t} contains  69 equations in  61  variables
            "new_logs/Tumor/transcendence_236_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, x3_5, x4(0)]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b}
Algebraically independent parameters among derivatives: {x3_5, x4(0)}
	Adding ODEs: [diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t)]
	New system: [diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t)]

=== Input info ===
State variables:          [b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t)]
Input variables:          []
Parameters in equations:  [a, d, k3, k4, k5, k6, k7]
===================

memory used=30134.5MB, alloc=215.8MB, time=275.22
	Adding new y-equations: [y_faux2_0 = x3_5, y_faux3_0 = x4_0]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a-x3_0-x4_0)*x2_1-x2_0*(-b_1*d+x3_1+x4_1))*k5+k4*x2_1-k6*x3_1-k6*x4_1-x1_1*k3+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a-x3_0-x4_0)*x2_2+(b_2*d-x3_2-x4_2)*x2_0-2*x2_1*(-b_1*d+x3_1+x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a-x3_0-x4_0)*x2_3+(3*b_1*x2_2+3*b_2*x2_1+b_3*x2_0)*d+(-x3_3-x4_3)*x2_0+(-3*x3_2-3*x4_2)*x2_1-3*x2_2*(x3_1+x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3)*x2_1+(-6*x3_2-6*x4_2)*x2_2-4*x2_3*(x3_1+x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(a-x3_0-x4_0)*x2_5+(-x3_5-x4_5)*x2_0+(-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3)*x2_2+(-10*x3_2-10*x4_2)*x2_3-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(a-x3_0-x4_0)*x2_6+(-x3_6-x4_6)*x2_0+(-6*x3_5-6*x4_5)*x2_1+(-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3)*x2_3+(-15*x3_2-15*x4_2)*x2_4-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(a-x3_0-x4_0)*x2_7+(-x3_7-x4_7)*x2_0+(-7*x3_6-7*x4_6)*x2_1+(-21*x3_5-21*x4_5)*x2_2+(-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, y_faux2_0-x3_5, y_faux3_0-x4_0]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = x3_5, y_faux3_0 = x4_0]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability:  591701046100000000000000
Random sample for the outputs and inputs is generated from  [a = 197317011143029692893812, d = 578870477884532209671685, k3 = 92136104262882144515497, k4 = 125690390039693091378181, k5 = 120887667001790635514623, k6 = 390326842092901244681920, k7 = 263486148269617585797554, b_0 = 89012318070547857857037, x1_0 = 535060714737982991252909, x2_0 = 208591758009804114292934, x3_0 = 241820697732178727403310, x4_0 = 161518533853168312356124, x5_0 = 448853560143830055995230]
The polynomial system widehat{E^t} contains  69 equations in  61  variables
            "new_logs/Tumor/transcendence_237_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, x3_5, x4_1]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b}
Algebraically independent parameters among derivatives: {x3_5, x4_1}
	Adding ODEs: [diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t)]
	New system: [diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t)]

=== Input info ===
State variables:          [b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t)]
Input variables:          []
Parameters in equations:  [a, d, k3, k4, k5, k6, k7]
===================

memory used=30305.8MB, alloc=215.8MB, time=276.75
memory used=30449.7MB, alloc=215.8MB, time=277.93
	Adding new y-equations: [y_faux2_0 = x3_5, y_faux3_0 = x4_1]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a-x3_0-x4_0)*x2_1-x2_0*(-b_1*d+x3_1+x4_1))*k5+k4*x2_1-k6*x3_1-k6*x4_1-x1_1*k3+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a-x3_0-x4_0)*x2_2+(b_2*d-x3_2-x4_2)*x2_0-2*x2_1*(-b_1*d+x3_1+x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a-x3_0-x4_0)*x2_3+(3*b_1*x2_2+3*b_2*x2_1+b_3*x2_0)*d+(-x3_3-x4_3)*x2_0+(-3*x3_2-3*x4_2)*x2_1-3*x2_2*(x3_1+x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3)*x2_1+(-6*x3_2-6*x4_2)*x2_2-4*x2_3*(x3_1+x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(a-x3_0-x4_0)*x2_5+(-x3_5-x4_5)*x2_0+(-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3)*x2_2+(-10*x3_2-10*x4_2)*x2_3-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(a-x3_0-x4_0)*x2_6+(-x3_6-x4_6)*x2_0+(-6*x3_5-6*x4_5)*x2_1+(-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3)*x2_3+(-15*x3_2-15*x4_2)*x2_4-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(a-x3_0-x4_0)*x2_7+(-x3_7-x4_7)*x2_0+(-7*x3_6-7*x4_6)*x2_1+(-21*x3_5-21*x4_5)*x2_2+(-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, y_faux2_0-x3_5, y_faux3_0-x4_1]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = x3_5, y_faux3_0 = x4_1]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability:  591701046100000000000000
Random sample for the outputs and inputs is generated from  [a = 340983382335428501348419, d = 61779660916021287449704, k3 = 125527249175193795088083, k4 = 453031665382322919027030, k5 = 559222356486646882058012, k6 = 560352961095026141918815, k7 = 65833457210166835772790, b_0 = 406731882316138433109908, x1_0 = 31972455810355190388704, x2_0 = 106190255852605459573574, x3_0 = 32726227421888062203437, x4_0 = 590041734891512337512440, x5_0 = 370030890483234073232781]
The polynomial system widehat{E^t} contains  69 equations in  61  variables
            "new_logs/Tumor/transcendence_238_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, x3_5, x4_2]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b}
Algebraically independent parameters among derivatives: {x3_5, x4_2}
	Adding ODEs: [diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t)]
	New system: [diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t)]

=== Input info ===
State variables:          [b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t)]
Input variables:          []
Parameters in equations:  [a, d, k3, k4, k5, k6, k7]
===================

memory used=30627.8MB, alloc=215.8MB, time=279.55
	Adding new y-equations: [y_faux2_0 = x3_5, y_faux3_0 = x4_2]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a-x3_0-x4_0)*x2_1-x2_0*(-b_1*d+x3_1+x4_1))*k5+k4*x2_1-k6*x3_1-k6*x4_1-x1_1*k3+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a-x3_0-x4_0)*x2_2+(b_2*d-x3_2-x4_2)*x2_0-2*x2_1*(-b_1*d+x3_1+x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a-x3_0-x4_0)*x2_3+(3*b_1*x2_2+3*b_2*x2_1+b_3*x2_0)*d+(-x3_3-x4_3)*x2_0+(-3*x3_2-3*x4_2)*x2_1-3*x2_2*(x3_1+x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3)*x2_1+(-6*x3_2-6*x4_2)*x2_2-4*x2_3*(x3_1+x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(a-x3_0-x4_0)*x2_5+(-x3_5-x4_5)*x2_0+(-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3)*x2_2+(-10*x3_2-10*x4_2)*x2_3-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(a-x3_0-x4_0)*x2_6+(-x3_6-x4_6)*x2_0+(-6*x3_5-6*x4_5)*x2_1+(-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3)*x2_3+(-15*x3_2-15*x4_2)*x2_4-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(a-x3_0-x4_0)*x2_7+(-x3_7-x4_7)*x2_0+(-7*x3_6-7*x4_6)*x2_1+(-21*x3_5-21*x4_5)*x2_2+(-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, y_faux2_0-x3_5, y_faux3_0-x4_2]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = x3_5, y_faux3_0 = x4_2]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability:  591701046100000000000000
Random sample for the outputs and inputs is generated from  [a = 590503230493712859264319, d = 548693222472421366683225, k3 = 398366031415686505374169, k4 = 56683908427148272322215, k5 = 28154970506604594451860, k6 = 330749819297260513491479, k7 = 336006487183941802759054, b_0 = 47104866479938439401830, x1_0 = 561025111678660759493204, x2_0 = 234981718950938421897022, x3_0 = 528278395318869764886844, x4_0 = 47255909688648208764882, x5_0 = 153062223376984069694934]
The polynomial system widehat{E^t} contains  69 equations in  61  variables
            "new_logs/Tumor/transcendence_239_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, x3_5, x4_3]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b}
Algebraically independent parameters among derivatives: {x3_5, x4_3}
	Adding ODEs: [diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t)]
	New system: [diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t)]

=== Input info ===
State variables:          [b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t)]
Input variables:          []
Parameters in equations:  [a, d, k3, k4, k5, k6, k7]
===================

memory used=30793.2MB, alloc=215.8MB, time=281.11
	Adding new y-equations: [y_faux2_0 = x3_5, y_faux3_0 = x4_3]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a-x3_0-x4_0)*x2_1-x2_0*(-b_1*d+x3_1+x4_1))*k5+k4*x2_1-k6*x3_1-k6*x4_1-x1_1*k3+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a-x3_0-x4_0)*x2_2+(b_2*d-x3_2-x4_2)*x2_0-2*x2_1*(-b_1*d+x3_1+x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a-x3_0-x4_0)*x2_3+(3*b_1*x2_2+3*b_2*x2_1+b_3*x2_0)*d+(-x3_3-x4_3)*x2_0+(-3*x3_2-3*x4_2)*x2_1-3*x2_2*(x3_1+x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3)*x2_1+(-6*x3_2-6*x4_2)*x2_2-4*x2_3*(x3_1+x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(a-x3_0-x4_0)*x2_5+(-x3_5-x4_5)*x2_0+(-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3)*x2_2+(-10*x3_2-10*x4_2)*x2_3-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(a-x3_0-x4_0)*x2_6+(-x3_6-x4_6)*x2_0+(-6*x3_5-6*x4_5)*x2_1+(-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3)*x2_3+(-15*x3_2-15*x4_2)*x2_4-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(a-x3_0-x4_0)*x2_7+(-x3_7-x4_7)*x2_0+(-7*x3_6-7*x4_6)*x2_1+(-21*x3_5-21*x4_5)*x2_2+(-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, y_faux2_0-x3_5, y_faux3_0-x4_3]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = x3_5, y_faux3_0 = x4_3]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability:  591701046100000000000000
Random sample for the outputs and inputs is generated from  [a = 112215144775884151323705, d = 197760189077560780249111, k3 = 313700475821070709453516, k4 = 54766512050908261482839, k5 = 433326193038412884872565, k6 = 427687467595867254803967, k7 = 354847215341353617815518, b_0 = 131369660912348210674236, x1_0 = 60819200637025562023638, x2_0 = 79776010663104835218139, x3_0 = 323651177994695115909152, x4_0 = 517209246106274149749437, x5_0 = 12101813181332003744329]
The polynomial system widehat{E^t} contains  69 equations in  61  variables
            "new_logs/Tumor/transcendence_240_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, x3_5, x4_4]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b}
Algebraically independent parameters among derivatives: {x3_5, x4_4}
	Adding ODEs: [diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t)]
	New system: [diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t)]

=== Input info ===
State variables:          [b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t)]
Input variables:          []
Parameters in equations:  [a, d, k3, k4, k5, k6, k7]
===================

memory used=30967.1MB, alloc=215.8MB, time=282.67
memory used=31107.8MB, alloc=215.8MB, time=283.81
	Adding new y-equations: [y_faux2_0 = x3_5, y_faux3_0 = x4_4]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a-x3_0-x4_0)*x2_1-x2_0*(-b_1*d+x3_1+x4_1))*k5+k4*x2_1-k6*x3_1-k6*x4_1-x1_1*k3+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a-x3_0-x4_0)*x2_2+(b_2*d-x3_2-x4_2)*x2_0-2*x2_1*(-b_1*d+x3_1+x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a-x3_0-x4_0)*x2_3+(3*b_1*x2_2+3*b_2*x2_1+b_3*x2_0)*d+(-x3_3-x4_3)*x2_0+(-3*x3_2-3*x4_2)*x2_1-3*x2_2*(x3_1+x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3)*x2_1+(-6*x3_2-6*x4_2)*x2_2-4*x2_3*(x3_1+x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(a-x3_0-x4_0)*x2_5+(-x3_5-x4_5)*x2_0+(-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3)*x2_2+(-10*x3_2-10*x4_2)*x2_3-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(a-x3_0-x4_0)*x2_6+(-x3_6-x4_6)*x2_0+(-6*x3_5-6*x4_5)*x2_1+(-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3)*x2_3+(-15*x3_2-15*x4_2)*x2_4-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(a-x3_0-x4_0)*x2_7+(-x3_7-x4_7)*x2_0+(-7*x3_6-7*x4_6)*x2_1+(-21*x3_5-21*x4_5)*x2_2+(-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, y_faux2_0-x3_5, y_faux3_0-x4_4]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = x3_5, y_faux3_0 = x4_4]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability:  591701046100000000000000
Random sample for the outputs and inputs is generated from  [a = 579299788281295325242413, d = 330899705732937734548749, k3 = 142012188282340445653464, k4 = 516349829956393134677809, k5 = 496350133394980032915975, k6 = 159882202192688685394204, k7 = 571070256182478521322688, b_0 = 139992029631037843435402, x1_0 = 393839979341736542165642, x2_0 = 56683026159010268421020, x3_0 = 562181364022249384386125, x4_0 = 272426723407897905509985, x5_0 = 139526198049965485001718]
The polynomial system widehat{E^t} contains  69 equations in  61  variables
            "new_logs/Tumor/transcendence_241_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, x3_5, x4_5]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [b, x3_5, x4_6]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b}
Algebraically independent parameters among derivatives: {x3_5, x4_6}
	Adding ODEs: [diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t)]
	New system: [diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t)]

=== Input info ===
State variables:          [b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t)]
Input variables:          []
Parameters in equations:  [a, d, k3, k4, k5, k6, k7]
===================

memory used=31246.5MB, alloc=215.8MB, time=285.26
	Adding new y-equations: [y_faux2_0 = x3_5, y_faux3_0 = x4_6]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a-x3_0-x4_0)*x2_1-x2_0*(-b_1*d+x3_1+x4_1))*k5+k4*x2_1-k6*x3_1-k6*x4_1-x1_1*k3+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a-x3_0-x4_0)*x2_2+(b_2*d-x3_2-x4_2)*x2_0-2*x2_1*(-b_1*d+x3_1+x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a-x3_0-x4_0)*x2_3+(3*b_1*x2_2+3*b_2*x2_1+b_3*x2_0)*d+(-x3_3-x4_3)*x2_0+(-3*x3_2-3*x4_2)*x2_1-3*x2_2*(x3_1+x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3)*x2_1+(-6*x3_2-6*x4_2)*x2_2-4*x2_3*(x3_1+x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(a-x3_0-x4_0)*x2_5+(-x3_5-x4_5)*x2_0+(-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3)*x2_2+(-10*x3_2-10*x4_2)*x2_3-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(a-x3_0-x4_0)*x2_6+(-x3_6-x4_6)*x2_0+(-6*x3_5-6*x4_5)*x2_1+(-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3)*x2_3+(-15*x3_2-15*x4_2)*x2_4-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(a-x3_0-x4_0)*x2_7+(-x3_7-x4_7)*x2_0+(-7*x3_6-7*x4_6)*x2_1+(-21*x3_5-21*x4_5)*x2_2+(-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, y_faux2_0-x3_5, y_faux3_0-x4_6]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = x3_5, y_faux3_0 = x4_6]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability:  591701046100000000000000
Random sample for the outputs and inputs is generated from  [a = 478917988468919398810670, d = 537446526420532982672133, k3 = 140324530635575584973586, k4 = 49752289045369960905831, k5 = 335414555383639500318665, k6 = 328166298337483093018866, k7 = 337441592713833852002267, b_0 = 350435764010111088108142, x1_0 = 430086242839592293902908, x2_0 = 175527702454043367179355, x3_0 = 374758490546181009258283, x4_0 = 130707482842243808867624, x5_0 = 227493453599660060803002]
The polynomial system widehat{E^t} contains  69 equations in  61  variables
            "new_logs/Tumor/transcendence_243_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, x3_5, x4_7]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b}
Algebraically independent parameters among derivatives: {x3_5, x4_7}
	Adding ODEs: [diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t)]
	New system: [diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t)]

=== Input info ===
State variables:          [b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t)]
Input variables:          []
Parameters in equations:  [a, d, k3, k4, k5, k6, k7]
===================

memory used=31427.0MB, alloc=215.8MB, time=286.88
memory used=31559.2MB, alloc=215.8MB, time=287.95
	Adding new y-equations: [y_faux2_0 = x3_5, y_faux3_0 = x4_7]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a-x3_0-x4_0)*x2_1-x2_0*(-b_1*d+x3_1+x4_1))*k5+k4*x2_1-k6*x3_1-k6*x4_1-x1_1*k3+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a-x3_0-x4_0)*x2_2+(b_2*d-x3_2-x4_2)*x2_0-2*x2_1*(-b_1*d+x3_1+x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a-x3_0-x4_0)*x2_3+(3*b_1*x2_2+3*b_2*x2_1+b_3*x2_0)*d+(-x3_3-x4_3)*x2_0+(-3*x3_2-3*x4_2)*x2_1-3*x2_2*(x3_1+x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3)*x2_1+(-6*x3_2-6*x4_2)*x2_2-4*x2_3*(x3_1+x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(a-x3_0-x4_0)*x2_5+(-x3_5-x4_5)*x2_0+(-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3)*x2_2+(-10*x3_2-10*x4_2)*x2_3-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(a-x3_0-x4_0)*x2_6+(-x3_6-x4_6)*x2_0+(-6*x3_5-6*x4_5)*x2_1+(-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3)*x2_3+(-15*x3_2-15*x4_2)*x2_4-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(a-x3_0-x4_0)*x2_7+(-x3_7-x4_7)*x2_0+(-7*x3_6-7*x4_6)*x2_1+(-21*x3_5-21*x4_5)*x2_2+(-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, y_faux2_0-x3_5, y_faux3_0-x4_7]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = x3_5, y_faux3_0 = x4_7]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability:  591701046100000000000000
Random sample for the outputs and inputs is generated from  [a = 398807148974292069104004, d = 57513115933500568616354, k3 = 161051197683802700071927, k4 = 53653672148574537613854, k5 = 440229543696282216513850, k6 = 142348766518712343703099, k7 = 13030546116828606747642, b_0 = 530580905070523899622731, x1_0 = 505427264320326431419870, x2_0 = 562652660389650720738772, x3_0 = 457512468010184563081617, x4_0 = 366146181951273670807452, x5_0 = 69254530910132309115611]
The polynomial system widehat{E^t} contains  69 equations in  61  variables
            "new_logs/Tumor/transcendence_244_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, x3_6, x3_7]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b}
Algebraically independent parameters among derivatives: {x3_6, x3_7}
	Adding ODEs: [diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t)]
	New system: [diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t)]

=== Input info ===
State variables:          [b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t)]
Input variables:          []
Parameters in equations:  [a, d, k3, k4, k5, k6, k7]
===================

memory used=31712.7MB, alloc=215.8MB, time=289.45
	Adding new y-equations: [y_faux2_0 = x3_6, y_faux3_0 = x3_7]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a-x3_0-x4_0)*x2_1-x2_0*(-b_1*d+x3_1+x4_1))*k5+k4*x2_1-k6*x3_1-k6*x4_1-x1_1*k3+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a-x3_0-x4_0)*x2_2+(b_2*d-x3_2-x4_2)*x2_0-2*x2_1*(-b_1*d+x3_1+x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a-x3_0-x4_0)*x2_3+(3*b_1*x2_2+3*b_2*x2_1+b_3*x2_0)*d+(-x3_3-x4_3)*x2_0+(-3*x3_2-3*x4_2)*x2_1-3*x2_2*(x3_1+x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3)*x2_1+(-6*x3_2-6*x4_2)*x2_2-4*x2_3*(x3_1+x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(a-x3_0-x4_0)*x2_5+(-x3_5-x4_5)*x2_0+(-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3)*x2_2+(-10*x3_2-10*x4_2)*x2_3-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(a-x3_0-x4_0)*x2_6+(-x3_6-x4_6)*x2_0+(-6*x3_5-6*x4_5)*x2_1+(-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3)*x2_3+(-15*x3_2-15*x4_2)*x2_4-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(a-x3_0-x4_0)*x2_7+(-x3_7-x4_7)*x2_0+(-7*x3_6-7*x4_6)*x2_1+(-21*x3_5-21*x4_5)*x2_2+(-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, y_faux2_0-x3_6, y_faux3_0-x3_7]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = x3_6, y_faux3_0 = x3_7]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability:  591701046100000000000000
Random sample for the outputs and inputs is generated from  [a = 236942731728909804287164, d = 460909587910624686461999, k3 = 195825825397740354219970, k4 = 127955957247321347580281, k5 = 70356572443672067829453, k6 = 420891234608033817983884, k7 = 369020407380998912154116, b_0 = 472583302152824932866053, x1_0 = 308087191551318891320268, x2_0 = 540051585118570534192274, x3_0 = 97353842868136369035554, x4_0 = 418338218883950302185261, x5_0 = 581008527278142441364378]
The polynomial system widehat{E^t} contains  69 equations in  61  variables
            "new_logs/Tumor/transcendence_245_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, x3_6, x4(0)]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b}
Algebraically independent parameters among derivatives: {x3_6, x4(0)}
	Adding ODEs: [diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t)]
	New system: [diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t)]

=== Input info ===
State variables:          [b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t)]
Input variables:          []
Parameters in equations:  [a, d, k3, k4, k5, k6, k7]
===================

memory used=31857.5MB, alloc=215.8MB, time=290.82
memory used=31995.6MB, alloc=215.8MB, time=291.97
	Adding new y-equations: [y_faux2_0 = x3_6, y_faux3_0 = x4_0]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a-x3_0-x4_0)*x2_1-x2_0*(-b_1*d+x3_1+x4_1))*k5+k4*x2_1-k6*x3_1-k6*x4_1-x1_1*k3+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a-x3_0-x4_0)*x2_2+(b_2*d-x3_2-x4_2)*x2_0-2*x2_1*(-b_1*d+x3_1+x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a-x3_0-x4_0)*x2_3+(3*b_1*x2_2+3*b_2*x2_1+b_3*x2_0)*d+(-x3_3-x4_3)*x2_0+(-3*x3_2-3*x4_2)*x2_1-3*x2_2*(x3_1+x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3)*x2_1+(-6*x3_2-6*x4_2)*x2_2-4*x2_3*(x3_1+x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(a-x3_0-x4_0)*x2_5+(-x3_5-x4_5)*x2_0+(-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3)*x2_2+(-10*x3_2-10*x4_2)*x2_3-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(a-x3_0-x4_0)*x2_6+(-x3_6-x4_6)*x2_0+(-6*x3_5-6*x4_5)*x2_1+(-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3)*x2_3+(-15*x3_2-15*x4_2)*x2_4-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(a-x3_0-x4_0)*x2_7+(-x3_7-x4_7)*x2_0+(-7*x3_6-7*x4_6)*x2_1+(-21*x3_5-21*x4_5)*x2_2+(-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, y_faux2_0-x3_6, y_faux3_0-x4_0]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = x3_6, y_faux3_0 = x4_0]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability:  591701046100000000000000
Random sample for the outputs and inputs is generated from  [a = 356902535979187215822143, d = 364192732764361047193562, k3 = 128175752278432000042286, k4 = 447263448094420332500160, k5 = 35675861646980820250144, k6 = 424076104204461902422274, k7 = 315253720060273457667697, b_0 = 129399511713915613032728, x1_0 = 570081819240684785586465, x2_0 = 345409239808348289718957, x3_0 = 257986380189343349584982, x4_0 = 378975041531650419884528, x5_0 = 38317263071744929673804]
The polynomial system widehat{E^t} contains  69 equations in  61  variables
            "new_logs/Tumor/transcendence_246_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, x3_6, x4_1]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b}
Algebraically independent parameters among derivatives: {x3_6, x4_1}
	Adding ODEs: [diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t)]
	New system: [diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t)]

=== Input info ===
State variables:          [b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t)]
Input variables:          []
Parameters in equations:  [a, d, k3, k4, k5, k6, k7]
===================

memory used=32138.0MB, alloc=215.8MB, time=293.42
	Adding new y-equations: [y_faux2_0 = x3_6, y_faux3_0 = x4_1]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a-x3_0-x4_0)*x2_1-x2_0*(-b_1*d+x3_1+x4_1))*k5+k4*x2_1-k6*x3_1-k6*x4_1-x1_1*k3+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a-x3_0-x4_0)*x2_2+(b_2*d-x3_2-x4_2)*x2_0-2*x2_1*(-b_1*d+x3_1+x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a-x3_0-x4_0)*x2_3+(3*b_1*x2_2+3*b_2*x2_1+b_3*x2_0)*d+(-x3_3-x4_3)*x2_0+(-3*x3_2-3*x4_2)*x2_1-3*x2_2*(x3_1+x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3)*x2_1+(-6*x3_2-6*x4_2)*x2_2-4*x2_3*(x3_1+x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(a-x3_0-x4_0)*x2_5+(-x3_5-x4_5)*x2_0+(-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3)*x2_2+(-10*x3_2-10*x4_2)*x2_3-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(a-x3_0-x4_0)*x2_6+(-x3_6-x4_6)*x2_0+(-6*x3_5-6*x4_5)*x2_1+(-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3)*x2_3+(-15*x3_2-15*x4_2)*x2_4-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(a-x3_0-x4_0)*x2_7+(-x3_7-x4_7)*x2_0+(-7*x3_6-7*x4_6)*x2_1+(-21*x3_5-21*x4_5)*x2_2+(-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, y_faux2_0-x3_6, y_faux3_0-x4_1]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = x3_6, y_faux3_0 = x4_1]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability:  591701046100000000000000
Random sample for the outputs and inputs is generated from  [a = 531793041619457232609114, d = 136708741986227899469341, k3 = 252197042566507951693232, k4 = 420255855899723896514306, k5 = 148657869486207266433981, k6 = 580735551921133288233203, k7 = 397528848232452598480263, b_0 = 137023610800363639344357, x1_0 = 32850160888961097387797, x2_0 = 267903862772809966256519, x3_0 = 158038838201726727047764, x4_0 = 500134783939653971556696, x5_0 = 504172568330506405532737]
The polynomial system widehat{E^t} contains  69 equations in  61  variables
            "new_logs/Tumor/transcendence_247_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, x3_6, x4_2]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b}
Algebraically independent parameters among derivatives: {x3_6, x4_2}
	Adding ODEs: [diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t)]
	New system: [diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t)]

=== Input info ===
State variables:          [b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t)]
Input variables:          []
Parameters in equations:  [a, d, k3, k4, k5, k6, k7]
===================

memory used=32286.0MB, alloc=215.8MB, time=294.79
memory used=32435.3MB, alloc=215.8MB, time=296.07
	Adding new y-equations: [y_faux2_0 = x3_6, y_faux3_0 = x4_2]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a-x3_0-x4_0)*x2_1-x2_0*(-b_1*d+x3_1+x4_1))*k5+k4*x2_1-k6*x3_1-k6*x4_1-x1_1*k3+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a-x3_0-x4_0)*x2_2+(b_2*d-x3_2-x4_2)*x2_0-2*x2_1*(-b_1*d+x3_1+x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a-x3_0-x4_0)*x2_3+(3*b_1*x2_2+3*b_2*x2_1+b_3*x2_0)*d+(-x3_3-x4_3)*x2_0+(-3*x3_2-3*x4_2)*x2_1-3*x2_2*(x3_1+x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3)*x2_1+(-6*x3_2-6*x4_2)*x2_2-4*x2_3*(x3_1+x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(a-x3_0-x4_0)*x2_5+(-x3_5-x4_5)*x2_0+(-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3)*x2_2+(-10*x3_2-10*x4_2)*x2_3-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(a-x3_0-x4_0)*x2_6+(-x3_6-x4_6)*x2_0+(-6*x3_5-6*x4_5)*x2_1+(-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3)*x2_3+(-15*x3_2-15*x4_2)*x2_4-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(a-x3_0-x4_0)*x2_7+(-x3_7-x4_7)*x2_0+(-7*x3_6-7*x4_6)*x2_1+(-21*x3_5-21*x4_5)*x2_2+(-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, y_faux2_0-x3_6, y_faux3_0-x4_2]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = x3_6, y_faux3_0 = x4_2]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability:  591701046100000000000000
Random sample for the outputs and inputs is generated from  [a = 22102173663343838040257, d = 370476877917113064179450, k3 = 167483118760613598276564, k4 = 522049436268533615689677, k5 = 105149913634821503165972, k6 = 324460259146954340836691, k7 = 327759477343709117987394, b_0 = 2888230714699231198472, x1_0 = 374003965026610319489059, x2_0 = 383188824585513725151080, x3_0 = 112685747003638458982146, x4_0 = 481102006208731844731737, x5_0 = 474587403930489809964653]
The polynomial system widehat{E^t} contains  69 equations in  61  variables
            "new_logs/Tumor/transcendence_248_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, x3_6, x4_3]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b}
Algebraically independent parameters among derivatives: {x3_6, x4_3}
	Adding ODEs: [diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t)]
	New system: [diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t)]

=== Input info ===
State variables:          [b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t)]
Input variables:          []
Parameters in equations:  [a, d, k3, k4, k5, k6, k7]
===================

memory used=32579.2MB, alloc=215.8MB, time=297.47
	Adding new y-equations: [y_faux2_0 = x3_6, y_faux3_0 = x4_3]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a-x3_0-x4_0)*x2_1-x2_0*(-b_1*d+x3_1+x4_1))*k5+k4*x2_1-k6*x3_1-k6*x4_1-x1_1*k3+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a-x3_0-x4_0)*x2_2+(b_2*d-x3_2-x4_2)*x2_0-2*x2_1*(-b_1*d+x3_1+x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a-x3_0-x4_0)*x2_3+(3*b_1*x2_2+3*b_2*x2_1+b_3*x2_0)*d+(-x3_3-x4_3)*x2_0+(-3*x3_2-3*x4_2)*x2_1-3*x2_2*(x3_1+x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3)*x2_1+(-6*x3_2-6*x4_2)*x2_2-4*x2_3*(x3_1+x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(a-x3_0-x4_0)*x2_5+(-x3_5-x4_5)*x2_0+(-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3)*x2_2+(-10*x3_2-10*x4_2)*x2_3-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(a-x3_0-x4_0)*x2_6+(-x3_6-x4_6)*x2_0+(-6*x3_5-6*x4_5)*x2_1+(-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3)*x2_3+(-15*x3_2-15*x4_2)*x2_4-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(a-x3_0-x4_0)*x2_7+(-x3_7-x4_7)*x2_0+(-7*x3_6-7*x4_6)*x2_1+(-21*x3_5-21*x4_5)*x2_2+(-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, y_faux2_0-x3_6, y_faux3_0-x4_3]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = x3_6, y_faux3_0 = x4_3]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability:  591701046100000000000000
Random sample for the outputs and inputs is generated from  [a = 249793918476062919691803, d = 240145164656177867682349, k3 = 367534148898330937476803, k4 = 587561235950502411858462, k5 = 124263045032586080559440, k6 = 529727770631255943508892, k7 = 307747831321876539583748, b_0 = 299638620844671252596752, x1_0 = 13753690187587736839849, x2_0 = 363510484360153329725489, x3_0 = 218056881909370892277869, x4_0 = 3574308880346143381813, x5_0 = 15620253254491839350690]
The polynomial system widehat{E^t} contains  69 equations in  61  variables
            "new_logs/Tumor/transcendence_249_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, x3_6, x4_4]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b}
Algebraically independent parameters among derivatives: {x3_6, x4_4}
	Adding ODEs: [diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t)]
	New system: [diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t)]

=== Input info ===
State variables:          [b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t)]
Input variables:          []
Parameters in equations:  [a, d, k3, k4, k5, k6, k7]
===================

memory used=32728.8MB, alloc=215.8MB, time=298.84
memory used=32874.8MB, alloc=215.8MB, time=300.21
	Adding new y-equations: [y_faux2_0 = x3_6, y_faux3_0 = x4_4]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a-x3_0-x4_0)*x2_1-x2_0*(-b_1*d+x3_1+x4_1))*k5+k4*x2_1-k6*x3_1-k6*x4_1-x1_1*k3+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a-x3_0-x4_0)*x2_2+(b_2*d-x3_2-x4_2)*x2_0-2*x2_1*(-b_1*d+x3_1+x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a-x3_0-x4_0)*x2_3+(3*b_1*x2_2+3*b_2*x2_1+b_3*x2_0)*d+(-x3_3-x4_3)*x2_0+(-3*x3_2-3*x4_2)*x2_1-3*x2_2*(x3_1+x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3)*x2_1+(-6*x3_2-6*x4_2)*x2_2-4*x2_3*(x3_1+x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(a-x3_0-x4_0)*x2_5+(-x3_5-x4_5)*x2_0+(-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3)*x2_2+(-10*x3_2-10*x4_2)*x2_3-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(a-x3_0-x4_0)*x2_6+(-x3_6-x4_6)*x2_0+(-6*x3_5-6*x4_5)*x2_1+(-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3)*x2_3+(-15*x3_2-15*x4_2)*x2_4-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(a-x3_0-x4_0)*x2_7+(-x3_7-x4_7)*x2_0+(-7*x3_6-7*x4_6)*x2_1+(-21*x3_5-21*x4_5)*x2_2+(-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, y_faux2_0-x3_6, y_faux3_0-x4_4]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = x3_6, y_faux3_0 = x4_4]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability:  591701046100000000000000
Random sample for the outputs and inputs is generated from  [a = 121699002171713635777007, d = 492734172793351717514151, k3 = 261054034127106381881220, k4 = 61353321361529926510023, k5 = 244129916913846522509121, k6 = 171088812856671066775928, k7 = 387942280305523546982602, b_0 = 570999689263947424854451, x1_0 = 116454968396751987417800, x2_0 = 450378745456125796791746, x3_0 = 76725158683035587637548, x4_0 = 242450263379032217610896, x5_0 = 24769313299899169112647]
The polynomial system widehat{E^t} contains  69 equations in  61  variables
            "new_logs/Tumor/transcendence_250_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, x3_6, x4_5]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b}
Algebraically independent parameters among derivatives: {x3_6, x4_5}
	Adding ODEs: [diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t)]
	New system: [diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t)]

=== Input info ===
State variables:          [b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t)]
Input variables:          []
Parameters in equations:  [a, d, k3, k4, k5, k6, k7]
===================

memory used=33020.7MB, alloc=215.8MB, time=301.67
	Adding new y-equations: [y_faux2_0 = x3_6, y_faux3_0 = x4_5]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a-x3_0-x4_0)*x2_1-x2_0*(-b_1*d+x3_1+x4_1))*k5+k4*x2_1-k6*x3_1-k6*x4_1-x1_1*k3+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a-x3_0-x4_0)*x2_2+(b_2*d-x3_2-x4_2)*x2_0-2*x2_1*(-b_1*d+x3_1+x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a-x3_0-x4_0)*x2_3+(3*b_1*x2_2+3*b_2*x2_1+b_3*x2_0)*d+(-x3_3-x4_3)*x2_0+(-3*x3_2-3*x4_2)*x2_1-3*x2_2*(x3_1+x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3)*x2_1+(-6*x3_2-6*x4_2)*x2_2-4*x2_3*(x3_1+x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(a-x3_0-x4_0)*x2_5+(-x3_5-x4_5)*x2_0+(-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3)*x2_2+(-10*x3_2-10*x4_2)*x2_3-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(a-x3_0-x4_0)*x2_6+(-x3_6-x4_6)*x2_0+(-6*x3_5-6*x4_5)*x2_1+(-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3)*x2_3+(-15*x3_2-15*x4_2)*x2_4-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(a-x3_0-x4_0)*x2_7+(-x3_7-x4_7)*x2_0+(-7*x3_6-7*x4_6)*x2_1+(-21*x3_5-21*x4_5)*x2_2+(-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, y_faux2_0-x3_6, y_faux3_0-x4_5]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = x3_6, y_faux3_0 = x4_5]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability:  591701046100000000000000
Random sample for the outputs and inputs is generated from  [a = 186907374394248726985167, d = 515329058394707546960733, k3 = 112280456258740715019182, k4 = 355723627650423458307268, k5 = 398387398222091729193887, k6 = 221104907908598362510113, k7 = 216176832627254879796489, b_0 = 57027850946793950782829, x1_0 = 158313465672994115569608, x2_0 = 560898465807412842964414, x3_0 = 587584261279544839099525, x4_0 = 213153158034900793736286, x5_0 = 128435672733832517833893]
The polynomial system widehat{E^t} contains  69 equations in  61  variables
            "new_logs/Tumor/transcendence_251_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, x3_6, x4_6]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [b, x3_6, x4_7]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b}
Algebraically independent parameters among derivatives: {x3_6, x4_7}
	Adding ODEs: [diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t)]
	New system: [diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t)]

=== Input info ===
State variables:          [b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t)]
Input variables:          []
Parameters in equations:  [a, d, k3, k4, k5, k6, k7]
===================

memory used=33173.4MB, alloc=215.8MB, time=303.04
memory used=33327.8MB, alloc=215.8MB, time=304.34
	Adding new y-equations: [y_faux2_0 = x3_6, y_faux3_0 = x4_7]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a-x3_0-x4_0)*x2_1-x2_0*(-b_1*d+x3_1+x4_1))*k5+k4*x2_1-k6*x3_1-k6*x4_1-x1_1*k3+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a-x3_0-x4_0)*x2_2+(b_2*d-x3_2-x4_2)*x2_0-2*x2_1*(-b_1*d+x3_1+x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a-x3_0-x4_0)*x2_3+(3*b_1*x2_2+3*b_2*x2_1+b_3*x2_0)*d+(-x3_3-x4_3)*x2_0+(-3*x3_2-3*x4_2)*x2_1-3*x2_2*(x3_1+x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3)*x2_1+(-6*x3_2-6*x4_2)*x2_2-4*x2_3*(x3_1+x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(a-x3_0-x4_0)*x2_5+(-x3_5-x4_5)*x2_0+(-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3)*x2_2+(-10*x3_2-10*x4_2)*x2_3-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(a-x3_0-x4_0)*x2_6+(-x3_6-x4_6)*x2_0+(-6*x3_5-6*x4_5)*x2_1+(-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3)*x2_3+(-15*x3_2-15*x4_2)*x2_4-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(a-x3_0-x4_0)*x2_7+(-x3_7-x4_7)*x2_0+(-7*x3_6-7*x4_6)*x2_1+(-21*x3_5-21*x4_5)*x2_2+(-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, y_faux2_0-x3_6, y_faux3_0-x4_7]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = x3_6, y_faux3_0 = x4_7]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability:  591701046100000000000000
Random sample for the outputs and inputs is generated from  [a = 439650430115789637440187, d = 108609271874970053328720, k3 = 461555670104869324849506, k4 = 46416361792796981896209, k5 = 499144080488131398309170, k6 = 66278762280758355404679, k7 = 46873187379193296424484, b_0 = 205588956127633792143038, x1_0 = 218402869035958675139075, x2_0 = 505412886363738155759308, x3_0 = 320456330119484990007251, x4_0 = 385098662475227410281097, x5_0 = 360123476493060879712231]
The polynomial system widehat{E^t} contains  69 equations in  61  variables
            "new_logs/Tumor/transcendence_253_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, x3_7, x4(0)]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b}
Algebraically independent parameters among derivatives: {x3_7, x4(0)}
	Adding ODEs: [diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t)]
	New system: [diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t)]

=== Input info ===
State variables:          [b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t)]
Input variables:          []
Parameters in equations:  [a, d, k3, k4, k5, k6, k7]
===================

memory used=33474.1MB, alloc=215.8MB, time=305.81
	Adding new y-equations: [y_faux2_0 = x3_7, y_faux3_0 = x4_0]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a-x3_0-x4_0)*x2_1-x2_0*(-b_1*d+x3_1+x4_1))*k5+k4*x2_1-k6*x3_1-k6*x4_1-x1_1*k3+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a-x3_0-x4_0)*x2_2+(b_2*d-x3_2-x4_2)*x2_0-2*x2_1*(-b_1*d+x3_1+x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a-x3_0-x4_0)*x2_3+(3*b_1*x2_2+3*b_2*x2_1+b_3*x2_0)*d+(-x3_3-x4_3)*x2_0+(-3*x3_2-3*x4_2)*x2_1-3*x2_2*(x3_1+x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3)*x2_1+(-6*x3_2-6*x4_2)*x2_2-4*x2_3*(x3_1+x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(a-x3_0-x4_0)*x2_5+(-x3_5-x4_5)*x2_0+(-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3)*x2_2+(-10*x3_2-10*x4_2)*x2_3-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(a-x3_0-x4_0)*x2_6+(-x3_6-x4_6)*x2_0+(-6*x3_5-6*x4_5)*x2_1+(-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3)*x2_3+(-15*x3_2-15*x4_2)*x2_4-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(a-x3_0-x4_0)*x2_7+(-x3_7-x4_7)*x2_0+(-7*x3_6-7*x4_6)*x2_1+(-21*x3_5-21*x4_5)*x2_2+(-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, y_faux2_0-x3_7, y_faux3_0-x4_0]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = x3_7, y_faux3_0 = x4_0]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability:  591701046100000000000000
Random sample for the outputs and inputs is generated from  [a = 255329828271816003313398, d = 164074316569367801495033, k3 = 507382098365413649056359, k4 = 537134654120217223446417, k5 = 501108400438036544336601, k6 = 443035997594579024677284, k7 = 225217677776041335536234, b_0 = 336226395183466322380995, x1_0 = 78457324692073798473590, x2_0 = 54914635973205486609476, x3_0 = 294141587113138197048138, x4_0 = 99533426899805038214063, x5_0 = 20418402995521434855799]
The polynomial system widehat{E^t} contains  69 equations in  61  variables
            "new_logs/Tumor/transcendence_254_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, x3_7, x4_1]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b}
Algebraically independent parameters among derivatives: {x3_7, x4_1}
	Adding ODEs: [diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t)]
	New system: [diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t)]

=== Input info ===
State variables:          [b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t)]
Input variables:          []
Parameters in equations:  [a, d, k3, k4, k5, k6, k7]
===================

memory used=33624.1MB, alloc=215.8MB, time=307.21
