    |\^/|     Maple 2021 (X86 64 LINUX)
._|\|   |/|_. Copyright (c) Maplesoft, a division of Waterloo Maple Inc. 2021
 \  MAPLE  /  All rights reserved. Maple is a trademark of
 <____ ____>  Waterloo Maple Inc.
      |       Type ? for help.
# Example (with initial conditions assumed being unknown) from Section 3 of "Examples of testing global identifiability of biological and biomedical models with the DAISY software"
# by M.P. Saccomani, S. Audoly, G. Bellu, L. D'Angio

# read "../IdentifiabilityODE.mpl";
> read "../generate_tr_bases.mpl";
Warning, (in IdentifiabilityODE) `degrees` is implicitly declared local
|../generate_tr_bases.mpl:321|
Warning, (in IdentifiabilityODE) `theta_l_new` is implicitly declared local
|../generate_tr_bases.mpl:2|
Warning, (in IdentifiabilityODE) `degree_table` is implicitly declared local
|../generate_tr_bases.mpl:451|
Warning, (in IdentifiabilityODE) `occurrence_table` is implicitly declared local
|../generate_tr_bases.mpl:452|


> sigma := [
>   diff(x1(t), t) = -(k3 + k7) * x1(t) + k4 * x2(t),
>   diff(x2(t), t) = k3 * x1(t) - (k4 + a * k5 + b * d * k5) * x2(t) + k6 * x3(t) + k6 * x4(t) + k5 * x2(t) * x3(t) + k5 * x2(t) * x4(t),
>   diff(x3(t), t) = a * k5 * x2(t) - k6 * x3(t) - k5 * x2(t) * x3(t),
>   diff(x4(t), t) = b * d * k5 * x2(t) - k6 * x4(t) - k5 * x2(t) * x4(t),
>   diff(x5(t), t) = k7 * x1(t),
>   y1(t) = x5(t)
>   # y2(t) = a,
>   # y3(t) = b,
>   # y4(t) = d
> ];
          d                                       d
sigma := [-- x1(t) = -(k3 + k7) x1(t) + k4 x2(t), -- x2(t) = k3 x1(t)
          dt                                      dt

     - (b d k5 + a k5 + k4) x2(t) + k6 x3(t) + k6 x4(t) + k5 x2(t) x3(t)

                       d
     + k5 x2(t) x4(t), -- x3(t) = a k5 x2(t) - k6 x3(t) - k5 x2(t) x3(t),
                       dt

    d                                                    d
    -- x4(t) = b d k5 x2(t) - k6 x4(t) - k5 x2(t) x4(t), -- x5(t) = k7 x1(t),
    dt                                                   dt

    y1(t) = x5(t)]


# IdentifiabilityODE(sigma, GetParameters(sigma), substitute_tr_basis=true):
> IdentifiabilityODE(sigma, GetParameters(sigma), "new_logs/Tumor", sub_transc=true):

=======================================================
0. Extracting states, inputs, outputs, and parameters from the system
=======================================================

=== Input info ===
State variables:          [x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t)]
Input variables:          []
Parameters in equations:  [a, b, d, k3, k4, k5, k6, k7]
===================


=======================================================
1. Constructing the maximal polynomial system
=======================================================
memory used=35.0MB, alloc=108.3MB, time=0.59

=======================================================
2. Truncating the polynomial system based on the Jacobian condition
=======================================================
Bound D_1 for testing the rank of the Jacobian probabilistically:  91728000
Orders of prolongations of the outputs (beta) =  [11]
Orders of prolongations of the state variables (alpha) =  [10, 9, 8, 8, 11]

=======================================================
3. Assessing local identifiability
=======================================================
memory used=100.9MB, alloc=118.5MB, time=1.41
memory used=136.1MB, alloc=120.8MB, time=1.78
Locally identifiable paramters:  [k3, k4, k5, k6, k7, x1(0), x2(0), x5(0)]
Nonidentifiable parameter:  [a, b, d, x3(0), x4(0)]
Number of transcendence basis choices before "filtering": 15180
Number of transcendence basis choices after "filtering": 969

=======================================================
Creating Truncated system (old)
=======================================================
Bound D_2 for assessing global identifiability with tr. basis:  525956485400000000000000
Random sample for the outputs and inputs is generated from  [a = 190524951028500899457014, b = 405346082640529100253410, d = 219226966365426482429240, k3 = 283845405524797377411955, k4 = 204047484646924278658029, k5 = 100702522761265878525273, k6 = 198186078522006168502038, k7 = 523811287319040678558598, x1_0 = 372946810324674124236979, x2_0 = 132801981157096140599358, x3_0 = 42471404077146788067166, x4_0 = 484997088083759312591218, x5_0 = 84828761008412331612725]
The polynomial system widehat{E^t} contains  52 equations in  54  variables
Algebraically independent parameters (candidates) [a, b, d]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, b, x3(0)]

=======================================================
Substituting transcendence basis.
=======================================================
memory used=219.9MB, alloc=123.5MB, time=2.56
Algebraically independent parameters among nonidentifiable: {a, b}
Algebraically independent parameters among derivatives: {x3(0)}
	Adding ODEs: [diff(a(t),t) = 0, diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = a(t), y_faux2(t) = b(t)]
	New system: [diff(a(t),t) = 0, diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a(t)*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a(t)*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = a(t), y_faux2(t) = b(t)]

=== Input info ===
State variables:          [a(t), b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t), y_faux2(t)]
Input variables:          []
Parameters in equations:  [d, k3, k4, k5, k6, k7]
===================

memory used=272.9MB, alloc=155.5MB, time=3.25
memory used=324.5MB, alloc=155.5MB, time=3.86
memory used=442.1MB, alloc=191.8MB, time=4.72
	Adding new y-equations: [y_faux3_0 = x3_0]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-a_0, a_1, y_faux2_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a_0*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a_0-x3_0-x4_0)*x2_1+x2_0*(b_1*d+a_1-x3_1-x4_1))*k5-x1_1*k3+k4*x2_1-k6*x3_1-k6*x4_1+x2_2, -a_0*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a_0-x3_0-x4_0)*x2_2+(b_2*d+a_2-x3_2-x4_2)*x2_0+2*x2_1*(b_1*d+a_1-x3_1-x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, a_2, b_2, ((-a_1+x3_1)*x2_0-x2_1*(a_0-x3_0))*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a_0-x3_0-x4_0)*x2_3+(b_3*d+a_3-x3_3-x4_3)*x2_0+(3*b_2*d+3*a_2-3*x3_2-3*x4_2)*x2_1+3*x2_2*(b_1*d+a_1-x3_1-x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, a_3, b_3, ((x3_2-a_2)*x2_0+(2*x3_1-2*a_1)*x2_1-x2_2*(a_0-x3_0))*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a_0-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(a_4-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3+4*a_3)*x2_1+(-6*x3_2-6*x4_2+6*a_2)*x2_2-4*x2_3*(x3_1+x4_1-a_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, a_4, b_4, ((x3_3-a_3)*x2_0+(3*x3_2-3*a_2)*x2_1+(3*x3_1-3*a_1)*x2_2+x2_3*(-a_0+x3_0))*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(-x3_0-x4_0+a_0)*x2_5+(a_5-x3_5-x4_5)*x2_0+(5*a_4-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3+10*a_3)*x2_2+(-10*x3_2-10*x4_2+10*a_2)*x2_3-5*x2_4*(x3_1+x4_1-a_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, a_5, b_5, ((x3_4-a_4)*x2_0+(4*x3_3-4*a_3)*x2_1+(6*x3_2-6*a_2)*x2_2+(4*x3_1-4*a_1)*x2_3+x2_4*(-a_0+x3_0))*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(-x3_0-x4_0+a_0)*x2_6+(a_6-x3_6-x4_6)*x2_0+(6*a_5-6*x3_5-6*x4_5)*x2_1+(15*a_4-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3+20*a_3)*x2_3+(-15*x3_2-15*x4_2+15*a_2)*x2_4-6*x2_5*(x3_1+x4_1-a_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, a_6, b_6, ((x3_5-a_5)*x2_0+(5*x3_4-5*a_4)*x2_1+(10*x3_3-10*a_3)*x2_2+(10*x3_2-10*a_2)*x2_3+(5*x3_1-5*a_1)*x2_4+x2_5*(-a_0+x3_0))*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(-x3_0-x4_0+a_0)*x2_7+(a_7-x3_7-x4_7)*x2_0+(7*a_6-7*x3_6-7*x4_6)*x2_1+(21*a_5-21*x3_5-21*x4_5)*x2_2+(35*a_4-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3+35*a_3)*x2_4+(-21*x3_2-21*x4_2+21*a_2)*x2_5-7*x2_6*(x3_1+x4_1-a_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, a_7, b_7, ((x3_6-a_6)*x2_0+(6*x3_5-6*a_5)*x2_1+(15*x3_4-15*a_4)*x2_2+(20*x3_3-20*a_3)*x2_3+(15*x3_2-15*a_2)*x2_4+(6*x3_1-6*a_1)*x2_5+x2_6*(-a_0+x3_0))*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -a_1+y_faux1_1, -a_2+y_faux1_2, -a_3+y_faux1_3, -a_4+y_faux1_4, -a_5+y_faux1_5, -a_6+y_faux1_6, -a_7+y_faux1_7, -b_1+y_faux2_1, -b_2+y_faux2_2, -b_3+y_faux2_3, -b_4+y_faux2_4, -b_5+y_faux2_5, -b_6+y_faux2_6, -b_7+y_faux2_7, y_faux3_0-x3_0]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = a_0, y_faux1_1 = a_1, y_faux1_2 = a_2, y_faux1_3 = a_3, y_faux1_4 = a_4, y_faux1_5 = a_5, y_faux1_6 = a_6, y_faux1_7 = a_7, y_faux1_8 = a_8, y_faux1_9 = a_9, y_faux1_10 = a_10, y_faux1_11 = a_11, y_faux1_12 = a_12, y_faux1_13 = a_13, y_faux1_14 = a_14, y_faux2_0 = b_0, y_faux2_1 = b_1, y_faux2_2 = b_2, y_faux2_3 = b_3, y_faux2_4 = b_4, y_faux2_5 = b_5, y_faux2_6 = b_6, y_faux2_7 = b_7, y_faux2_8 = b_8, y_faux2_9 = b_9, y_faux2_10 = b_10, y_faux2_11 = b_11, y_faux2_12 = b_12, y_faux2_13 = b_13, y_faux2_14 = b_14, y_faux3_0 = x3_0]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability without tr. basis:  525956485400000000000000
Random sample for the outputs and inputs is generated from  [d = .6475597657e24, k3 = .4693799097e24, k4 = .3778111669e24, k5 = .5954804038e24, k6 = .4851740151e24, k7 = .3633080382e24, a_0 = .6310059456e24, b_0 = .1871634488e24, x1_0 = .3786830945e23, x2_0 = .3584323817e24, x3_0 = .2344319180e24, x4_0 = .2682382073e24, x5_0 = .3901973405e24]
The polynomial system widehat{E^t} contains  83 equations in  68  variables
             "new_logs/Tumor/transcendence_2_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [a, b, x3_1]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {a, b}
Algebraically independent parameters among derivatives: {x3_1}
	Adding ODEs: [diff(a(t),t) = 0, diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = a(t), y_faux2(t) = b(t)]
	New system: [diff(a(t),t) = 0, diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a(t)*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a(t)*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = a(t), y_faux2(t) = b(t)]

=== Input info ===
State variables:          [a(t), b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t), y_faux2(t)]
Input variables:          []
Parameters in equations:  [d, k3, k4, k5, k6, k7]
===================

memory used=561.7MB, alloc=183.8MB, time=5.72
memory used=678.1MB, alloc=183.8MB, time=6.81
memory used=777.6MB, alloc=183.8MB, time=7.57
	Adding new y-equations: [y_faux3_0 = x3_1]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-a_0, a_1, y_faux2_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a_0*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a_0-x3_0-x4_0)*x2_1+x2_0*(b_1*d+a_1-x3_1-x4_1))*k5-x1_1*k3+k4*x2_1-k6*x3_1-k6*x4_1+x2_2, -a_0*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a_0-x3_0-x4_0)*x2_2+(b_2*d+a_2-x3_2-x4_2)*x2_0+2*x2_1*(b_1*d+a_1-x3_1-x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, a_2, b_2, ((-a_1+x3_1)*x2_0-x2_1*(a_0-x3_0))*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a_0-x3_0-x4_0)*x2_3+(b_3*d+a_3-x3_3-x4_3)*x2_0+(3*b_2*d+3*a_2-3*x3_2-3*x4_2)*x2_1+3*x2_2*(b_1*d+a_1-x3_1-x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, a_3, b_3, ((x3_2-a_2)*x2_0+(2*x3_1-2*a_1)*x2_1-x2_2*(a_0-x3_0))*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a_0-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(a_4-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3+4*a_3)*x2_1+(-6*x3_2-6*x4_2+6*a_2)*x2_2-4*x2_3*(x3_1+x4_1-a_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, a_4, b_4, ((x3_3-a_3)*x2_0+(3*x3_2-3*a_2)*x2_1+(3*x3_1-3*a_1)*x2_2+x2_3*(-a_0+x3_0))*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(-x3_0-x4_0+a_0)*x2_5+(a_5-x3_5-x4_5)*x2_0+(5*a_4-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3+10*a_3)*x2_2+(-10*x3_2-10*x4_2+10*a_2)*x2_3-5*x2_4*(x3_1+x4_1-a_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, a_5, b_5, ((x3_4-a_4)*x2_0+(4*x3_3-4*a_3)*x2_1+(6*x3_2-6*a_2)*x2_2+(4*x3_1-4*a_1)*x2_3+x2_4*(-a_0+x3_0))*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(-x3_0-x4_0+a_0)*x2_6+(a_6-x3_6-x4_6)*x2_0+(6*a_5-6*x3_5-6*x4_5)*x2_1+(15*a_4-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3+20*a_3)*x2_3+(-15*x3_2-15*x4_2+15*a_2)*x2_4-6*x2_5*(x3_1+x4_1-a_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, a_6, b_6, ((x3_5-a_5)*x2_0+(5*x3_4-5*a_4)*x2_1+(10*x3_3-10*a_3)*x2_2+(10*x3_2-10*a_2)*x2_3+(5*x3_1-5*a_1)*x2_4+x2_5*(-a_0+x3_0))*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(-x3_0-x4_0+a_0)*x2_7+(a_7-x3_7-x4_7)*x2_0+(7*a_6-7*x3_6-7*x4_6)*x2_1+(21*a_5-21*x3_5-21*x4_5)*x2_2+(35*a_4-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3+35*a_3)*x2_4+(-21*x3_2-21*x4_2+21*a_2)*x2_5-7*x2_6*(x3_1+x4_1-a_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, a_7, b_7, ((x3_6-a_6)*x2_0+(6*x3_5-6*a_5)*x2_1+(15*x3_4-15*a_4)*x2_2+(20*x3_3-20*a_3)*x2_3+(15*x3_2-15*a_2)*x2_4+(6*x3_1-6*a_1)*x2_5+x2_6*(-a_0+x3_0))*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -a_1+y_faux1_1, -a_2+y_faux1_2, -a_3+y_faux1_3, -a_4+y_faux1_4, -a_5+y_faux1_5, -a_6+y_faux1_6, -a_7+y_faux1_7, -b_1+y_faux2_1, -b_2+y_faux2_2, -b_3+y_faux2_3, -b_4+y_faux2_4, -b_5+y_faux2_5, -b_6+y_faux2_6, -b_7+y_faux2_7, y_faux3_0-x3_1]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = a_0, y_faux1_1 = a_1, y_faux1_2 = a_2, y_faux1_3 = a_3, y_faux1_4 = a_4, y_faux1_5 = a_5, y_faux1_6 = a_6, y_faux1_7 = a_7, y_faux1_8 = a_8, y_faux1_9 = a_9, y_faux1_10 = a_10, y_faux1_11 = a_11, y_faux1_12 = a_12, y_faux1_13 = a_13, y_faux1_14 = a_14, y_faux2_0 = b_0, y_faux2_1 = b_1, y_faux2_2 = b_2, y_faux2_3 = b_3, y_faux2_4 = b_4, y_faux2_5 = b_5, y_faux2_6 = b_6, y_faux2_7 = b_7, y_faux2_8 = b_8, y_faux2_9 = b_9, y_faux2_10 = b_10, y_faux2_11 = b_11, y_faux2_12 = b_12, y_faux2_13 = b_13, y_faux2_14 = b_14, y_faux3_0 = x3_1]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability without tr. basis:  525956485400000000000000
Random sample for the outputs and inputs is generated from  [d = .5693644816e22, k3 = .3766861752e24, k4 = .4264833542e24, k5 = .2530943945e24, k6 = .5334942390e24, k7 = .1531210376e23, a_0 = .6305121366e24, b_0 = .1775421310e24, x1_0 = .1428070459e24, x2_0 = .4089393647e24, x3_0 = .2764995271e24, x4_0 = .1847416576e24, x5_0 = .4940981342e24]
The polynomial system widehat{E^t} contains  83 equations in  68  variables
             "new_logs/Tumor/transcendence_3_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [a, b, x3_2]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {a, b}
Algebraically independent parameters among derivatives: {x3_2}
	Adding ODEs: [diff(a(t),t) = 0, diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = a(t), y_faux2(t) = b(t)]
	New system: [diff(a(t),t) = 0, diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a(t)*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a(t)*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = a(t), y_faux2(t) = b(t)]

=== Input info ===
State variables:          [a(t), b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t), y_faux2(t)]
Input variables:          []
Parameters in equations:  [d, k3, k4, k5, k6, k7]
===================

memory used=889.7MB, alloc=183.8MB, time=8.77
memory used=1000.7MB, alloc=183.8MB, time=9.65
memory used=1100.8MB, alloc=183.8MB, time=10.41
	Adding new y-equations: [y_faux3_0 = x3_2]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-a_0, a_1, y_faux2_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a_0*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a_0-x3_0-x4_0)*x2_1+x2_0*(b_1*d+a_1-x3_1-x4_1))*k5-x1_1*k3+k4*x2_1-k6*x3_1-k6*x4_1+x2_2, -a_0*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a_0-x3_0-x4_0)*x2_2+(b_2*d+a_2-x3_2-x4_2)*x2_0+2*x2_1*(b_1*d+a_1-x3_1-x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, a_2, b_2, ((-a_1+x3_1)*x2_0-x2_1*(a_0-x3_0))*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a_0-x3_0-x4_0)*x2_3+(b_3*d+a_3-x3_3-x4_3)*x2_0+(3*b_2*d+3*a_2-3*x3_2-3*x4_2)*x2_1+3*x2_2*(b_1*d+a_1-x3_1-x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, a_3, b_3, ((x3_2-a_2)*x2_0+(2*x3_1-2*a_1)*x2_1-x2_2*(a_0-x3_0))*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a_0-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(a_4-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3+4*a_3)*x2_1+(-6*x3_2-6*x4_2+6*a_2)*x2_2-4*x2_3*(x3_1+x4_1-a_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, a_4, b_4, ((x3_3-a_3)*x2_0+(3*x3_2-3*a_2)*x2_1+(3*x3_1-3*a_1)*x2_2+x2_3*(-a_0+x3_0))*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(-x3_0-x4_0+a_0)*x2_5+(a_5-x3_5-x4_5)*x2_0+(5*a_4-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3+10*a_3)*x2_2+(-10*x3_2-10*x4_2+10*a_2)*x2_3-5*x2_4*(x3_1+x4_1-a_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, a_5, b_5, ((x3_4-a_4)*x2_0+(4*x3_3-4*a_3)*x2_1+(6*x3_2-6*a_2)*x2_2+(4*x3_1-4*a_1)*x2_3+x2_4*(-a_0+x3_0))*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(-x3_0-x4_0+a_0)*x2_6+(a_6-x3_6-x4_6)*x2_0+(6*a_5-6*x3_5-6*x4_5)*x2_1+(15*a_4-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3+20*a_3)*x2_3+(-15*x3_2-15*x4_2+15*a_2)*x2_4-6*x2_5*(x3_1+x4_1-a_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, a_6, b_6, ((x3_5-a_5)*x2_0+(5*x3_4-5*a_4)*x2_1+(10*x3_3-10*a_3)*x2_2+(10*x3_2-10*a_2)*x2_3+(5*x3_1-5*a_1)*x2_4+x2_5*(-a_0+x3_0))*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(-x3_0-x4_0+a_0)*x2_7+(a_7-x3_7-x4_7)*x2_0+(7*a_6-7*x3_6-7*x4_6)*x2_1+(21*a_5-21*x3_5-21*x4_5)*x2_2+(35*a_4-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3+35*a_3)*x2_4+(-21*x3_2-21*x4_2+21*a_2)*x2_5-7*x2_6*(x3_1+x4_1-a_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, a_7, b_7, ((x3_6-a_6)*x2_0+(6*x3_5-6*a_5)*x2_1+(15*x3_4-15*a_4)*x2_2+(20*x3_3-20*a_3)*x2_3+(15*x3_2-15*a_2)*x2_4+(6*x3_1-6*a_1)*x2_5+x2_6*(-a_0+x3_0))*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -a_1+y_faux1_1, -a_2+y_faux1_2, -a_3+y_faux1_3, -a_4+y_faux1_4, -a_5+y_faux1_5, -a_6+y_faux1_6, -a_7+y_faux1_7, -b_1+y_faux2_1, -b_2+y_faux2_2, -b_3+y_faux2_3, -b_4+y_faux2_4, -b_5+y_faux2_5, -b_6+y_faux2_6, -b_7+y_faux2_7, y_faux3_0-x3_2]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = a_0, y_faux1_1 = a_1, y_faux1_2 = a_2, y_faux1_3 = a_3, y_faux1_4 = a_4, y_faux1_5 = a_5, y_faux1_6 = a_6, y_faux1_7 = a_7, y_faux1_8 = a_8, y_faux1_9 = a_9, y_faux1_10 = a_10, y_faux1_11 = a_11, y_faux1_12 = a_12, y_faux1_13 = a_13, y_faux1_14 = a_14, y_faux2_0 = b_0, y_faux2_1 = b_1, y_faux2_2 = b_2, y_faux2_3 = b_3, y_faux2_4 = b_4, y_faux2_5 = b_5, y_faux2_6 = b_6, y_faux2_7 = b_7, y_faux2_8 = b_8, y_faux2_9 = b_9, y_faux2_10 = b_10, y_faux2_11 = b_11, y_faux2_12 = b_12, y_faux2_13 = b_13, y_faux2_14 = b_14, y_faux3_0 = x3_2]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability without tr. basis:  525956485400000000000000
Random sample for the outputs and inputs is generated from  [d = .6357185055e24, k3 = .6502214164e24, k4 = .5744365821e24, k5 = .6913108358e24, k6 = .3163115606e24, k7 = .3495145091e24, a_0 = .6047047576e24, b_0 = .1720115653e24, x1_0 = .6951367099e24, x2_0 = .5453724398e24, x3_0 = .6366002306e24, x4_0 = .7955738022e23, x5_0 = .2037524166e24]
The polynomial system widehat{E^t} contains  83 equations in  68  variables
             "new_logs/Tumor/transcendence_4_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [a, b, x3_3]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {a, b}
Algebraically independent parameters among derivatives: {x3_3}
	Adding ODEs: [diff(a(t),t) = 0, diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = a(t), y_faux2(t) = b(t)]
	New system: [diff(a(t),t) = 0, diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a(t)*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a(t)*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = a(t), y_faux2(t) = b(t)]

=== Input info ===
State variables:          [a(t), b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t), y_faux2(t)]
Input variables:          []
Parameters in equations:  [d, k3, k4, k5, k6, k7]
===================

memory used=1212.4MB, alloc=183.8MB, time=11.60
memory used=1312.4MB, alloc=183.8MB, time=12.37
	Adding new y-equations: [y_faux3_0 = x3_3]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-a_0, a_1, y_faux2_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a_0*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a_0-x3_0-x4_0)*x2_1+x2_0*(b_1*d+a_1-x3_1-x4_1))*k5-x1_1*k3+k4*x2_1-k6*x3_1-k6*x4_1+x2_2, -a_0*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a_0-x3_0-x4_0)*x2_2+(b_2*d+a_2-x3_2-x4_2)*x2_0+2*x2_1*(b_1*d+a_1-x3_1-x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, a_2, b_2, ((-a_1+x3_1)*x2_0-x2_1*(a_0-x3_0))*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a_0-x3_0-x4_0)*x2_3+(b_3*d+a_3-x3_3-x4_3)*x2_0+(3*b_2*d+3*a_2-3*x3_2-3*x4_2)*x2_1+3*x2_2*(b_1*d+a_1-x3_1-x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, a_3, b_3, ((x3_2-a_2)*x2_0+(2*x3_1-2*a_1)*x2_1-x2_2*(a_0-x3_0))*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a_0-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(a_4-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3+4*a_3)*x2_1+(-6*x3_2-6*x4_2+6*a_2)*x2_2-4*x2_3*(x3_1+x4_1-a_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, a_4, b_4, ((x3_3-a_3)*x2_0+(3*x3_2-3*a_2)*x2_1+(3*x3_1-3*a_1)*x2_2+x2_3*(-a_0+x3_0))*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(-x3_0-x4_0+a_0)*x2_5+(a_5-x3_5-x4_5)*x2_0+(5*a_4-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3+10*a_3)*x2_2+(-10*x3_2-10*x4_2+10*a_2)*x2_3-5*x2_4*(x3_1+x4_1-a_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, a_5, b_5, ((x3_4-a_4)*x2_0+(4*x3_3-4*a_3)*x2_1+(6*x3_2-6*a_2)*x2_2+(4*x3_1-4*a_1)*x2_3+x2_4*(-a_0+x3_0))*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(-x3_0-x4_0+a_0)*x2_6+(a_6-x3_6-x4_6)*x2_0+(6*a_5-6*x3_5-6*x4_5)*x2_1+(15*a_4-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3+20*a_3)*x2_3+(-15*x3_2-15*x4_2+15*a_2)*x2_4-6*x2_5*(x3_1+x4_1-a_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, a_6, b_6, ((x3_5-a_5)*x2_0+(5*x3_4-5*a_4)*x2_1+(10*x3_3-10*a_3)*x2_2+(10*x3_2-10*a_2)*x2_3+(5*x3_1-5*a_1)*x2_4+x2_5*(-a_0+x3_0))*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(-x3_0-x4_0+a_0)*x2_7+(a_7-x3_7-x4_7)*x2_0+(7*a_6-7*x3_6-7*x4_6)*x2_1+(21*a_5-21*x3_5-21*x4_5)*x2_2+(35*a_4-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3+35*a_3)*x2_4+(-21*x3_2-21*x4_2+21*a_2)*x2_5-7*x2_6*(x3_1+x4_1-a_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, a_7, b_7, ((x3_6-a_6)*x2_0+(6*x3_5-6*a_5)*x2_1+(15*x3_4-15*a_4)*x2_2+(20*x3_3-20*a_3)*x2_3+(15*x3_2-15*a_2)*x2_4+(6*x3_1-6*a_1)*x2_5+x2_6*(-a_0+x3_0))*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -a_1+y_faux1_1, -a_2+y_faux1_2, -a_3+y_faux1_3, -a_4+y_faux1_4, -a_5+y_faux1_5, -a_6+y_faux1_6, -a_7+y_faux1_7, -b_1+y_faux2_1, -b_2+y_faux2_2, -b_3+y_faux2_3, -b_4+y_faux2_4, -b_5+y_faux2_5, -b_6+y_faux2_6, -b_7+y_faux2_7, y_faux3_0-x3_3]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = a_0, y_faux1_1 = a_1, y_faux1_2 = a_2, y_faux1_3 = a_3, y_faux1_4 = a_4, y_faux1_5 = a_5, y_faux1_6 = a_6, y_faux1_7 = a_7, y_faux1_8 = a_8, y_faux1_9 = a_9, y_faux1_10 = a_10, y_faux1_11 = a_11, y_faux1_12 = a_12, y_faux1_13 = a_13, y_faux1_14 = a_14, y_faux2_0 = b_0, y_faux2_1 = b_1, y_faux2_2 = b_2, y_faux2_3 = b_3, y_faux2_4 = b_4, y_faux2_5 = b_5, y_faux2_6 = b_6, y_faux2_7 = b_7, y_faux2_8 = b_8, y_faux2_9 = b_9, y_faux2_10 = b_10, y_faux2_11 = b_11, y_faux2_12 = b_12, y_faux2_13 = b_13, y_faux2_14 = b_14, y_faux3_0 = x3_3]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability without tr. basis:  525956485400000000000000
Random sample for the outputs and inputs is generated from  [d = .6498400719e24, k3 = .3151824031e24, k4 = .2314812398e24, k5 = .3732334424e23, k6 = .3712517203e24, k7 = .2510383390e24, a_0 = .1618298533e24, b_0 = .1837230959e24, x1_0 = .5656223253e24, x2_0 = .1035364189e24, x3_0 = .8563618421e23, x4_0 = .3120839581e24, x5_0 = .4129276432e24]
The polynomial system widehat{E^t} contains  83 equations in  68  variables
             "new_logs/Tumor/transcendence_5_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [a, b, x3_4]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {a, b}
Algebraically independent parameters among derivatives: {x3_4}
	Adding ODEs: [diff(a(t),t) = 0, diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = a(t), y_faux2(t) = b(t)]
	New system: [diff(a(t),t) = 0, diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a(t)*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a(t)*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = a(t), y_faux2(t) = b(t)]

=== Input info ===
State variables:          [a(t), b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t), y_faux2(t)]
Input variables:          []
Parameters in equations:  [d, k3, k4, k5, k6, k7]
===================

memory used=1430.4MB, alloc=183.8MB, time=13.41
memory used=1550.3MB, alloc=183.8MB, time=14.56
memory used=1650.2MB, alloc=183.8MB, time=15.35
	Adding new y-equations: [y_faux3_0 = x3_4]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-a_0, a_1, y_faux2_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a_0*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a_0-x3_0-x4_0)*x2_1+x2_0*(b_1*d+a_1-x3_1-x4_1))*k5-x1_1*k3+k4*x2_1-k6*x3_1-k6*x4_1+x2_2, -a_0*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a_0-x3_0-x4_0)*x2_2+(b_2*d+a_2-x3_2-x4_2)*x2_0+2*x2_1*(b_1*d+a_1-x3_1-x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, a_2, b_2, ((-a_1+x3_1)*x2_0-x2_1*(a_0-x3_0))*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a_0-x3_0-x4_0)*x2_3+(b_3*d+a_3-x3_3-x4_3)*x2_0+(3*b_2*d+3*a_2-3*x3_2-3*x4_2)*x2_1+3*x2_2*(b_1*d+a_1-x3_1-x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, a_3, b_3, ((x3_2-a_2)*x2_0+(2*x3_1-2*a_1)*x2_1-x2_2*(a_0-x3_0))*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a_0-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(a_4-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3+4*a_3)*x2_1+(-6*x3_2-6*x4_2+6*a_2)*x2_2-4*x2_3*(x3_1+x4_1-a_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, a_4, b_4, ((x3_3-a_3)*x2_0+(3*x3_2-3*a_2)*x2_1+(3*x3_1-3*a_1)*x2_2+x2_3*(-a_0+x3_0))*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(-x3_0-x4_0+a_0)*x2_5+(a_5-x3_5-x4_5)*x2_0+(5*a_4-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3+10*a_3)*x2_2+(-10*x3_2-10*x4_2+10*a_2)*x2_3-5*x2_4*(x3_1+x4_1-a_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, a_5, b_5, ((x3_4-a_4)*x2_0+(4*x3_3-4*a_3)*x2_1+(6*x3_2-6*a_2)*x2_2+(4*x3_1-4*a_1)*x2_3+x2_4*(-a_0+x3_0))*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(-x3_0-x4_0+a_0)*x2_6+(a_6-x3_6-x4_6)*x2_0+(6*a_5-6*x3_5-6*x4_5)*x2_1+(15*a_4-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3+20*a_3)*x2_3+(-15*x3_2-15*x4_2+15*a_2)*x2_4-6*x2_5*(x3_1+x4_1-a_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, a_6, b_6, ((x3_5-a_5)*x2_0+(5*x3_4-5*a_4)*x2_1+(10*x3_3-10*a_3)*x2_2+(10*x3_2-10*a_2)*x2_3+(5*x3_1-5*a_1)*x2_4+x2_5*(-a_0+x3_0))*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(-x3_0-x4_0+a_0)*x2_7+(a_7-x3_7-x4_7)*x2_0+(7*a_6-7*x3_6-7*x4_6)*x2_1+(21*a_5-21*x3_5-21*x4_5)*x2_2+(35*a_4-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3+35*a_3)*x2_4+(-21*x3_2-21*x4_2+21*a_2)*x2_5-7*x2_6*(x3_1+x4_1-a_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, a_7, b_7, ((x3_6-a_6)*x2_0+(6*x3_5-6*a_5)*x2_1+(15*x3_4-15*a_4)*x2_2+(20*x3_3-20*a_3)*x2_3+(15*x3_2-15*a_2)*x2_4+(6*x3_1-6*a_1)*x2_5+x2_6*(-a_0+x3_0))*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -a_1+y_faux1_1, -a_2+y_faux1_2, -a_3+y_faux1_3, -a_4+y_faux1_4, -a_5+y_faux1_5, -a_6+y_faux1_6, -a_7+y_faux1_7, -b_1+y_faux2_1, -b_2+y_faux2_2, -b_3+y_faux2_3, -b_4+y_faux2_4, -b_5+y_faux2_5, -b_6+y_faux2_6, -b_7+y_faux2_7, y_faux3_0-x3_4]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = a_0, y_faux1_1 = a_1, y_faux1_2 = a_2, y_faux1_3 = a_3, y_faux1_4 = a_4, y_faux1_5 = a_5, y_faux1_6 = a_6, y_faux1_7 = a_7, y_faux1_8 = a_8, y_faux1_9 = a_9, y_faux1_10 = a_10, y_faux1_11 = a_11, y_faux1_12 = a_12, y_faux1_13 = a_13, y_faux1_14 = a_14, y_faux2_0 = b_0, y_faux2_1 = b_1, y_faux2_2 = b_2, y_faux2_3 = b_3, y_faux2_4 = b_4, y_faux2_5 = b_5, y_faux2_6 = b_6, y_faux2_7 = b_7, y_faux2_8 = b_8, y_faux2_9 = b_9, y_faux2_10 = b_10, y_faux2_11 = b_11, y_faux2_12 = b_12, y_faux2_13 = b_13, y_faux2_14 = b_14, y_faux3_0 = x3_4]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability without tr. basis:  525956485400000000000000
Random sample for the outputs and inputs is generated from  [d = .1436816175e24, k3 = .3573075965e24, k4 = .4461790632e24, k5 = .1542109909e24, k6 = .6027863247e24, k7 = .5642490369e24, a_0 = .1028769855e24, b_0 = .4508933950e24, x1_0 = .6249570081e24, x2_0 = .1774726748e24, x3_0 = .6857452951e24, x4_0 = .6466631508e24, x5_0 = .8353616150e22]
The polynomial system widehat{E^t} contains  83 equations in  68  variables
             "new_logs/Tumor/transcendence_6_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [a, b, x3_5]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {a, b}
Algebraically independent parameters among derivatives: {x3_5}
	Adding ODEs: [diff(a(t),t) = 0, diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = a(t), y_faux2(t) = b(t)]
	New system: [diff(a(t),t) = 0, diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a(t)*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a(t)*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = a(t), y_faux2(t) = b(t)]

=== Input info ===
State variables:          [a(t), b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t), y_faux2(t)]
Input variables:          []
Parameters in equations:  [d, k3, k4, k5, k6, k7]
===================

memory used=1762.9MB, alloc=183.8MB, time=16.52
memory used=1866.7MB, alloc=183.8MB, time=17.34
	Adding new y-equations: [y_faux3_0 = x3_5]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-a_0, a_1, y_faux2_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a_0*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a_0-x3_0-x4_0)*x2_1+x2_0*(b_1*d+a_1-x3_1-x4_1))*k5-x1_1*k3+k4*x2_1-k6*x3_1-k6*x4_1+x2_2, -a_0*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a_0-x3_0-x4_0)*x2_2+(b_2*d+a_2-x3_2-x4_2)*x2_0+2*x2_1*(b_1*d+a_1-x3_1-x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, a_2, b_2, ((-a_1+x3_1)*x2_0-x2_1*(a_0-x3_0))*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a_0-x3_0-x4_0)*x2_3+(b_3*d+a_3-x3_3-x4_3)*x2_0+(3*b_2*d+3*a_2-3*x3_2-3*x4_2)*x2_1+3*x2_2*(b_1*d+a_1-x3_1-x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, a_3, b_3, ((x3_2-a_2)*x2_0+(2*x3_1-2*a_1)*x2_1-x2_2*(a_0-x3_0))*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a_0-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(a_4-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3+4*a_3)*x2_1+(-6*x3_2-6*x4_2+6*a_2)*x2_2-4*x2_3*(x3_1+x4_1-a_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, a_4, b_4, ((x3_3-a_3)*x2_0+(3*x3_2-3*a_2)*x2_1+(3*x3_1-3*a_1)*x2_2+x2_3*(-a_0+x3_0))*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(-x3_0-x4_0+a_0)*x2_5+(a_5-x3_5-x4_5)*x2_0+(5*a_4-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3+10*a_3)*x2_2+(-10*x3_2-10*x4_2+10*a_2)*x2_3-5*x2_4*(x3_1+x4_1-a_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, a_5, b_5, ((x3_4-a_4)*x2_0+(4*x3_3-4*a_3)*x2_1+(6*x3_2-6*a_2)*x2_2+(4*x3_1-4*a_1)*x2_3+x2_4*(-a_0+x3_0))*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(-x3_0-x4_0+a_0)*x2_6+(a_6-x3_6-x4_6)*x2_0+(6*a_5-6*x3_5-6*x4_5)*x2_1+(15*a_4-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3+20*a_3)*x2_3+(-15*x3_2-15*x4_2+15*a_2)*x2_4-6*x2_5*(x3_1+x4_1-a_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, a_6, b_6, ((x3_5-a_5)*x2_0+(5*x3_4-5*a_4)*x2_1+(10*x3_3-10*a_3)*x2_2+(10*x3_2-10*a_2)*x2_3+(5*x3_1-5*a_1)*x2_4+x2_5*(-a_0+x3_0))*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(-x3_0-x4_0+a_0)*x2_7+(a_7-x3_7-x4_7)*x2_0+(7*a_6-7*x3_6-7*x4_6)*x2_1+(21*a_5-21*x3_5-21*x4_5)*x2_2+(35*a_4-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3+35*a_3)*x2_4+(-21*x3_2-21*x4_2+21*a_2)*x2_5-7*x2_6*(x3_1+x4_1-a_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, a_7, b_7, ((x3_6-a_6)*x2_0+(6*x3_5-6*a_5)*x2_1+(15*x3_4-15*a_4)*x2_2+(20*x3_3-20*a_3)*x2_3+(15*x3_2-15*a_2)*x2_4+(6*x3_1-6*a_1)*x2_5+x2_6*(-a_0+x3_0))*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -a_1+y_faux1_1, -a_2+y_faux1_2, -a_3+y_faux1_3, -a_4+y_faux1_4, -a_5+y_faux1_5, -a_6+y_faux1_6, -a_7+y_faux1_7, -b_1+y_faux2_1, -b_2+y_faux2_2, -b_3+y_faux2_3, -b_4+y_faux2_4, -b_5+y_faux2_5, -b_6+y_faux2_6, -b_7+y_faux2_7, y_faux3_0-x3_5]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = a_0, y_faux1_1 = a_1, y_faux1_2 = a_2, y_faux1_3 = a_3, y_faux1_4 = a_4, y_faux1_5 = a_5, y_faux1_6 = a_6, y_faux1_7 = a_7, y_faux1_8 = a_8, y_faux1_9 = a_9, y_faux1_10 = a_10, y_faux1_11 = a_11, y_faux1_12 = a_12, y_faux1_13 = a_13, y_faux1_14 = a_14, y_faux2_0 = b_0, y_faux2_1 = b_1, y_faux2_2 = b_2, y_faux2_3 = b_3, y_faux2_4 = b_4, y_faux2_5 = b_5, y_faux2_6 = b_6, y_faux2_7 = b_7, y_faux2_8 = b_8, y_faux2_9 = b_9, y_faux2_10 = b_10, y_faux2_11 = b_11, y_faux2_12 = b_12, y_faux2_13 = b_13, y_faux2_14 = b_14, y_faux3_0 = x3_5]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability without tr. basis:  525956485400000000000000
Random sample for the outputs and inputs is generated from  [d = .2861469326e24, k3 = .3057234591e23, k4 = .3212479556e24, k5 = .6130418557e24, k6 = .6202794132e24, k7 = .5265969888e24, a_0 = .5055988318e23, b_0 = .4314131846e24, x1_0 = .6762260871e24, x2_0 = .9830889662e23, x3_0 = .5732495573e24, x4_0 = .1975726349e24, x5_0 = .7464271234e23]
The polynomial system widehat{E^t} contains  83 equations in  68  variables
             "new_logs/Tumor/transcendence_7_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [a, b, x3_6]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {a, b}
Algebraically independent parameters among derivatives: {x3_6}
	Adding ODEs: [diff(a(t),t) = 0, diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = a(t), y_faux2(t) = b(t)]
	New system: [diff(a(t),t) = 0, diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a(t)*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a(t)*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = a(t), y_faux2(t) = b(t)]

=== Input info ===
State variables:          [a(t), b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t), y_faux2(t)]
Input variables:          []
Parameters in equations:  [d, k3, k4, k5, k6, k7]
===================

memory used=1989.6MB, alloc=183.8MB, time=18.40
memory used=2104.7MB, alloc=183.8MB, time=19.57
memory used=2204.9MB, alloc=183.8MB, time=20.32
	Adding new y-equations: [y_faux3_0 = x3_6]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-a_0, a_1, y_faux2_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a_0*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a_0-x3_0-x4_0)*x2_1+x2_0*(b_1*d+a_1-x3_1-x4_1))*k5-x1_1*k3+k4*x2_1-k6*x3_1-k6*x4_1+x2_2, -a_0*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a_0-x3_0-x4_0)*x2_2+(b_2*d+a_2-x3_2-x4_2)*x2_0+2*x2_1*(b_1*d+a_1-x3_1-x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, a_2, b_2, ((-a_1+x3_1)*x2_0-x2_1*(a_0-x3_0))*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a_0-x3_0-x4_0)*x2_3+(b_3*d+a_3-x3_3-x4_3)*x2_0+(3*b_2*d+3*a_2-3*x3_2-3*x4_2)*x2_1+3*x2_2*(b_1*d+a_1-x3_1-x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, a_3, b_3, ((x3_2-a_2)*x2_0+(2*x3_1-2*a_1)*x2_1-x2_2*(a_0-x3_0))*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a_0-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(a_4-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3+4*a_3)*x2_1+(-6*x3_2-6*x4_2+6*a_2)*x2_2-4*x2_3*(x3_1+x4_1-a_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, a_4, b_4, ((x3_3-a_3)*x2_0+(3*x3_2-3*a_2)*x2_1+(3*x3_1-3*a_1)*x2_2+x2_3*(-a_0+x3_0))*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(-x3_0-x4_0+a_0)*x2_5+(a_5-x3_5-x4_5)*x2_0+(5*a_4-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3+10*a_3)*x2_2+(-10*x3_2-10*x4_2+10*a_2)*x2_3-5*x2_4*(x3_1+x4_1-a_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, a_5, b_5, ((x3_4-a_4)*x2_0+(4*x3_3-4*a_3)*x2_1+(6*x3_2-6*a_2)*x2_2+(4*x3_1-4*a_1)*x2_3+x2_4*(-a_0+x3_0))*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(-x3_0-x4_0+a_0)*x2_6+(a_6-x3_6-x4_6)*x2_0+(6*a_5-6*x3_5-6*x4_5)*x2_1+(15*a_4-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3+20*a_3)*x2_3+(-15*x3_2-15*x4_2+15*a_2)*x2_4-6*x2_5*(x3_1+x4_1-a_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, a_6, b_6, ((x3_5-a_5)*x2_0+(5*x3_4-5*a_4)*x2_1+(10*x3_3-10*a_3)*x2_2+(10*x3_2-10*a_2)*x2_3+(5*x3_1-5*a_1)*x2_4+x2_5*(-a_0+x3_0))*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(-x3_0-x4_0+a_0)*x2_7+(a_7-x3_7-x4_7)*x2_0+(7*a_6-7*x3_6-7*x4_6)*x2_1+(21*a_5-21*x3_5-21*x4_5)*x2_2+(35*a_4-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3+35*a_3)*x2_4+(-21*x3_2-21*x4_2+21*a_2)*x2_5-7*x2_6*(x3_1+x4_1-a_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, a_7, b_7, ((x3_6-a_6)*x2_0+(6*x3_5-6*a_5)*x2_1+(15*x3_4-15*a_4)*x2_2+(20*x3_3-20*a_3)*x2_3+(15*x3_2-15*a_2)*x2_4+(6*x3_1-6*a_1)*x2_5+x2_6*(-a_0+x3_0))*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -a_1+y_faux1_1, -a_2+y_faux1_2, -a_3+y_faux1_3, -a_4+y_faux1_4, -a_5+y_faux1_5, -a_6+y_faux1_6, -a_7+y_faux1_7, -b_1+y_faux2_1, -b_2+y_faux2_2, -b_3+y_faux2_3, -b_4+y_faux2_4, -b_5+y_faux2_5, -b_6+y_faux2_6, -b_7+y_faux2_7, y_faux3_0-x3_6]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = a_0, y_faux1_1 = a_1, y_faux1_2 = a_2, y_faux1_3 = a_3, y_faux1_4 = a_4, y_faux1_5 = a_5, y_faux1_6 = a_6, y_faux1_7 = a_7, y_faux1_8 = a_8, y_faux1_9 = a_9, y_faux1_10 = a_10, y_faux1_11 = a_11, y_faux1_12 = a_12, y_faux1_13 = a_13, y_faux1_14 = a_14, y_faux2_0 = b_0, y_faux2_1 = b_1, y_faux2_2 = b_2, y_faux2_3 = b_3, y_faux2_4 = b_4, y_faux2_5 = b_5, y_faux2_6 = b_6, y_faux2_7 = b_7, y_faux2_8 = b_8, y_faux2_9 = b_9, y_faux2_10 = b_10, y_faux2_11 = b_11, y_faux2_12 = b_12, y_faux2_13 = b_13, y_faux2_14 = b_14, y_faux3_0 = x3_6]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability without tr. basis:  525956485400000000000000
Random sample for the outputs and inputs is generated from  [d = .5157149570e24, k3 = .3722730254e24, k4 = .2067886003e24, k5 = .4256948561e24, k6 = .1332716242e24, k7 = .1721118083e23, a_0 = .5651064952e24, b_0 = .5444384050e24, x1_0 = .5336048196e24, x2_0 = .3382901159e24, x3_0 = .6118346219e24, x4_0 = .3490477023e24, x5_0 = .4733452054e24]
The polynomial system widehat{E^t} contains  83 equations in  68  variables
             "new_logs/Tumor/transcendence_8_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [a, b, x3_7]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {a, b}
Algebraically independent parameters among derivatives: {x3_7}
	Adding ODEs: [diff(a(t),t) = 0, diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = a(t), y_faux2(t) = b(t)]
	New system: [diff(a(t),t) = 0, diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a(t)*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a(t)*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = a(t), y_faux2(t) = b(t)]

=== Input info ===
State variables:          [a(t), b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t), y_faux2(t)]
Input variables:          []
Parameters in equations:  [d, k3, k4, k5, k6, k7]
===================

memory used=2320.0MB, alloc=183.8MB, time=21.46
memory used=2436.0MB, alloc=183.8MB, time=22.39
memory used=2536.3MB, alloc=183.8MB, time=23.15
	Adding new y-equations: [y_faux3_0 = x3_7]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-a_0, a_1, y_faux2_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a_0*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a_0-x3_0-x4_0)*x2_1+x2_0*(b_1*d+a_1-x3_1-x4_1))*k5-x1_1*k3+k4*x2_1-k6*x3_1-k6*x4_1+x2_2, -a_0*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a_0-x3_0-x4_0)*x2_2+(b_2*d+a_2-x3_2-x4_2)*x2_0+2*x2_1*(b_1*d+a_1-x3_1-x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, a_2, b_2, ((-a_1+x3_1)*x2_0-x2_1*(a_0-x3_0))*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a_0-x3_0-x4_0)*x2_3+(b_3*d+a_3-x3_3-x4_3)*x2_0+(3*b_2*d+3*a_2-3*x3_2-3*x4_2)*x2_1+3*x2_2*(b_1*d+a_1-x3_1-x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, a_3, b_3, ((x3_2-a_2)*x2_0+(2*x3_1-2*a_1)*x2_1-x2_2*(a_0-x3_0))*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a_0-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(a_4-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3+4*a_3)*x2_1+(-6*x3_2-6*x4_2+6*a_2)*x2_2-4*x2_3*(x3_1+x4_1-a_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, a_4, b_4, ((x3_3-a_3)*x2_0+(3*x3_2-3*a_2)*x2_1+(3*x3_1-3*a_1)*x2_2+x2_3*(-a_0+x3_0))*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(-x3_0-x4_0+a_0)*x2_5+(a_5-x3_5-x4_5)*x2_0+(5*a_4-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3+10*a_3)*x2_2+(-10*x3_2-10*x4_2+10*a_2)*x2_3-5*x2_4*(x3_1+x4_1-a_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, a_5, b_5, ((x3_4-a_4)*x2_0+(4*x3_3-4*a_3)*x2_1+(6*x3_2-6*a_2)*x2_2+(4*x3_1-4*a_1)*x2_3+x2_4*(-a_0+x3_0))*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(-x3_0-x4_0+a_0)*x2_6+(a_6-x3_6-x4_6)*x2_0+(6*a_5-6*x3_5-6*x4_5)*x2_1+(15*a_4-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3+20*a_3)*x2_3+(-15*x3_2-15*x4_2+15*a_2)*x2_4-6*x2_5*(x3_1+x4_1-a_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, a_6, b_6, ((x3_5-a_5)*x2_0+(5*x3_4-5*a_4)*x2_1+(10*x3_3-10*a_3)*x2_2+(10*x3_2-10*a_2)*x2_3+(5*x3_1-5*a_1)*x2_4+x2_5*(-a_0+x3_0))*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(-x3_0-x4_0+a_0)*x2_7+(a_7-x3_7-x4_7)*x2_0+(7*a_6-7*x3_6-7*x4_6)*x2_1+(21*a_5-21*x3_5-21*x4_5)*x2_2+(35*a_4-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3+35*a_3)*x2_4+(-21*x3_2-21*x4_2+21*a_2)*x2_5-7*x2_6*(x3_1+x4_1-a_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, a_7, b_7, ((x3_6-a_6)*x2_0+(6*x3_5-6*a_5)*x2_1+(15*x3_4-15*a_4)*x2_2+(20*x3_3-20*a_3)*x2_3+(15*x3_2-15*a_2)*x2_4+(6*x3_1-6*a_1)*x2_5+x2_6*(-a_0+x3_0))*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -a_1+y_faux1_1, -a_2+y_faux1_2, -a_3+y_faux1_3, -a_4+y_faux1_4, -a_5+y_faux1_5, -a_6+y_faux1_6, -a_7+y_faux1_7, -b_1+y_faux2_1, -b_2+y_faux2_2, -b_3+y_faux2_3, -b_4+y_faux2_4, -b_5+y_faux2_5, -b_6+y_faux2_6, -b_7+y_faux2_7, y_faux3_0-x3_7]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = a_0, y_faux1_1 = a_1, y_faux1_2 = a_2, y_faux1_3 = a_3, y_faux1_4 = a_4, y_faux1_5 = a_5, y_faux1_6 = a_6, y_faux1_7 = a_7, y_faux1_8 = a_8, y_faux1_9 = a_9, y_faux1_10 = a_10, y_faux1_11 = a_11, y_faux1_12 = a_12, y_faux1_13 = a_13, y_faux1_14 = a_14, y_faux2_0 = b_0, y_faux2_1 = b_1, y_faux2_2 = b_2, y_faux2_3 = b_3, y_faux2_4 = b_4, y_faux2_5 = b_5, y_faux2_6 = b_6, y_faux2_7 = b_7, y_faux2_8 = b_8, y_faux2_9 = b_9, y_faux2_10 = b_10, y_faux2_11 = b_11, y_faux2_12 = b_12, y_faux2_13 = b_13, y_faux2_14 = b_14, y_faux3_0 = x3_7]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability without tr. basis:  525956485400000000000000
Random sample for the outputs and inputs is generated from  [d = .2775932113e24, k3 = .6712845515e24, k4 = .3098512222e24, k5 = .1572505951e24, k6 = .2420669863e24, k7 = .1177363292e24, a_0 = .3657677183e23, b_0 = .1744144339e24, x1_0 = .3011926129e24, x2_0 = .1251930104e24, x3_0 = .3541356965e23, x4_0 = .2569019486e23, x5_0 = .4375310141e24]
The polynomial system widehat{E^t} contains  83 equations in  68  variables
             "new_logs/Tumor/transcendence_9_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [a, b, x4(0)]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {a, b}
Algebraically independent parameters among derivatives: {x4(0)}
	Adding ODEs: [diff(a(t),t) = 0, diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = a(t), y_faux2(t) = b(t)]
	New system: [diff(a(t),t) = 0, diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a(t)*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a(t)*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = a(t), y_faux2(t) = b(t)]

=== Input info ===
State variables:          [a(t), b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t), y_faux2(t)]
Input variables:          []
Parameters in equations:  [d, k3, k4, k5, k6, k7]
===================

memory used=2650.9MB, alloc=183.8MB, time=24.43
memory used=2751.6MB, alloc=183.8MB, time=25.22
	Adding new y-equations: [y_faux3_0 = x4_0]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-a_0, a_1, y_faux2_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a_0*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a_0-x3_0-x4_0)*x2_1+x2_0*(b_1*d+a_1-x3_1-x4_1))*k5-x1_1*k3+k4*x2_1-k6*x3_1-k6*x4_1+x2_2, -a_0*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a_0-x3_0-x4_0)*x2_2+(b_2*d+a_2-x3_2-x4_2)*x2_0+2*x2_1*(b_1*d+a_1-x3_1-x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, a_2, b_2, ((-a_1+x3_1)*x2_0-x2_1*(a_0-x3_0))*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a_0-x3_0-x4_0)*x2_3+(b_3*d+a_3-x3_3-x4_3)*x2_0+(3*b_2*d+3*a_2-3*x3_2-3*x4_2)*x2_1+3*x2_2*(b_1*d+a_1-x3_1-x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, a_3, b_3, ((x3_2-a_2)*x2_0+(2*x3_1-2*a_1)*x2_1-x2_2*(a_0-x3_0))*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a_0-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(a_4-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3+4*a_3)*x2_1+(-6*x3_2-6*x4_2+6*a_2)*x2_2-4*x2_3*(x3_1+x4_1-a_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, a_4, b_4, ((x3_3-a_3)*x2_0+(3*x3_2-3*a_2)*x2_1+(3*x3_1-3*a_1)*x2_2+x2_3*(-a_0+x3_0))*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(-x3_0-x4_0+a_0)*x2_5+(a_5-x3_5-x4_5)*x2_0+(5*a_4-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3+10*a_3)*x2_2+(-10*x3_2-10*x4_2+10*a_2)*x2_3-5*x2_4*(x3_1+x4_1-a_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, a_5, b_5, ((x3_4-a_4)*x2_0+(4*x3_3-4*a_3)*x2_1+(6*x3_2-6*a_2)*x2_2+(4*x3_1-4*a_1)*x2_3+x2_4*(-a_0+x3_0))*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(-x3_0-x4_0+a_0)*x2_6+(a_6-x3_6-x4_6)*x2_0+(6*a_5-6*x3_5-6*x4_5)*x2_1+(15*a_4-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3+20*a_3)*x2_3+(-15*x3_2-15*x4_2+15*a_2)*x2_4-6*x2_5*(x3_1+x4_1-a_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, a_6, b_6, ((x3_5-a_5)*x2_0+(5*x3_4-5*a_4)*x2_1+(10*x3_3-10*a_3)*x2_2+(10*x3_2-10*a_2)*x2_3+(5*x3_1-5*a_1)*x2_4+x2_5*(-a_0+x3_0))*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(-x3_0-x4_0+a_0)*x2_7+(a_7-x3_7-x4_7)*x2_0+(7*a_6-7*x3_6-7*x4_6)*x2_1+(21*a_5-21*x3_5-21*x4_5)*x2_2+(35*a_4-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3+35*a_3)*x2_4+(-21*x3_2-21*x4_2+21*a_2)*x2_5-7*x2_6*(x3_1+x4_1-a_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, a_7, b_7, ((x3_6-a_6)*x2_0+(6*x3_5-6*a_5)*x2_1+(15*x3_4-15*a_4)*x2_2+(20*x3_3-20*a_3)*x2_3+(15*x3_2-15*a_2)*x2_4+(6*x3_1-6*a_1)*x2_5+x2_6*(-a_0+x3_0))*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -a_1+y_faux1_1, -a_2+y_faux1_2, -a_3+y_faux1_3, -a_4+y_faux1_4, -a_5+y_faux1_5, -a_6+y_faux1_6, -a_7+y_faux1_7, -b_1+y_faux2_1, -b_2+y_faux2_2, -b_3+y_faux2_3, -b_4+y_faux2_4, -b_5+y_faux2_5, -b_6+y_faux2_6, -b_7+y_faux2_7, y_faux3_0-x4_0]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = a_0, y_faux1_1 = a_1, y_faux1_2 = a_2, y_faux1_3 = a_3, y_faux1_4 = a_4, y_faux1_5 = a_5, y_faux1_6 = a_6, y_faux1_7 = a_7, y_faux1_8 = a_8, y_faux1_9 = a_9, y_faux1_10 = a_10, y_faux1_11 = a_11, y_faux1_12 = a_12, y_faux1_13 = a_13, y_faux1_14 = a_14, y_faux2_0 = b_0, y_faux2_1 = b_1, y_faux2_2 = b_2, y_faux2_3 = b_3, y_faux2_4 = b_4, y_faux2_5 = b_5, y_faux2_6 = b_6, y_faux2_7 = b_7, y_faux2_8 = b_8, y_faux2_9 = b_9, y_faux2_10 = b_10, y_faux2_11 = b_11, y_faux2_12 = b_12, y_faux2_13 = b_13, y_faux2_14 = b_14, y_faux3_0 = x4_0]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability without tr. basis:  525956485400000000000000
Random sample for the outputs and inputs is generated from  [d = .5772207525e24, k3 = .3051737710e24, k4 = .3281571310e24, k5 = .2146538101e24, k6 = .5696472955e24, k7 = .4698962799e24, a_0 = .6814774722e24, b_0 = .2595188526e23, x1_0 = .3347536517e24, x2_0 = .5221322710e24, x3_0 = .3808946389e24, x4_0 = .1843351828e24, x5_0 = .1601142896e24]
The polynomial system widehat{E^t} contains  83 equations in  68  variables
            "new_logs/Tumor/transcendence_10_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [a, b, x4_1]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {a, b}
Algebraically independent parameters among derivatives: {x4_1}
	Adding ODEs: [diff(a(t),t) = 0, diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = a(t), y_faux2(t) = b(t)]
	New system: [diff(a(t),t) = 0, diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a(t)*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a(t)*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = a(t), y_faux2(t) = b(t)]

=== Input info ===
State variables:          [a(t), b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t), y_faux2(t)]
Input variables:          []
Parameters in equations:  [d, k3, k4, k5, k6, k7]
===================

memory used=2871.4MB, alloc=183.8MB, time=26.31
memory used=2995.5MB, alloc=183.8MB, time=27.40
memory used=3095.8MB, alloc=183.8MB, time=28.19
	Adding new y-equations: [y_faux3_0 = x4_1]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-a_0, a_1, y_faux2_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a_0*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a_0-x3_0-x4_0)*x2_1+x2_0*(b_1*d+a_1-x3_1-x4_1))*k5-x1_1*k3+k4*x2_1-k6*x3_1-k6*x4_1+x2_2, -a_0*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a_0-x3_0-x4_0)*x2_2+(b_2*d+a_2-x3_2-x4_2)*x2_0+2*x2_1*(b_1*d+a_1-x3_1-x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, a_2, b_2, ((-a_1+x3_1)*x2_0-x2_1*(a_0-x3_0))*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a_0-x3_0-x4_0)*x2_3+(b_3*d+a_3-x3_3-x4_3)*x2_0+(3*b_2*d+3*a_2-3*x3_2-3*x4_2)*x2_1+3*x2_2*(b_1*d+a_1-x3_1-x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, a_3, b_3, ((x3_2-a_2)*x2_0+(2*x3_1-2*a_1)*x2_1-x2_2*(a_0-x3_0))*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a_0-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(a_4-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3+4*a_3)*x2_1+(-6*x3_2-6*x4_2+6*a_2)*x2_2-4*x2_3*(x3_1+x4_1-a_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, a_4, b_4, ((x3_3-a_3)*x2_0+(3*x3_2-3*a_2)*x2_1+(3*x3_1-3*a_1)*x2_2+x2_3*(-a_0+x3_0))*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(-x3_0-x4_0+a_0)*x2_5+(a_5-x3_5-x4_5)*x2_0+(5*a_4-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3+10*a_3)*x2_2+(-10*x3_2-10*x4_2+10*a_2)*x2_3-5*x2_4*(x3_1+x4_1-a_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, a_5, b_5, ((x3_4-a_4)*x2_0+(4*x3_3-4*a_3)*x2_1+(6*x3_2-6*a_2)*x2_2+(4*x3_1-4*a_1)*x2_3+x2_4*(-a_0+x3_0))*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(-x3_0-x4_0+a_0)*x2_6+(a_6-x3_6-x4_6)*x2_0+(6*a_5-6*x3_5-6*x4_5)*x2_1+(15*a_4-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3+20*a_3)*x2_3+(-15*x3_2-15*x4_2+15*a_2)*x2_4-6*x2_5*(x3_1+x4_1-a_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, a_6, b_6, ((x3_5-a_5)*x2_0+(5*x3_4-5*a_4)*x2_1+(10*x3_3-10*a_3)*x2_2+(10*x3_2-10*a_2)*x2_3+(5*x3_1-5*a_1)*x2_4+x2_5*(-a_0+x3_0))*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(-x3_0-x4_0+a_0)*x2_7+(a_7-x3_7-x4_7)*x2_0+(7*a_6-7*x3_6-7*x4_6)*x2_1+(21*a_5-21*x3_5-21*x4_5)*x2_2+(35*a_4-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3+35*a_3)*x2_4+(-21*x3_2-21*x4_2+21*a_2)*x2_5-7*x2_6*(x3_1+x4_1-a_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, a_7, b_7, ((x3_6-a_6)*x2_0+(6*x3_5-6*a_5)*x2_1+(15*x3_4-15*a_4)*x2_2+(20*x3_3-20*a_3)*x2_3+(15*x3_2-15*a_2)*x2_4+(6*x3_1-6*a_1)*x2_5+x2_6*(-a_0+x3_0))*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -a_1+y_faux1_1, -a_2+y_faux1_2, -a_3+y_faux1_3, -a_4+y_faux1_4, -a_5+y_faux1_5, -a_6+y_faux1_6, -a_7+y_faux1_7, -b_1+y_faux2_1, -b_2+y_faux2_2, -b_3+y_faux2_3, -b_4+y_faux2_4, -b_5+y_faux2_5, -b_6+y_faux2_6, -b_7+y_faux2_7, y_faux3_0-x4_1]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = a_0, y_faux1_1 = a_1, y_faux1_2 = a_2, y_faux1_3 = a_3, y_faux1_4 = a_4, y_faux1_5 = a_5, y_faux1_6 = a_6, y_faux1_7 = a_7, y_faux1_8 = a_8, y_faux1_9 = a_9, y_faux1_10 = a_10, y_faux1_11 = a_11, y_faux1_12 = a_12, y_faux1_13 = a_13, y_faux1_14 = a_14, y_faux2_0 = b_0, y_faux2_1 = b_1, y_faux2_2 = b_2, y_faux2_3 = b_3, y_faux2_4 = b_4, y_faux2_5 = b_5, y_faux2_6 = b_6, y_faux2_7 = b_7, y_faux2_8 = b_8, y_faux2_9 = b_9, y_faux2_10 = b_10, y_faux2_11 = b_11, y_faux2_12 = b_12, y_faux2_13 = b_13, y_faux2_14 = b_14, y_faux3_0 = x4_1]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability without tr. basis:  525956485400000000000000
Random sample for the outputs and inputs is generated from  [d = .4236866708e24, k3 = .1184265964e24, k4 = .6351567063e24, k5 = .5029426280e24, k6 = .3639327600e24, k7 = .3699433756e24, a_0 = .4860657002e24, b_0 = .6244094758e24, x1_0 = .1310714722e24, x2_0 = .5293898588e24, x3_0 = .2918699069e23, x4_0 = .1736774411e23, x5_0 = .2520774009e24]
The polynomial system widehat{E^t} contains  83 equations in  68  variables
            "new_logs/Tumor/transcendence_11_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [a, b, x4_2]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {a, b}
Algebraically independent parameters among derivatives: {x4_2}
	Adding ODEs: [diff(a(t),t) = 0, diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = a(t), y_faux2(t) = b(t)]
	New system: [diff(a(t),t) = 0, diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a(t)*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a(t)*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = a(t), y_faux2(t) = b(t)]

=== Input info ===
State variables:          [a(t), b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t), y_faux2(t)]
Input variables:          []
Parameters in equations:  [d, k3, k4, k5, k6, k7]
===================

memory used=3211.6MB, alloc=183.8MB, time=29.45
memory used=3311.9MB, alloc=183.8MB, time=30.20
	Adding new y-equations: [y_faux3_0 = x4_2]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-a_0, a_1, y_faux2_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a_0*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a_0-x3_0-x4_0)*x2_1+x2_0*(b_1*d+a_1-x3_1-x4_1))*k5-x1_1*k3+k4*x2_1-k6*x3_1-k6*x4_1+x2_2, -a_0*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a_0-x3_0-x4_0)*x2_2+(b_2*d+a_2-x3_2-x4_2)*x2_0+2*x2_1*(b_1*d+a_1-x3_1-x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, a_2, b_2, ((-a_1+x3_1)*x2_0-x2_1*(a_0-x3_0))*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a_0-x3_0-x4_0)*x2_3+(b_3*d+a_3-x3_3-x4_3)*x2_0+(3*b_2*d+3*a_2-3*x3_2-3*x4_2)*x2_1+3*x2_2*(b_1*d+a_1-x3_1-x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, a_3, b_3, ((x3_2-a_2)*x2_0+(2*x3_1-2*a_1)*x2_1-x2_2*(a_0-x3_0))*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a_0-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(a_4-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3+4*a_3)*x2_1+(-6*x3_2-6*x4_2+6*a_2)*x2_2-4*x2_3*(x3_1+x4_1-a_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, a_4, b_4, ((x3_3-a_3)*x2_0+(3*x3_2-3*a_2)*x2_1+(3*x3_1-3*a_1)*x2_2+x2_3*(-a_0+x3_0))*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(-x3_0-x4_0+a_0)*x2_5+(a_5-x3_5-x4_5)*x2_0+(5*a_4-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3+10*a_3)*x2_2+(-10*x3_2-10*x4_2+10*a_2)*x2_3-5*x2_4*(x3_1+x4_1-a_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, a_5, b_5, ((x3_4-a_4)*x2_0+(4*x3_3-4*a_3)*x2_1+(6*x3_2-6*a_2)*x2_2+(4*x3_1-4*a_1)*x2_3+x2_4*(-a_0+x3_0))*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(-x3_0-x4_0+a_0)*x2_6+(a_6-x3_6-x4_6)*x2_0+(6*a_5-6*x3_5-6*x4_5)*x2_1+(15*a_4-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3+20*a_3)*x2_3+(-15*x3_2-15*x4_2+15*a_2)*x2_4-6*x2_5*(x3_1+x4_1-a_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, a_6, b_6, ((x3_5-a_5)*x2_0+(5*x3_4-5*a_4)*x2_1+(10*x3_3-10*a_3)*x2_2+(10*x3_2-10*a_2)*x2_3+(5*x3_1-5*a_1)*x2_4+x2_5*(-a_0+x3_0))*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(-x3_0-x4_0+a_0)*x2_7+(a_7-x3_7-x4_7)*x2_0+(7*a_6-7*x3_6-7*x4_6)*x2_1+(21*a_5-21*x3_5-21*x4_5)*x2_2+(35*a_4-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3+35*a_3)*x2_4+(-21*x3_2-21*x4_2+21*a_2)*x2_5-7*x2_6*(x3_1+x4_1-a_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, a_7, b_7, ((x3_6-a_6)*x2_0+(6*x3_5-6*a_5)*x2_1+(15*x3_4-15*a_4)*x2_2+(20*x3_3-20*a_3)*x2_3+(15*x3_2-15*a_2)*x2_4+(6*x3_1-6*a_1)*x2_5+x2_6*(-a_0+x3_0))*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -a_1+y_faux1_1, -a_2+y_faux1_2, -a_3+y_faux1_3, -a_4+y_faux1_4, -a_5+y_faux1_5, -a_6+y_faux1_6, -a_7+y_faux1_7, -b_1+y_faux2_1, -b_2+y_faux2_2, -b_3+y_faux2_3, -b_4+y_faux2_4, -b_5+y_faux2_5, -b_6+y_faux2_6, -b_7+y_faux2_7, y_faux3_0-x4_2]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = a_0, y_faux1_1 = a_1, y_faux1_2 = a_2, y_faux1_3 = a_3, y_faux1_4 = a_4, y_faux1_5 = a_5, y_faux1_6 = a_6, y_faux1_7 = a_7, y_faux1_8 = a_8, y_faux1_9 = a_9, y_faux1_10 = a_10, y_faux1_11 = a_11, y_faux1_12 = a_12, y_faux1_13 = a_13, y_faux1_14 = a_14, y_faux2_0 = b_0, y_faux2_1 = b_1, y_faux2_2 = b_2, y_faux2_3 = b_3, y_faux2_4 = b_4, y_faux2_5 = b_5, y_faux2_6 = b_6, y_faux2_7 = b_7, y_faux2_8 = b_8, y_faux2_9 = b_9, y_faux2_10 = b_10, y_faux2_11 = b_11, y_faux2_12 = b_12, y_faux2_13 = b_13, y_faux2_14 = b_14, y_faux3_0 = x4_2]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability without tr. basis:  525956485400000000000000
Random sample for the outputs and inputs is generated from  [d = .4027139790e24, k3 = .2595179506e24, k4 = .4418703854e24, k5 = .5268315902e24, k6 = .3596003630e24, k7 = .5111765851e24, a_0 = .1290498287e24, b_0 = .6945984659e24, x1_0 = .5543785254e24, x2_0 = .7966088376e23, x3_0 = .3533697851e24, x4_0 = .4280224047e24, x5_0 = .4451986716e24]
The polynomial system widehat{E^t} contains  83 equations in  68  variables
            "new_logs/Tumor/transcendence_12_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [a, b, x4_3]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {a, b}
Algebraically independent parameters among derivatives: {x4_3}
	Adding ODEs: [diff(a(t),t) = 0, diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = a(t), y_faux2(t) = b(t)]
	New system: [diff(a(t),t) = 0, diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a(t)*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a(t)*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = a(t), y_faux2(t) = b(t)]

=== Input info ===
State variables:          [a(t), b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t), y_faux2(t)]
Input variables:          []
Parameters in equations:  [d, k3, k4, k5, k6, k7]
===================

memory used=3434.5MB, alloc=183.8MB, time=31.28
memory used=3556.6MB, alloc=183.8MB, time=32.41
memory used=3656.9MB, alloc=183.8MB, time=33.19
	Adding new y-equations: [y_faux3_0 = x4_3]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-a_0, a_1, y_faux2_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a_0*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a_0-x3_0-x4_0)*x2_1+x2_0*(b_1*d+a_1-x3_1-x4_1))*k5-x1_1*k3+k4*x2_1-k6*x3_1-k6*x4_1+x2_2, -a_0*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a_0-x3_0-x4_0)*x2_2+(b_2*d+a_2-x3_2-x4_2)*x2_0+2*x2_1*(b_1*d+a_1-x3_1-x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, a_2, b_2, ((-a_1+x3_1)*x2_0-x2_1*(a_0-x3_0))*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a_0-x3_0-x4_0)*x2_3+(b_3*d+a_3-x3_3-x4_3)*x2_0+(3*b_2*d+3*a_2-3*x3_2-3*x4_2)*x2_1+3*x2_2*(b_1*d+a_1-x3_1-x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, a_3, b_3, ((x3_2-a_2)*x2_0+(2*x3_1-2*a_1)*x2_1-x2_2*(a_0-x3_0))*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a_0-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(a_4-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3+4*a_3)*x2_1+(-6*x3_2-6*x4_2+6*a_2)*x2_2-4*x2_3*(x3_1+x4_1-a_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, a_4, b_4, ((x3_3-a_3)*x2_0+(3*x3_2-3*a_2)*x2_1+(3*x3_1-3*a_1)*x2_2+x2_3*(-a_0+x3_0))*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(-x3_0-x4_0+a_0)*x2_5+(a_5-x3_5-x4_5)*x2_0+(5*a_4-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3+10*a_3)*x2_2+(-10*x3_2-10*x4_2+10*a_2)*x2_3-5*x2_4*(x3_1+x4_1-a_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, a_5, b_5, ((x3_4-a_4)*x2_0+(4*x3_3-4*a_3)*x2_1+(6*x3_2-6*a_2)*x2_2+(4*x3_1-4*a_1)*x2_3+x2_4*(-a_0+x3_0))*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(-x3_0-x4_0+a_0)*x2_6+(a_6-x3_6-x4_6)*x2_0+(6*a_5-6*x3_5-6*x4_5)*x2_1+(15*a_4-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3+20*a_3)*x2_3+(-15*x3_2-15*x4_2+15*a_2)*x2_4-6*x2_5*(x3_1+x4_1-a_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, a_6, b_6, ((x3_5-a_5)*x2_0+(5*x3_4-5*a_4)*x2_1+(10*x3_3-10*a_3)*x2_2+(10*x3_2-10*a_2)*x2_3+(5*x3_1-5*a_1)*x2_4+x2_5*(-a_0+x3_0))*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(-x3_0-x4_0+a_0)*x2_7+(a_7-x3_7-x4_7)*x2_0+(7*a_6-7*x3_6-7*x4_6)*x2_1+(21*a_5-21*x3_5-21*x4_5)*x2_2+(35*a_4-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3+35*a_3)*x2_4+(-21*x3_2-21*x4_2+21*a_2)*x2_5-7*x2_6*(x3_1+x4_1-a_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, a_7, b_7, ((x3_6-a_6)*x2_0+(6*x3_5-6*a_5)*x2_1+(15*x3_4-15*a_4)*x2_2+(20*x3_3-20*a_3)*x2_3+(15*x3_2-15*a_2)*x2_4+(6*x3_1-6*a_1)*x2_5+x2_6*(-a_0+x3_0))*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -a_1+y_faux1_1, -a_2+y_faux1_2, -a_3+y_faux1_3, -a_4+y_faux1_4, -a_5+y_faux1_5, -a_6+y_faux1_6, -a_7+y_faux1_7, -b_1+y_faux2_1, -b_2+y_faux2_2, -b_3+y_faux2_3, -b_4+y_faux2_4, -b_5+y_faux2_5, -b_6+y_faux2_6, -b_7+y_faux2_7, y_faux3_0-x4_3]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = a_0, y_faux1_1 = a_1, y_faux1_2 = a_2, y_faux1_3 = a_3, y_faux1_4 = a_4, y_faux1_5 = a_5, y_faux1_6 = a_6, y_faux1_7 = a_7, y_faux1_8 = a_8, y_faux1_9 = a_9, y_faux1_10 = a_10, y_faux1_11 = a_11, y_faux1_12 = a_12, y_faux1_13 = a_13, y_faux1_14 = a_14, y_faux2_0 = b_0, y_faux2_1 = b_1, y_faux2_2 = b_2, y_faux2_3 = b_3, y_faux2_4 = b_4, y_faux2_5 = b_5, y_faux2_6 = b_6, y_faux2_7 = b_7, y_faux2_8 = b_8, y_faux2_9 = b_9, y_faux2_10 = b_10, y_faux2_11 = b_11, y_faux2_12 = b_12, y_faux2_13 = b_13, y_faux2_14 = b_14, y_faux3_0 = x4_3]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability without tr. basis:  525956485400000000000000
Random sample for the outputs and inputs is generated from  [d = .1179312377e24, k3 = .1568100302e24, k4 = .1155018487e24, k5 = .6478851577e24, k6 = .6465689428e24, k7 = .3201165778e24, a_0 = .2471096234e24, b_0 = .3869223098e24, x1_0 = .2696766673e23, x2_0 = .1648959450e24, x3_0 = .2962466982e24, x4_0 = .2906070793e23, x5_0 = .4411132736e23]
The polynomial system widehat{E^t} contains  83 equations in  68  variables
            "new_logs/Tumor/transcendence_13_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [a, b, x4_4]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {a, b}
Algebraically independent parameters among derivatives: {x4_4}
	Adding ODEs: [diff(a(t),t) = 0, diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = a(t), y_faux2(t) = b(t)]
	New system: [diff(a(t),t) = 0, diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a(t)*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a(t)*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = a(t), y_faux2(t) = b(t)]

=== Input info ===
State variables:          [a(t), b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t), y_faux2(t)]
Input variables:          []
Parameters in equations:  [d, k3, k4, k5, k6, k7]
===================

memory used=3772.7MB, alloc=183.8MB, time=34.41
memory used=3876.6MB, alloc=183.8MB, time=35.23
	Adding new y-equations: [y_faux3_0 = x4_4]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-a_0, a_1, y_faux2_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a_0*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a_0-x3_0-x4_0)*x2_1+x2_0*(b_1*d+a_1-x3_1-x4_1))*k5-x1_1*k3+k4*x2_1-k6*x3_1-k6*x4_1+x2_2, -a_0*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a_0-x3_0-x4_0)*x2_2+(b_2*d+a_2-x3_2-x4_2)*x2_0+2*x2_1*(b_1*d+a_1-x3_1-x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, a_2, b_2, ((-a_1+x3_1)*x2_0-x2_1*(a_0-x3_0))*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a_0-x3_0-x4_0)*x2_3+(b_3*d+a_3-x3_3-x4_3)*x2_0+(3*b_2*d+3*a_2-3*x3_2-3*x4_2)*x2_1+3*x2_2*(b_1*d+a_1-x3_1-x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, a_3, b_3, ((x3_2-a_2)*x2_0+(2*x3_1-2*a_1)*x2_1-x2_2*(a_0-x3_0))*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a_0-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(a_4-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3+4*a_3)*x2_1+(-6*x3_2-6*x4_2+6*a_2)*x2_2-4*x2_3*(x3_1+x4_1-a_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, a_4, b_4, ((x3_3-a_3)*x2_0+(3*x3_2-3*a_2)*x2_1+(3*x3_1-3*a_1)*x2_2+x2_3*(-a_0+x3_0))*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(-x3_0-x4_0+a_0)*x2_5+(a_5-x3_5-x4_5)*x2_0+(5*a_4-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3+10*a_3)*x2_2+(-10*x3_2-10*x4_2+10*a_2)*x2_3-5*x2_4*(x3_1+x4_1-a_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, a_5, b_5, ((x3_4-a_4)*x2_0+(4*x3_3-4*a_3)*x2_1+(6*x3_2-6*a_2)*x2_2+(4*x3_1-4*a_1)*x2_3+x2_4*(-a_0+x3_0))*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(-x3_0-x4_0+a_0)*x2_6+(a_6-x3_6-x4_6)*x2_0+(6*a_5-6*x3_5-6*x4_5)*x2_1+(15*a_4-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3+20*a_3)*x2_3+(-15*x3_2-15*x4_2+15*a_2)*x2_4-6*x2_5*(x3_1+x4_1-a_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, a_6, b_6, ((x3_5-a_5)*x2_0+(5*x3_4-5*a_4)*x2_1+(10*x3_3-10*a_3)*x2_2+(10*x3_2-10*a_2)*x2_3+(5*x3_1-5*a_1)*x2_4+x2_5*(-a_0+x3_0))*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(-x3_0-x4_0+a_0)*x2_7+(a_7-x3_7-x4_7)*x2_0+(7*a_6-7*x3_6-7*x4_6)*x2_1+(21*a_5-21*x3_5-21*x4_5)*x2_2+(35*a_4-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3+35*a_3)*x2_4+(-21*x3_2-21*x4_2+21*a_2)*x2_5-7*x2_6*(x3_1+x4_1-a_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, a_7, b_7, ((x3_6-a_6)*x2_0+(6*x3_5-6*a_5)*x2_1+(15*x3_4-15*a_4)*x2_2+(20*x3_3-20*a_3)*x2_3+(15*x3_2-15*a_2)*x2_4+(6*x3_1-6*a_1)*x2_5+x2_6*(-a_0+x3_0))*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -a_1+y_faux1_1, -a_2+y_faux1_2, -a_3+y_faux1_3, -a_4+y_faux1_4, -a_5+y_faux1_5, -a_6+y_faux1_6, -a_7+y_faux1_7, -b_1+y_faux2_1, -b_2+y_faux2_2, -b_3+y_faux2_3, -b_4+y_faux2_4, -b_5+y_faux2_5, -b_6+y_faux2_6, -b_7+y_faux2_7, y_faux3_0-x4_4]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = a_0, y_faux1_1 = a_1, y_faux1_2 = a_2, y_faux1_3 = a_3, y_faux1_4 = a_4, y_faux1_5 = a_5, y_faux1_6 = a_6, y_faux1_7 = a_7, y_faux1_8 = a_8, y_faux1_9 = a_9, y_faux1_10 = a_10, y_faux1_11 = a_11, y_faux1_12 = a_12, y_faux1_13 = a_13, y_faux1_14 = a_14, y_faux2_0 = b_0, y_faux2_1 = b_1, y_faux2_2 = b_2, y_faux2_3 = b_3, y_faux2_4 = b_4, y_faux2_5 = b_5, y_faux2_6 = b_6, y_faux2_7 = b_7, y_faux2_8 = b_8, y_faux2_9 = b_9, y_faux2_10 = b_10, y_faux2_11 = b_11, y_faux2_12 = b_12, y_faux2_13 = b_13, y_faux2_14 = b_14, y_faux3_0 = x4_4]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability without tr. basis:  525956485400000000000000
Random sample for the outputs and inputs is generated from  [d = .1810146887e24, k3 = .1519479454e24, k4 = .4580658965e24, k5 = .4256689888e24, k6 = .2051300432e24, k7 = .6727067498e24, a_0 = .2210104136e24, b_0 = .1991799481e24, x1_0 = .6125695359e24, x2_0 = .6869086251e24, x3_0 = .5161096337e24, x4_0 = .6348122903e24, x5_0 = .2745140590e24]
The polynomial system widehat{E^t} contains  83 equations in  68  variables
            "new_logs/Tumor/transcendence_14_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [a, b, x4_5]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {a, b}
Algebraically independent parameters among derivatives: {x4_5}
	Adding ODEs: [diff(a(t),t) = 0, diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = a(t), y_faux2(t) = b(t)]
	New system: [diff(a(t),t) = 0, diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a(t)*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a(t)*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = a(t), y_faux2(t) = b(t)]

=== Input info ===
State variables:          [a(t), b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t), y_faux2(t)]
Input variables:          []
Parameters in equations:  [d, k3, k4, k5, k6, k7]
===================

memory used=4001.9MB, alloc=183.8MB, time=36.25
memory used=4123.4MB, alloc=183.8MB, time=37.42
memory used=4223.7MB, alloc=183.8MB, time=38.19
	Adding new y-equations: [y_faux3_0 = x4_5]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-a_0, a_1, y_faux2_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a_0*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a_0-x3_0-x4_0)*x2_1+x2_0*(b_1*d+a_1-x3_1-x4_1))*k5-x1_1*k3+k4*x2_1-k6*x3_1-k6*x4_1+x2_2, -a_0*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a_0-x3_0-x4_0)*x2_2+(b_2*d+a_2-x3_2-x4_2)*x2_0+2*x2_1*(b_1*d+a_1-x3_1-x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, a_2, b_2, ((-a_1+x3_1)*x2_0-x2_1*(a_0-x3_0))*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a_0-x3_0-x4_0)*x2_3+(b_3*d+a_3-x3_3-x4_3)*x2_0+(3*b_2*d+3*a_2-3*x3_2-3*x4_2)*x2_1+3*x2_2*(b_1*d+a_1-x3_1-x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, a_3, b_3, ((x3_2-a_2)*x2_0+(2*x3_1-2*a_1)*x2_1-x2_2*(a_0-x3_0))*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a_0-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(a_4-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3+4*a_3)*x2_1+(-6*x3_2-6*x4_2+6*a_2)*x2_2-4*x2_3*(x3_1+x4_1-a_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, a_4, b_4, ((x3_3-a_3)*x2_0+(3*x3_2-3*a_2)*x2_1+(3*x3_1-3*a_1)*x2_2+x2_3*(-a_0+x3_0))*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(-x3_0-x4_0+a_0)*x2_5+(a_5-x3_5-x4_5)*x2_0+(5*a_4-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3+10*a_3)*x2_2+(-10*x3_2-10*x4_2+10*a_2)*x2_3-5*x2_4*(x3_1+x4_1-a_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, a_5, b_5, ((x3_4-a_4)*x2_0+(4*x3_3-4*a_3)*x2_1+(6*x3_2-6*a_2)*x2_2+(4*x3_1-4*a_1)*x2_3+x2_4*(-a_0+x3_0))*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(-x3_0-x4_0+a_0)*x2_6+(a_6-x3_6-x4_6)*x2_0+(6*a_5-6*x3_5-6*x4_5)*x2_1+(15*a_4-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3+20*a_3)*x2_3+(-15*x3_2-15*x4_2+15*a_2)*x2_4-6*x2_5*(x3_1+x4_1-a_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, a_6, b_6, ((x3_5-a_5)*x2_0+(5*x3_4-5*a_4)*x2_1+(10*x3_3-10*a_3)*x2_2+(10*x3_2-10*a_2)*x2_3+(5*x3_1-5*a_1)*x2_4+x2_5*(-a_0+x3_0))*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(-x3_0-x4_0+a_0)*x2_7+(a_7-x3_7-x4_7)*x2_0+(7*a_6-7*x3_6-7*x4_6)*x2_1+(21*a_5-21*x3_5-21*x4_5)*x2_2+(35*a_4-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3+35*a_3)*x2_4+(-21*x3_2-21*x4_2+21*a_2)*x2_5-7*x2_6*(x3_1+x4_1-a_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, a_7, b_7, ((x3_6-a_6)*x2_0+(6*x3_5-6*a_5)*x2_1+(15*x3_4-15*a_4)*x2_2+(20*x3_3-20*a_3)*x2_3+(15*x3_2-15*a_2)*x2_4+(6*x3_1-6*a_1)*x2_5+x2_6*(-a_0+x3_0))*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -a_1+y_faux1_1, -a_2+y_faux1_2, -a_3+y_faux1_3, -a_4+y_faux1_4, -a_5+y_faux1_5, -a_6+y_faux1_6, -a_7+y_faux1_7, -b_1+y_faux2_1, -b_2+y_faux2_2, -b_3+y_faux2_3, -b_4+y_faux2_4, -b_5+y_faux2_5, -b_6+y_faux2_6, -b_7+y_faux2_7, y_faux3_0-x4_5]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = a_0, y_faux1_1 = a_1, y_faux1_2 = a_2, y_faux1_3 = a_3, y_faux1_4 = a_4, y_faux1_5 = a_5, y_faux1_6 = a_6, y_faux1_7 = a_7, y_faux1_8 = a_8, y_faux1_9 = a_9, y_faux1_10 = a_10, y_faux1_11 = a_11, y_faux1_12 = a_12, y_faux1_13 = a_13, y_faux1_14 = a_14, y_faux2_0 = b_0, y_faux2_1 = b_1, y_faux2_2 = b_2, y_faux2_3 = b_3, y_faux2_4 = b_4, y_faux2_5 = b_5, y_faux2_6 = b_6, y_faux2_7 = b_7, y_faux2_8 = b_8, y_faux2_9 = b_9, y_faux2_10 = b_10, y_faux2_11 = b_11, y_faux2_12 = b_12, y_faux2_13 = b_13, y_faux2_14 = b_14, y_faux3_0 = x4_5]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability without tr. basis:  525956485400000000000000
Random sample for the outputs and inputs is generated from  [d = .6761681548e24, k3 = .3191163817e24, k4 = .3016945503e24, k5 = .4774427489e24, k6 = .1523264344e24, k7 = .4551108944e24, a_0 = .3198897610e24, b_0 = .3348040488e24, x1_0 = .1056580773e24, x2_0 = .9442612866e23, x3_0 = .5543284045e24, x4_0 = .5928750581e23, x5_0 = .3073565113e24]
The polynomial system widehat{E^t} contains  83 equations in  68  variables
            "new_logs/Tumor/transcendence_15_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [a, b, x4_6]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {a, b}
Algebraically independent parameters among derivatives: {x4_6}
	Adding ODEs: [diff(a(t),t) = 0, diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = a(t), y_faux2(t) = b(t)]
	New system: [diff(a(t),t) = 0, diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a(t)*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a(t)*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = a(t), y_faux2(t) = b(t)]

=== Input info ===
State variables:          [a(t), b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t), y_faux2(t)]
Input variables:          []
Parameters in equations:  [d, k3, k4, k5, k6, k7]
===================

memory used=4341.5MB, alloc=183.8MB, time=39.48
memory used=4447.6MB, alloc=183.8MB, time=40.32
	Adding new y-equations: [y_faux3_0 = x4_6]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-a_0, a_1, y_faux2_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a_0*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a_0-x3_0-x4_0)*x2_1+x2_0*(b_1*d+a_1-x3_1-x4_1))*k5-x1_1*k3+k4*x2_1-k6*x3_1-k6*x4_1+x2_2, -a_0*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a_0-x3_0-x4_0)*x2_2+(b_2*d+a_2-x3_2-x4_2)*x2_0+2*x2_1*(b_1*d+a_1-x3_1-x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, a_2, b_2, ((-a_1+x3_1)*x2_0-x2_1*(a_0-x3_0))*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a_0-x3_0-x4_0)*x2_3+(b_3*d+a_3-x3_3-x4_3)*x2_0+(3*b_2*d+3*a_2-3*x3_2-3*x4_2)*x2_1+3*x2_2*(b_1*d+a_1-x3_1-x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, a_3, b_3, ((x3_2-a_2)*x2_0+(2*x3_1-2*a_1)*x2_1-x2_2*(a_0-x3_0))*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a_0-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(a_4-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3+4*a_3)*x2_1+(-6*x3_2-6*x4_2+6*a_2)*x2_2-4*x2_3*(x3_1+x4_1-a_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, a_4, b_4, ((x3_3-a_3)*x2_0+(3*x3_2-3*a_2)*x2_1+(3*x3_1-3*a_1)*x2_2+x2_3*(-a_0+x3_0))*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(-x3_0-x4_0+a_0)*x2_5+(a_5-x3_5-x4_5)*x2_0+(5*a_4-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3+10*a_3)*x2_2+(-10*x3_2-10*x4_2+10*a_2)*x2_3-5*x2_4*(x3_1+x4_1-a_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, a_5, b_5, ((x3_4-a_4)*x2_0+(4*x3_3-4*a_3)*x2_1+(6*x3_2-6*a_2)*x2_2+(4*x3_1-4*a_1)*x2_3+x2_4*(-a_0+x3_0))*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(-x3_0-x4_0+a_0)*x2_6+(a_6-x3_6-x4_6)*x2_0+(6*a_5-6*x3_5-6*x4_5)*x2_1+(15*a_4-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3+20*a_3)*x2_3+(-15*x3_2-15*x4_2+15*a_2)*x2_4-6*x2_5*(x3_1+x4_1-a_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, a_6, b_6, ((x3_5-a_5)*x2_0+(5*x3_4-5*a_4)*x2_1+(10*x3_3-10*a_3)*x2_2+(10*x3_2-10*a_2)*x2_3+(5*x3_1-5*a_1)*x2_4+x2_5*(-a_0+x3_0))*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(-x3_0-x4_0+a_0)*x2_7+(a_7-x3_7-x4_7)*x2_0+(7*a_6-7*x3_6-7*x4_6)*x2_1+(21*a_5-21*x3_5-21*x4_5)*x2_2+(35*a_4-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3+35*a_3)*x2_4+(-21*x3_2-21*x4_2+21*a_2)*x2_5-7*x2_6*(x3_1+x4_1-a_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, a_7, b_7, ((x3_6-a_6)*x2_0+(6*x3_5-6*a_5)*x2_1+(15*x3_4-15*a_4)*x2_2+(20*x3_3-20*a_3)*x2_3+(15*x3_2-15*a_2)*x2_4+(6*x3_1-6*a_1)*x2_5+x2_6*(-a_0+x3_0))*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -a_1+y_faux1_1, -a_2+y_faux1_2, -a_3+y_faux1_3, -a_4+y_faux1_4, -a_5+y_faux1_5, -a_6+y_faux1_6, -a_7+y_faux1_7, -b_1+y_faux2_1, -b_2+y_faux2_2, -b_3+y_faux2_3, -b_4+y_faux2_4, -b_5+y_faux2_5, -b_6+y_faux2_6, -b_7+y_faux2_7, y_faux3_0-x4_6]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = a_0, y_faux1_1 = a_1, y_faux1_2 = a_2, y_faux1_3 = a_3, y_faux1_4 = a_4, y_faux1_5 = a_5, y_faux1_6 = a_6, y_faux1_7 = a_7, y_faux1_8 = a_8, y_faux1_9 = a_9, y_faux1_10 = a_10, y_faux1_11 = a_11, y_faux1_12 = a_12, y_faux1_13 = a_13, y_faux1_14 = a_14, y_faux2_0 = b_0, y_faux2_1 = b_1, y_faux2_2 = b_2, y_faux2_3 = b_3, y_faux2_4 = b_4, y_faux2_5 = b_5, y_faux2_6 = b_6, y_faux2_7 = b_7, y_faux2_8 = b_8, y_faux2_9 = b_9, y_faux2_10 = b_10, y_faux2_11 = b_11, y_faux2_12 = b_12, y_faux2_13 = b_13, y_faux2_14 = b_14, y_faux3_0 = x4_6]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability without tr. basis:  525956485400000000000000
Random sample for the outputs and inputs is generated from  [d = .4787815768e24, k3 = .3194047489e24, k4 = .4173874520e24, k5 = .6996163933e24, k6 = .1746884736e24, k7 = .6931219595e24, a_0 = .6704572744e24, b_0 = .5773358299e24, x1_0 = .2315860130e24, x2_0 = .3455637891e24, x3_0 = .1724929422e23, x4_0 = .3158001509e24, x5_0 = .1577099299e24]
The polynomial system widehat{E^t} contains  83 equations in  68  variables
            "new_logs/Tumor/transcendence_16_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [a, b, x4_7]

=======================================================
Substituting transcendence basis.
=======================================================
memory used=4553.3MB, alloc=183.8MB, time=41.16
Algebraically independent parameters among nonidentifiable: {a, b}
Algebraically independent parameters among derivatives: {x4_7}
	Adding ODEs: [diff(a(t),t) = 0, diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = a(t), y_faux2(t) = b(t)]
	New system: [diff(a(t),t) = 0, diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a(t)*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a(t)*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = a(t), y_faux2(t) = b(t)]

=== Input info ===
State variables:          [a(t), b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t), y_faux2(t)]
Input variables:          []
Parameters in equations:  [d, k3, k4, k5, k6, k7]
===================

memory used=4672.9MB, alloc=183.8MB, time=42.44
memory used=4773.1MB, alloc=183.8MB, time=43.20
	Adding new y-equations: [y_faux3_0 = x4_7]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-a_0, a_1, y_faux2_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a_0*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a_0-x3_0-x4_0)*x2_1+x2_0*(b_1*d+a_1-x3_1-x4_1))*k5-x1_1*k3+k4*x2_1-k6*x3_1-k6*x4_1+x2_2, -a_0*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a_0-x3_0-x4_0)*x2_2+(b_2*d+a_2-x3_2-x4_2)*x2_0+2*x2_1*(b_1*d+a_1-x3_1-x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, a_2, b_2, ((-a_1+x3_1)*x2_0-x2_1*(a_0-x3_0))*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a_0-x3_0-x4_0)*x2_3+(b_3*d+a_3-x3_3-x4_3)*x2_0+(3*b_2*d+3*a_2-3*x3_2-3*x4_2)*x2_1+3*x2_2*(b_1*d+a_1-x3_1-x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, a_3, b_3, ((x3_2-a_2)*x2_0+(2*x3_1-2*a_1)*x2_1-x2_2*(a_0-x3_0))*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a_0-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(a_4-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3+4*a_3)*x2_1+(-6*x3_2-6*x4_2+6*a_2)*x2_2-4*x2_3*(x3_1+x4_1-a_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, a_4, b_4, ((x3_3-a_3)*x2_0+(3*x3_2-3*a_2)*x2_1+(3*x3_1-3*a_1)*x2_2+x2_3*(-a_0+x3_0))*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(-x3_0-x4_0+a_0)*x2_5+(a_5-x3_5-x4_5)*x2_0+(5*a_4-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3+10*a_3)*x2_2+(-10*x3_2-10*x4_2+10*a_2)*x2_3-5*x2_4*(x3_1+x4_1-a_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, a_5, b_5, ((x3_4-a_4)*x2_0+(4*x3_3-4*a_3)*x2_1+(6*x3_2-6*a_2)*x2_2+(4*x3_1-4*a_1)*x2_3+x2_4*(-a_0+x3_0))*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(-x3_0-x4_0+a_0)*x2_6+(a_6-x3_6-x4_6)*x2_0+(6*a_5-6*x3_5-6*x4_5)*x2_1+(15*a_4-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3+20*a_3)*x2_3+(-15*x3_2-15*x4_2+15*a_2)*x2_4-6*x2_5*(x3_1+x4_1-a_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, a_6, b_6, ((x3_5-a_5)*x2_0+(5*x3_4-5*a_4)*x2_1+(10*x3_3-10*a_3)*x2_2+(10*x3_2-10*a_2)*x2_3+(5*x3_1-5*a_1)*x2_4+x2_5*(-a_0+x3_0))*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(-x3_0-x4_0+a_0)*x2_7+(a_7-x3_7-x4_7)*x2_0+(7*a_6-7*x3_6-7*x4_6)*x2_1+(21*a_5-21*x3_5-21*x4_5)*x2_2+(35*a_4-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3+35*a_3)*x2_4+(-21*x3_2-21*x4_2+21*a_2)*x2_5-7*x2_6*(x3_1+x4_1-a_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, a_7, b_7, ((x3_6-a_6)*x2_0+(6*x3_5-6*a_5)*x2_1+(15*x3_4-15*a_4)*x2_2+(20*x3_3-20*a_3)*x2_3+(15*x3_2-15*a_2)*x2_4+(6*x3_1-6*a_1)*x2_5+x2_6*(-a_0+x3_0))*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -a_1+y_faux1_1, -a_2+y_faux1_2, -a_3+y_faux1_3, -a_4+y_faux1_4, -a_5+y_faux1_5, -a_6+y_faux1_6, -a_7+y_faux1_7, -b_1+y_faux2_1, -b_2+y_faux2_2, -b_3+y_faux2_3, -b_4+y_faux2_4, -b_5+y_faux2_5, -b_6+y_faux2_6, -b_7+y_faux2_7, y_faux3_0-x4_7]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = a_0, y_faux1_1 = a_1, y_faux1_2 = a_2, y_faux1_3 = a_3, y_faux1_4 = a_4, y_faux1_5 = a_5, y_faux1_6 = a_6, y_faux1_7 = a_7, y_faux1_8 = a_8, y_faux1_9 = a_9, y_faux1_10 = a_10, y_faux1_11 = a_11, y_faux1_12 = a_12, y_faux1_13 = a_13, y_faux1_14 = a_14, y_faux2_0 = b_0, y_faux2_1 = b_1, y_faux2_2 = b_2, y_faux2_3 = b_3, y_faux2_4 = b_4, y_faux2_5 = b_5, y_faux2_6 = b_6, y_faux2_7 = b_7, y_faux2_8 = b_8, y_faux2_9 = b_9, y_faux2_10 = b_10, y_faux2_11 = b_11, y_faux2_12 = b_12, y_faux2_13 = b_13, y_faux2_14 = b_14, y_faux3_0 = x4_7]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability without tr. basis:  525956485400000000000000
Random sample for the outputs and inputs is generated from  [d = .4311937354e24, k3 = .2994177847e24, k4 = .5876063703e24, k5 = .3973998278e24, k6 = .3753650995e23, k7 = .2533448228e24, a_0 = .3199039080e24, b_0 = .2447531859e24, x1_0 = .2620244027e24, x2_0 = .1060903434e24, x3_0 = .2991430373e24, x4_0 = .3961350381e24, x5_0 = .4274786422e24]
The polynomial system widehat{E^t} contains  83 equations in  68  variables
            "new_logs/Tumor/transcendence_17_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [a, d, x3(0)]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {a, d}
Algebraically independent parameters among derivatives: {x3(0)}
	Adding ODEs: [diff(a(t),t) = 0, diff(d(t),t) = 0]
	Adding output functions: [y_faux1(t) = a(t), y_faux2(t) = d(t)]
	New system: [diff(a(t),t) = 0, diff(d(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b*d(t)*k5+a(t)*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a(t)*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b*d(t)*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = a(t), y_faux2(t) = d(t)]

=== Input info ===
State variables:          [a(t), d(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t), y_faux2(t)]
Input variables:          []
Parameters in equations:  [b, k3, k4, k5, k6, k7]
===================

memory used=4893.9MB, alloc=183.8MB, time=44.38
memory used=5022.9MB, alloc=183.8MB, time=45.45
memory used=5122.8MB, alloc=183.8MB, time=46.22
	Adding new y-equations: [y_faux3_0 = x3_0]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-a_0, a_1, y_faux2_0-d_0, d_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b*d_0*k5*x2_0+a_0*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b*d_0+a_0-x3_0-x4_0)*x2_1+x2_0*(b*d_1+a_1-x3_1-x4_1))*k5-x1_1*k3+k4*x2_1-k6*x3_1-k6*x4_1+x2_2, -a_0*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b*d_0*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b*d_0+a_0-x3_0-x4_0)*x2_2+(b*d_2+a_2-x3_2-x4_2)*x2_0+2*x2_1*(b*d_1+a_1-x3_1-x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, a_2, d_2, ((-a_1+x3_1)*x2_0-x2_1*(a_0-x3_0))*k5+k6*x3_1+x3_2, ((-b*d_1+x4_1)*x2_0-x2_1*(b*d_0-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b*d_0+a_0-x3_0-x4_0)*x2_3+(b*d_3+a_3-x3_3-x4_3)*x2_0+(3*b*d_2+3*a_2-3*x3_2-3*x4_2)*x2_1+3*x2_2*(b*d_1+a_1-x3_1-x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, a_3, d_3, ((x3_2-a_2)*x2_0+(2*x3_1-2*a_1)*x2_1-x2_2*(a_0-x3_0))*k5+k6*x3_2+x3_3, ((-d_0*x2_2-2*d_1*x2_1-d_2*x2_0)*b+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b*d_0+a_0-x3_0-x4_0)*x2_4+(4*d_1*x2_3+6*d_2*x2_2+4*d_3*x2_1+d_4*x2_0)*b+(a_4-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3+4*a_3)*x2_1+(-6*x3_2-6*x4_2+6*a_2)*x2_2-4*x2_3*(x3_1+x4_1-a_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, a_4, d_4, ((x3_3-a_3)*x2_0+(3*x3_2-3*a_2)*x2_1+(3*x3_1-3*a_1)*x2_2+x2_3*(-a_0+x3_0))*k5+k6*x3_3+x3_4, ((-d_0*x2_3-3*d_1*x2_2-3*d_2*x2_1-d_3*x2_0)*b+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((d_0*x2_5+5*d_1*x2_4+10*d_2*x2_3+10*d_3*x2_2+5*d_4*x2_1+d_5*x2_0)*b+(-x3_0-x4_0+a_0)*x2_5+(a_5-x3_5-x4_5)*x2_0+(5*a_4-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3+10*a_3)*x2_2+(-10*x3_2-10*x4_2+10*a_2)*x2_3-5*x2_4*(x3_1+x4_1-a_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, a_5, d_5, ((x3_4-a_4)*x2_0+(4*x3_3-4*a_3)*x2_1+(6*x3_2-6*a_2)*x2_2+(4*x3_1-4*a_1)*x2_3+x2_4*(-a_0+x3_0))*k5+k6*x3_4+x3_5, ((-d_0*x2_4-4*d_1*x2_3-6*d_2*x2_2-4*d_3*x2_1-d_4*x2_0)*b+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((d_0*x2_6+6*d_1*x2_5+15*d_2*x2_4+20*d_3*x2_3+15*d_4*x2_2+6*d_5*x2_1+d_6*x2_0)*b+(-x3_0-x4_0+a_0)*x2_6+(a_6-x3_6-x4_6)*x2_0+(6*a_5-6*x3_5-6*x4_5)*x2_1+(15*a_4-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3+20*a_3)*x2_3+(-15*x3_2-15*x4_2+15*a_2)*x2_4-6*x2_5*(x3_1+x4_1-a_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, a_6, d_6, ((x3_5-a_5)*x2_0+(5*x3_4-5*a_4)*x2_1+(10*x3_3-10*a_3)*x2_2+(10*x3_2-10*a_2)*x2_3+(5*x3_1-5*a_1)*x2_4+x2_5*(-a_0+x3_0))*k5+k6*x3_5+x3_6, ((-d_0*x2_5-5*d_1*x2_4-10*d_2*x2_3-10*d_3*x2_2-5*d_4*x2_1-d_5*x2_0)*b+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((d_0*x2_7+7*d_1*x2_6+21*d_2*x2_5+35*d_3*x2_4+35*d_4*x2_3+21*d_5*x2_2+7*d_6*x2_1+d_7*x2_0)*b+(-x3_0-x4_0+a_0)*x2_7+(a_7-x3_7-x4_7)*x2_0+(7*a_6-7*x3_6-7*x4_6)*x2_1+(21*a_5-21*x3_5-21*x4_5)*x2_2+(35*a_4-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3+35*a_3)*x2_4+(-21*x3_2-21*x4_2+21*a_2)*x2_5-7*x2_6*(x3_1+x4_1-a_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, a_7, d_7, ((x3_6-a_6)*x2_0+(6*x3_5-6*a_5)*x2_1+(15*x3_4-15*a_4)*x2_2+(20*x3_3-20*a_3)*x2_3+(15*x3_2-15*a_2)*x2_4+(6*x3_1-6*a_1)*x2_5+x2_6*(-a_0+x3_0))*k5+k6*x3_6+x3_7, ((-d_0*x2_6-6*d_1*x2_5-15*d_2*x2_4-20*d_3*x2_3-15*d_4*x2_2-6*d_5*x2_1-d_6*x2_0)*b+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -a_1+y_faux1_1, -a_2+y_faux1_2, -a_3+y_faux1_3, -a_4+y_faux1_4, -a_5+y_faux1_5, -a_6+y_faux1_6, -a_7+y_faux1_7, -d_1+y_faux2_1, -d_2+y_faux2_2, -d_3+y_faux2_3, -d_4+y_faux2_4, -d_5+y_faux2_5, -d_6+y_faux2_6, -d_7+y_faux2_7, y_faux3_0-x3_0]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = a_0, y_faux1_1 = a_1, y_faux1_2 = a_2, y_faux1_3 = a_3, y_faux1_4 = a_4, y_faux1_5 = a_5, y_faux1_6 = a_6, y_faux1_7 = a_7, y_faux1_8 = a_8, y_faux1_9 = a_9, y_faux1_10 = a_10, y_faux1_11 = a_11, y_faux1_12 = a_12, y_faux1_13 = a_13, y_faux1_14 = a_14, y_faux2_0 = d_0, y_faux2_1 = d_1, y_faux2_2 = d_2, y_faux2_3 = d_3, y_faux2_4 = d_4, y_faux2_5 = d_5, y_faux2_6 = d_6, y_faux2_7 = d_7, y_faux2_8 = d_8, y_faux2_9 = d_9, y_faux2_10 = d_10, y_faux2_11 = d_11, y_faux2_12 = d_12, y_faux2_13 = d_13, y_faux2_14 = d_14, y_faux3_0 = x3_0]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability without tr. basis:  525956485400000000000000
Random sample for the outputs and inputs is generated from  [b = .4806294514e24, k3 = .4603735846e24, k4 = .4424804221e24, k5 = .1688262448e24, k6 = .3598834203e23, k7 = .6800617984e24, a_0 = .3180347152e23, d_0 = .5728672877e23, x1_0 = .2339304669e24, x2_0 = .4486871084e24, x3_0 = .2705398066e24, x4_0 = .2834205029e24, x5_0 = .2670606189e23]
The polynomial system widehat{E^t} contains  83 equations in  68  variables
            "new_logs/Tumor/transcendence_18_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [a, d, x3_1]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {a, d}
Algebraically independent parameters among derivatives: {x3_1}
	Adding ODEs: [diff(a(t),t) = 0, diff(d(t),t) = 0]
	Adding output functions: [y_faux1(t) = a(t), y_faux2(t) = d(t)]
	New system: [diff(a(t),t) = 0, diff(d(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b*d(t)*k5+a(t)*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a(t)*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b*d(t)*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = a(t), y_faux2(t) = d(t)]

=== Input info ===
State variables:          [a(t), d(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t), y_faux2(t)]
Input variables:          []
Parameters in equations:  [b, k3, k4, k5, k6, k7]
===================

memory used=5242.8MB, alloc=183.8MB, time=47.51
memory used=5343.3MB, alloc=183.8MB, time=48.25
	Adding new y-equations: [y_faux3_0 = x3_1]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-a_0, a_1, y_faux2_0-d_0, d_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b*d_0*k5*x2_0+a_0*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b*d_0+a_0-x3_0-x4_0)*x2_1+x2_0*(b*d_1+a_1-x3_1-x4_1))*k5-x1_1*k3+k4*x2_1-k6*x3_1-k6*x4_1+x2_2, -a_0*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b*d_0*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b*d_0+a_0-x3_0-x4_0)*x2_2+(b*d_2+a_2-x3_2-x4_2)*x2_0+2*x2_1*(b*d_1+a_1-x3_1-x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, a_2, d_2, ((-a_1+x3_1)*x2_0-x2_1*(a_0-x3_0))*k5+k6*x3_1+x3_2, ((-b*d_1+x4_1)*x2_0-x2_1*(b*d_0-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b*d_0+a_0-x3_0-x4_0)*x2_3+(b*d_3+a_3-x3_3-x4_3)*x2_0+(3*b*d_2+3*a_2-3*x3_2-3*x4_2)*x2_1+3*x2_2*(b*d_1+a_1-x3_1-x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, a_3, d_3, ((x3_2-a_2)*x2_0+(2*x3_1-2*a_1)*x2_1-x2_2*(a_0-x3_0))*k5+k6*x3_2+x3_3, ((-d_0*x2_2-2*d_1*x2_1-d_2*x2_0)*b+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b*d_0+a_0-x3_0-x4_0)*x2_4+(4*d_1*x2_3+6*d_2*x2_2+4*d_3*x2_1+d_4*x2_0)*b+(a_4-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3+4*a_3)*x2_1+(-6*x3_2-6*x4_2+6*a_2)*x2_2-4*x2_3*(x3_1+x4_1-a_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, a_4, d_4, ((x3_3-a_3)*x2_0+(3*x3_2-3*a_2)*x2_1+(3*x3_1-3*a_1)*x2_2+x2_3*(-a_0+x3_0))*k5+k6*x3_3+x3_4, ((-d_0*x2_3-3*d_1*x2_2-3*d_2*x2_1-d_3*x2_0)*b+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((d_0*x2_5+5*d_1*x2_4+10*d_2*x2_3+10*d_3*x2_2+5*d_4*x2_1+d_5*x2_0)*b+(-x3_0-x4_0+a_0)*x2_5+(a_5-x3_5-x4_5)*x2_0+(5*a_4-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3+10*a_3)*x2_2+(-10*x3_2-10*x4_2+10*a_2)*x2_3-5*x2_4*(x3_1+x4_1-a_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, a_5, d_5, ((x3_4-a_4)*x2_0+(4*x3_3-4*a_3)*x2_1+(6*x3_2-6*a_2)*x2_2+(4*x3_1-4*a_1)*x2_3+x2_4*(-a_0+x3_0))*k5+k6*x3_4+x3_5, ((-d_0*x2_4-4*d_1*x2_3-6*d_2*x2_2-4*d_3*x2_1-d_4*x2_0)*b+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((d_0*x2_6+6*d_1*x2_5+15*d_2*x2_4+20*d_3*x2_3+15*d_4*x2_2+6*d_5*x2_1+d_6*x2_0)*b+(-x3_0-x4_0+a_0)*x2_6+(a_6-x3_6-x4_6)*x2_0+(6*a_5-6*x3_5-6*x4_5)*x2_1+(15*a_4-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3+20*a_3)*x2_3+(-15*x3_2-15*x4_2+15*a_2)*x2_4-6*x2_5*(x3_1+x4_1-a_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, a_6, d_6, ((x3_5-a_5)*x2_0+(5*x3_4-5*a_4)*x2_1+(10*x3_3-10*a_3)*x2_2+(10*x3_2-10*a_2)*x2_3+(5*x3_1-5*a_1)*x2_4+x2_5*(-a_0+x3_0))*k5+k6*x3_5+x3_6, ((-d_0*x2_5-5*d_1*x2_4-10*d_2*x2_3-10*d_3*x2_2-5*d_4*x2_1-d_5*x2_0)*b+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((d_0*x2_7+7*d_1*x2_6+21*d_2*x2_5+35*d_3*x2_4+35*d_4*x2_3+21*d_5*x2_2+7*d_6*x2_1+d_7*x2_0)*b+(-x3_0-x4_0+a_0)*x2_7+(a_7-x3_7-x4_7)*x2_0+(7*a_6-7*x3_6-7*x4_6)*x2_1+(21*a_5-21*x3_5-21*x4_5)*x2_2+(35*a_4-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3+35*a_3)*x2_4+(-21*x3_2-21*x4_2+21*a_2)*x2_5-7*x2_6*(x3_1+x4_1-a_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, a_7, d_7, ((x3_6-a_6)*x2_0+(6*x3_5-6*a_5)*x2_1+(15*x3_4-15*a_4)*x2_2+(20*x3_3-20*a_3)*x2_3+(15*x3_2-15*a_2)*x2_4+(6*x3_1-6*a_1)*x2_5+x2_6*(-a_0+x3_0))*k5+k6*x3_6+x3_7, ((-d_0*x2_6-6*d_1*x2_5-15*d_2*x2_4-20*d_3*x2_3-15*d_4*x2_2-6*d_5*x2_1-d_6*x2_0)*b+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -a_1+y_faux1_1, -a_2+y_faux1_2, -a_3+y_faux1_3, -a_4+y_faux1_4, -a_5+y_faux1_5, -a_6+y_faux1_6, -a_7+y_faux1_7, -d_1+y_faux2_1, -d_2+y_faux2_2, -d_3+y_faux2_3, -d_4+y_faux2_4, -d_5+y_faux2_5, -d_6+y_faux2_6, -d_7+y_faux2_7, y_faux3_0-x3_1]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = a_0, y_faux1_1 = a_1, y_faux1_2 = a_2, y_faux1_3 = a_3, y_faux1_4 = a_4, y_faux1_5 = a_5, y_faux1_6 = a_6, y_faux1_7 = a_7, y_faux1_8 = a_8, y_faux1_9 = a_9, y_faux1_10 = a_10, y_faux1_11 = a_11, y_faux1_12 = a_12, y_faux1_13 = a_13, y_faux1_14 = a_14, y_faux2_0 = d_0, y_faux2_1 = d_1, y_faux2_2 = d_2, y_faux2_3 = d_3, y_faux2_4 = d_4, y_faux2_5 = d_5, y_faux2_6 = d_6, y_faux2_7 = d_7, y_faux2_8 = d_8, y_faux2_9 = d_9, y_faux2_10 = d_10, y_faux2_11 = d_11, y_faux2_12 = d_12, y_faux2_13 = d_13, y_faux2_14 = d_14, y_faux3_0 = x3_1]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability without tr. basis:  525956485400000000000000
Random sample for the outputs and inputs is generated from  [b = .5340439607e24, k3 = .4895933927e24, k4 = .6353326408e24, k5 = .2245497149e24, k6 = .1795588030e24, k7 = .5166205481e24, a_0 = .3333551239e24, d_0 = .4166339695e24, x1_0 = .3944194169e24, x2_0 = .5458656886e24, x3_0 = .4048697832e24, x4_0 = .5551641133e24, x5_0 = .4278645002e24]
The polynomial system widehat{E^t} contains  83 equations in  68  variables
            "new_logs/Tumor/transcendence_19_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [a, d, x3_2]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {a, d}
Algebraically independent parameters among derivatives: {x3_2}
	Adding ODEs: [diff(a(t),t) = 0, diff(d(t),t) = 0]
	Adding output functions: [y_faux1(t) = a(t), y_faux2(t) = d(t)]
	New system: [diff(a(t),t) = 0, diff(d(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b*d(t)*k5+a(t)*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a(t)*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b*d(t)*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = a(t), y_faux2(t) = d(t)]

=== Input info ===
State variables:          [a(t), d(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t), y_faux2(t)]
Input variables:          []
Parameters in equations:  [b, k3, k4, k5, k6, k7]
===================

memory used=5467.0MB, alloc=183.8MB, time=49.39
memory used=5596.0MB, alloc=183.8MB, time=50.47
memory used=5696.3MB, alloc=183.8MB, time=51.26
	Adding new y-equations: [y_faux3_0 = x3_2]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-a_0, a_1, y_faux2_0-d_0, d_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b*d_0*k5*x2_0+a_0*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b*d_0+a_0-x3_0-x4_0)*x2_1+x2_0*(b*d_1+a_1-x3_1-x4_1))*k5-x1_1*k3+k4*x2_1-k6*x3_1-k6*x4_1+x2_2, -a_0*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b*d_0*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b*d_0+a_0-x3_0-x4_0)*x2_2+(b*d_2+a_2-x3_2-x4_2)*x2_0+2*x2_1*(b*d_1+a_1-x3_1-x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, a_2, d_2, ((-a_1+x3_1)*x2_0-x2_1*(a_0-x3_0))*k5+k6*x3_1+x3_2, ((-b*d_1+x4_1)*x2_0-x2_1*(b*d_0-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b*d_0+a_0-x3_0-x4_0)*x2_3+(b*d_3+a_3-x3_3-x4_3)*x2_0+(3*b*d_2+3*a_2-3*x3_2-3*x4_2)*x2_1+3*x2_2*(b*d_1+a_1-x3_1-x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, a_3, d_3, ((x3_2-a_2)*x2_0+(2*x3_1-2*a_1)*x2_1-x2_2*(a_0-x3_0))*k5+k6*x3_2+x3_3, ((-d_0*x2_2-2*d_1*x2_1-d_2*x2_0)*b+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b*d_0+a_0-x3_0-x4_0)*x2_4+(4*d_1*x2_3+6*d_2*x2_2+4*d_3*x2_1+d_4*x2_0)*b+(a_4-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3+4*a_3)*x2_1+(-6*x3_2-6*x4_2+6*a_2)*x2_2-4*x2_3*(x3_1+x4_1-a_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, a_4, d_4, ((x3_3-a_3)*x2_0+(3*x3_2-3*a_2)*x2_1+(3*x3_1-3*a_1)*x2_2+x2_3*(-a_0+x3_0))*k5+k6*x3_3+x3_4, ((-d_0*x2_3-3*d_1*x2_2-3*d_2*x2_1-d_3*x2_0)*b+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((d_0*x2_5+5*d_1*x2_4+10*d_2*x2_3+10*d_3*x2_2+5*d_4*x2_1+d_5*x2_0)*b+(-x3_0-x4_0+a_0)*x2_5+(a_5-x3_5-x4_5)*x2_0+(5*a_4-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3+10*a_3)*x2_2+(-10*x3_2-10*x4_2+10*a_2)*x2_3-5*x2_4*(x3_1+x4_1-a_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, a_5, d_5, ((x3_4-a_4)*x2_0+(4*x3_3-4*a_3)*x2_1+(6*x3_2-6*a_2)*x2_2+(4*x3_1-4*a_1)*x2_3+x2_4*(-a_0+x3_0))*k5+k6*x3_4+x3_5, ((-d_0*x2_4-4*d_1*x2_3-6*d_2*x2_2-4*d_3*x2_1-d_4*x2_0)*b+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((d_0*x2_6+6*d_1*x2_5+15*d_2*x2_4+20*d_3*x2_3+15*d_4*x2_2+6*d_5*x2_1+d_6*x2_0)*b+(-x3_0-x4_0+a_0)*x2_6+(a_6-x3_6-x4_6)*x2_0+(6*a_5-6*x3_5-6*x4_5)*x2_1+(15*a_4-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3+20*a_3)*x2_3+(-15*x3_2-15*x4_2+15*a_2)*x2_4-6*x2_5*(x3_1+x4_1-a_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, a_6, d_6, ((x3_5-a_5)*x2_0+(5*x3_4-5*a_4)*x2_1+(10*x3_3-10*a_3)*x2_2+(10*x3_2-10*a_2)*x2_3+(5*x3_1-5*a_1)*x2_4+x2_5*(-a_0+x3_0))*k5+k6*x3_5+x3_6, ((-d_0*x2_5-5*d_1*x2_4-10*d_2*x2_3-10*d_3*x2_2-5*d_4*x2_1-d_5*x2_0)*b+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((d_0*x2_7+7*d_1*x2_6+21*d_2*x2_5+35*d_3*x2_4+35*d_4*x2_3+21*d_5*x2_2+7*d_6*x2_1+d_7*x2_0)*b+(-x3_0-x4_0+a_0)*x2_7+(a_7-x3_7-x4_7)*x2_0+(7*a_6-7*x3_6-7*x4_6)*x2_1+(21*a_5-21*x3_5-21*x4_5)*x2_2+(35*a_4-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3+35*a_3)*x2_4+(-21*x3_2-21*x4_2+21*a_2)*x2_5-7*x2_6*(x3_1+x4_1-a_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, a_7, d_7, ((x3_6-a_6)*x2_0+(6*x3_5-6*a_5)*x2_1+(15*x3_4-15*a_4)*x2_2+(20*x3_3-20*a_3)*x2_3+(15*x3_2-15*a_2)*x2_4+(6*x3_1-6*a_1)*x2_5+x2_6*(-a_0+x3_0))*k5+k6*x3_6+x3_7, ((-d_0*x2_6-6*d_1*x2_5-15*d_2*x2_4-20*d_3*x2_3-15*d_4*x2_2-6*d_5*x2_1-d_6*x2_0)*b+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -a_1+y_faux1_1, -a_2+y_faux1_2, -a_3+y_faux1_3, -a_4+y_faux1_4, -a_5+y_faux1_5, -a_6+y_faux1_6, -a_7+y_faux1_7, -d_1+y_faux2_1, -d_2+y_faux2_2, -d_3+y_faux2_3, -d_4+y_faux2_4, -d_5+y_faux2_5, -d_6+y_faux2_6, -d_7+y_faux2_7, y_faux3_0-x3_2]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = a_0, y_faux1_1 = a_1, y_faux1_2 = a_2, y_faux1_3 = a_3, y_faux1_4 = a_4, y_faux1_5 = a_5, y_faux1_6 = a_6, y_faux1_7 = a_7, y_faux1_8 = a_8, y_faux1_9 = a_9, y_faux1_10 = a_10, y_faux1_11 = a_11, y_faux1_12 = a_12, y_faux1_13 = a_13, y_faux1_14 = a_14, y_faux2_0 = d_0, y_faux2_1 = d_1, y_faux2_2 = d_2, y_faux2_3 = d_3, y_faux2_4 = d_4, y_faux2_5 = d_5, y_faux2_6 = d_6, y_faux2_7 = d_7, y_faux2_8 = d_8, y_faux2_9 = d_9, y_faux2_10 = d_10, y_faux2_11 = d_11, y_faux2_12 = d_12, y_faux2_13 = d_13, y_faux2_14 = d_14, y_faux3_0 = x3_2]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability without tr. basis:  525956485400000000000000
Random sample for the outputs and inputs is generated from  [b = .5940716927e24, k3 = .4222705145e24, k4 = .4831297628e24, k5 = .3027559303e23, k6 = .5538369732e24, k7 = .3494062397e24, a_0 = .5135204796e23, d_0 = .3675150662e24, x1_0 = .2905187270e24, x2_0 = .3016906388e24, x3_0 = .3876778560e23, x4_0 = .4802349237e24, x5_0 = .3699029598e24]
The polynomial system widehat{E^t} contains  83 equations in  68  variables
            "new_logs/Tumor/transcendence_20_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [a, d, x3_3]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {a, d}
Algebraically independent parameters among derivatives: {x3_3}
	Adding ODEs: [diff(a(t),t) = 0, diff(d(t),t) = 0]
	Adding output functions: [y_faux1(t) = a(t), y_faux2(t) = d(t)]
	New system: [diff(a(t),t) = 0, diff(d(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b*d(t)*k5+a(t)*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a(t)*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b*d(t)*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = a(t), y_faux2(t) = d(t)]

=== Input info ===
State variables:          [a(t), d(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t), y_faux2(t)]
Input variables:          []
Parameters in equations:  [b, k3, k4, k5, k6, k7]
===================

memory used=5817.5MB, alloc=183.8MB, time=52.57
memory used=5917.6MB, alloc=183.8MB, time=53.34
	Adding new y-equations: [y_faux3_0 = x3_3]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-a_0, a_1, y_faux2_0-d_0, d_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b*d_0*k5*x2_0+a_0*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b*d_0+a_0-x3_0-x4_0)*x2_1+x2_0*(b*d_1+a_1-x3_1-x4_1))*k5-x1_1*k3+k4*x2_1-k6*x3_1-k6*x4_1+x2_2, -a_0*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b*d_0*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b*d_0+a_0-x3_0-x4_0)*x2_2+(b*d_2+a_2-x3_2-x4_2)*x2_0+2*x2_1*(b*d_1+a_1-x3_1-x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, a_2, d_2, ((-a_1+x3_1)*x2_0-x2_1*(a_0-x3_0))*k5+k6*x3_1+x3_2, ((-b*d_1+x4_1)*x2_0-x2_1*(b*d_0-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b*d_0+a_0-x3_0-x4_0)*x2_3+(b*d_3+a_3-x3_3-x4_3)*x2_0+(3*b*d_2+3*a_2-3*x3_2-3*x4_2)*x2_1+3*x2_2*(b*d_1+a_1-x3_1-x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, a_3, d_3, ((x3_2-a_2)*x2_0+(2*x3_1-2*a_1)*x2_1-x2_2*(a_0-x3_0))*k5+k6*x3_2+x3_3, ((-d_0*x2_2-2*d_1*x2_1-d_2*x2_0)*b+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b*d_0+a_0-x3_0-x4_0)*x2_4+(4*d_1*x2_3+6*d_2*x2_2+4*d_3*x2_1+d_4*x2_0)*b+(a_4-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3+4*a_3)*x2_1+(-6*x3_2-6*x4_2+6*a_2)*x2_2-4*x2_3*(x3_1+x4_1-a_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, a_4, d_4, ((x3_3-a_3)*x2_0+(3*x3_2-3*a_2)*x2_1+(3*x3_1-3*a_1)*x2_2+x2_3*(-a_0+x3_0))*k5+k6*x3_3+x3_4, ((-d_0*x2_3-3*d_1*x2_2-3*d_2*x2_1-d_3*x2_0)*b+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((d_0*x2_5+5*d_1*x2_4+10*d_2*x2_3+10*d_3*x2_2+5*d_4*x2_1+d_5*x2_0)*b+(-x3_0-x4_0+a_0)*x2_5+(a_5-x3_5-x4_5)*x2_0+(5*a_4-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3+10*a_3)*x2_2+(-10*x3_2-10*x4_2+10*a_2)*x2_3-5*x2_4*(x3_1+x4_1-a_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, a_5, d_5, ((x3_4-a_4)*x2_0+(4*x3_3-4*a_3)*x2_1+(6*x3_2-6*a_2)*x2_2+(4*x3_1-4*a_1)*x2_3+x2_4*(-a_0+x3_0))*k5+k6*x3_4+x3_5, ((-d_0*x2_4-4*d_1*x2_3-6*d_2*x2_2-4*d_3*x2_1-d_4*x2_0)*b+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((d_0*x2_6+6*d_1*x2_5+15*d_2*x2_4+20*d_3*x2_3+15*d_4*x2_2+6*d_5*x2_1+d_6*x2_0)*b+(-x3_0-x4_0+a_0)*x2_6+(a_6-x3_6-x4_6)*x2_0+(6*a_5-6*x3_5-6*x4_5)*x2_1+(15*a_4-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3+20*a_3)*x2_3+(-15*x3_2-15*x4_2+15*a_2)*x2_4-6*x2_5*(x3_1+x4_1-a_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, a_6, d_6, ((x3_5-a_5)*x2_0+(5*x3_4-5*a_4)*x2_1+(10*x3_3-10*a_3)*x2_2+(10*x3_2-10*a_2)*x2_3+(5*x3_1-5*a_1)*x2_4+x2_5*(-a_0+x3_0))*k5+k6*x3_5+x3_6, ((-d_0*x2_5-5*d_1*x2_4-10*d_2*x2_3-10*d_3*x2_2-5*d_4*x2_1-d_5*x2_0)*b+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((d_0*x2_7+7*d_1*x2_6+21*d_2*x2_5+35*d_3*x2_4+35*d_4*x2_3+21*d_5*x2_2+7*d_6*x2_1+d_7*x2_0)*b+(-x3_0-x4_0+a_0)*x2_7+(a_7-x3_7-x4_7)*x2_0+(7*a_6-7*x3_6-7*x4_6)*x2_1+(21*a_5-21*x3_5-21*x4_5)*x2_2+(35*a_4-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3+35*a_3)*x2_4+(-21*x3_2-21*x4_2+21*a_2)*x2_5-7*x2_6*(x3_1+x4_1-a_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, a_7, d_7, ((x3_6-a_6)*x2_0+(6*x3_5-6*a_5)*x2_1+(15*x3_4-15*a_4)*x2_2+(20*x3_3-20*a_3)*x2_3+(15*x3_2-15*a_2)*x2_4+(6*x3_1-6*a_1)*x2_5+x2_6*(-a_0+x3_0))*k5+k6*x3_6+x3_7, ((-d_0*x2_6-6*d_1*x2_5-15*d_2*x2_4-20*d_3*x2_3-15*d_4*x2_2-6*d_5*x2_1-d_6*x2_0)*b+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -a_1+y_faux1_1, -a_2+y_faux1_2, -a_3+y_faux1_3, -a_4+y_faux1_4, -a_5+y_faux1_5, -a_6+y_faux1_6, -a_7+y_faux1_7, -d_1+y_faux2_1, -d_2+y_faux2_2, -d_3+y_faux2_3, -d_4+y_faux2_4, -d_5+y_faux2_5, -d_6+y_faux2_6, -d_7+y_faux2_7, y_faux3_0-x3_3]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = a_0, y_faux1_1 = a_1, y_faux1_2 = a_2, y_faux1_3 = a_3, y_faux1_4 = a_4, y_faux1_5 = a_5, y_faux1_6 = a_6, y_faux1_7 = a_7, y_faux1_8 = a_8, y_faux1_9 = a_9, y_faux1_10 = a_10, y_faux1_11 = a_11, y_faux1_12 = a_12, y_faux1_13 = a_13, y_faux1_14 = a_14, y_faux2_0 = d_0, y_faux2_1 = d_1, y_faux2_2 = d_2, y_faux2_3 = d_3, y_faux2_4 = d_4, y_faux2_5 = d_5, y_faux2_6 = d_6, y_faux2_7 = d_7, y_faux2_8 = d_8, y_faux2_9 = d_9, y_faux2_10 = d_10, y_faux2_11 = d_11, y_faux2_12 = d_12, y_faux2_13 = d_13, y_faux2_14 = d_14, y_faux3_0 = x3_3]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability without tr. basis:  525956485400000000000000
Random sample for the outputs and inputs is generated from  [b = .4344297204e24, k3 = .6466939669e24, k4 = .3788950311e24, k5 = .2362658997e24, k6 = .1521046657e24, k7 = .2751241999e24, a_0 = .4802320933e24, d_0 = .6326134092e24, x1_0 = .5385693019e24, x2_0 = .4365016447e24, x3_0 = .6368437655e24, x4_0 = .3485733599e24, x5_0 = .3445230009e24]
The polynomial system widehat{E^t} contains  83 equations in  68  variables
            "new_logs/Tumor/transcendence_21_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [a, d, x3_4]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {a, d}
Algebraically independent parameters among derivatives: {x3_4}
	Adding ODEs: [diff(a(t),t) = 0, diff(d(t),t) = 0]
	Adding output functions: [y_faux1(t) = a(t), y_faux2(t) = d(t)]
	New system: [diff(a(t),t) = 0, diff(d(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b*d(t)*k5+a(t)*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a(t)*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b*d(t)*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = a(t), y_faux2(t) = d(t)]

=== Input info ===
State variables:          [a(t), d(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t), y_faux2(t)]
Input variables:          []
Parameters in equations:  [b, k3, k4, k5, k6, k7]
===================

memory used=6041.1MB, alloc=183.8MB, time=54.50
memory used=6167.4MB, alloc=183.8MB, time=55.56
memory used=6267.8MB, alloc=183.8MB, time=56.35
	Adding new y-equations: [y_faux3_0 = x3_4]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-a_0, a_1, y_faux2_0-d_0, d_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b*d_0*k5*x2_0+a_0*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b*d_0+a_0-x3_0-x4_0)*x2_1+x2_0*(b*d_1+a_1-x3_1-x4_1))*k5-x1_1*k3+k4*x2_1-k6*x3_1-k6*x4_1+x2_2, -a_0*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b*d_0*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b*d_0+a_0-x3_0-x4_0)*x2_2+(b*d_2+a_2-x3_2-x4_2)*x2_0+2*x2_1*(b*d_1+a_1-x3_1-x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, a_2, d_2, ((-a_1+x3_1)*x2_0-x2_1*(a_0-x3_0))*k5+k6*x3_1+x3_2, ((-b*d_1+x4_1)*x2_0-x2_1*(b*d_0-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b*d_0+a_0-x3_0-x4_0)*x2_3+(b*d_3+a_3-x3_3-x4_3)*x2_0+(3*b*d_2+3*a_2-3*x3_2-3*x4_2)*x2_1+3*x2_2*(b*d_1+a_1-x3_1-x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, a_3, d_3, ((x3_2-a_2)*x2_0+(2*x3_1-2*a_1)*x2_1-x2_2*(a_0-x3_0))*k5+k6*x3_2+x3_3, ((-d_0*x2_2-2*d_1*x2_1-d_2*x2_0)*b+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b*d_0+a_0-x3_0-x4_0)*x2_4+(4*d_1*x2_3+6*d_2*x2_2+4*d_3*x2_1+d_4*x2_0)*b+(a_4-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3+4*a_3)*x2_1+(-6*x3_2-6*x4_2+6*a_2)*x2_2-4*x2_3*(x3_1+x4_1-a_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, a_4, d_4, ((x3_3-a_3)*x2_0+(3*x3_2-3*a_2)*x2_1+(3*x3_1-3*a_1)*x2_2+x2_3*(-a_0+x3_0))*k5+k6*x3_3+x3_4, ((-d_0*x2_3-3*d_1*x2_2-3*d_2*x2_1-d_3*x2_0)*b+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((d_0*x2_5+5*d_1*x2_4+10*d_2*x2_3+10*d_3*x2_2+5*d_4*x2_1+d_5*x2_0)*b+(-x3_0-x4_0+a_0)*x2_5+(a_5-x3_5-x4_5)*x2_0+(5*a_4-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3+10*a_3)*x2_2+(-10*x3_2-10*x4_2+10*a_2)*x2_3-5*x2_4*(x3_1+x4_1-a_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, a_5, d_5, ((x3_4-a_4)*x2_0+(4*x3_3-4*a_3)*x2_1+(6*x3_2-6*a_2)*x2_2+(4*x3_1-4*a_1)*x2_3+x2_4*(-a_0+x3_0))*k5+k6*x3_4+x3_5, ((-d_0*x2_4-4*d_1*x2_3-6*d_2*x2_2-4*d_3*x2_1-d_4*x2_0)*b+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((d_0*x2_6+6*d_1*x2_5+15*d_2*x2_4+20*d_3*x2_3+15*d_4*x2_2+6*d_5*x2_1+d_6*x2_0)*b+(-x3_0-x4_0+a_0)*x2_6+(a_6-x3_6-x4_6)*x2_0+(6*a_5-6*x3_5-6*x4_5)*x2_1+(15*a_4-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3+20*a_3)*x2_3+(-15*x3_2-15*x4_2+15*a_2)*x2_4-6*x2_5*(x3_1+x4_1-a_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, a_6, d_6, ((x3_5-a_5)*x2_0+(5*x3_4-5*a_4)*x2_1+(10*x3_3-10*a_3)*x2_2+(10*x3_2-10*a_2)*x2_3+(5*x3_1-5*a_1)*x2_4+x2_5*(-a_0+x3_0))*k5+k6*x3_5+x3_6, ((-d_0*x2_5-5*d_1*x2_4-10*d_2*x2_3-10*d_3*x2_2-5*d_4*x2_1-d_5*x2_0)*b+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((d_0*x2_7+7*d_1*x2_6+21*d_2*x2_5+35*d_3*x2_4+35*d_4*x2_3+21*d_5*x2_2+7*d_6*x2_1+d_7*x2_0)*b+(-x3_0-x4_0+a_0)*x2_7+(a_7-x3_7-x4_7)*x2_0+(7*a_6-7*x3_6-7*x4_6)*x2_1+(21*a_5-21*x3_5-21*x4_5)*x2_2+(35*a_4-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3+35*a_3)*x2_4+(-21*x3_2-21*x4_2+21*a_2)*x2_5-7*x2_6*(x3_1+x4_1-a_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, a_7, d_7, ((x3_6-a_6)*x2_0+(6*x3_5-6*a_5)*x2_1+(15*x3_4-15*a_4)*x2_2+(20*x3_3-20*a_3)*x2_3+(15*x3_2-15*a_2)*x2_4+(6*x3_1-6*a_1)*x2_5+x2_6*(-a_0+x3_0))*k5+k6*x3_6+x3_7, ((-d_0*x2_6-6*d_1*x2_5-15*d_2*x2_4-20*d_3*x2_3-15*d_4*x2_2-6*d_5*x2_1-d_6*x2_0)*b+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -a_1+y_faux1_1, -a_2+y_faux1_2, -a_3+y_faux1_3, -a_4+y_faux1_4, -a_5+y_faux1_5, -a_6+y_faux1_6, -a_7+y_faux1_7, -d_1+y_faux2_1, -d_2+y_faux2_2, -d_3+y_faux2_3, -d_4+y_faux2_4, -d_5+y_faux2_5, -d_6+y_faux2_6, -d_7+y_faux2_7, y_faux3_0-x3_4]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = a_0, y_faux1_1 = a_1, y_faux1_2 = a_2, y_faux1_3 = a_3, y_faux1_4 = a_4, y_faux1_5 = a_5, y_faux1_6 = a_6, y_faux1_7 = a_7, y_faux1_8 = a_8, y_faux1_9 = a_9, y_faux1_10 = a_10, y_faux1_11 = a_11, y_faux1_12 = a_12, y_faux1_13 = a_13, y_faux1_14 = a_14, y_faux2_0 = d_0, y_faux2_1 = d_1, y_faux2_2 = d_2, y_faux2_3 = d_3, y_faux2_4 = d_4, y_faux2_5 = d_5, y_faux2_6 = d_6, y_faux2_7 = d_7, y_faux2_8 = d_8, y_faux2_9 = d_9, y_faux2_10 = d_10, y_faux2_11 = d_11, y_faux2_12 = d_12, y_faux2_13 = d_13, y_faux2_14 = d_14, y_faux3_0 = x3_4]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability without tr. basis:  525956485400000000000000
Random sample for the outputs and inputs is generated from  [b = .5496603646e24, k3 = .6766010222e24, k4 = .2845031600e24, k5 = .5333898568e24, k6 = .1051254525e24, k7 = .7168411159e23, a_0 = .6182247628e24, d_0 = .1197384962e24, x1_0 = .4056319651e24, x2_0 = .3711816386e24, x3_0 = .3437028735e24, x4_0 = .3574051835e23, x5_0 = .3277406253e24]
The polynomial system widehat{E^t} contains  83 equations in  68  variables
            "new_logs/Tumor/transcendence_22_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [a, d, x3_5]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {a, d}
Algebraically independent parameters among derivatives: {x3_5}
	Adding ODEs: [diff(a(t),t) = 0, diff(d(t),t) = 0]
	Adding output functions: [y_faux1(t) = a(t), y_faux2(t) = d(t)]
	New system: [diff(a(t),t) = 0, diff(d(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b*d(t)*k5+a(t)*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a(t)*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b*d(t)*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = a(t), y_faux2(t) = d(t)]

=== Input info ===
State variables:          [a(t), d(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t), y_faux2(t)]
Input variables:          []
Parameters in equations:  [b, k3, k4, k5, k6, k7]
===================

memory used=6389.6MB, alloc=183.8MB, time=57.65
memory used=6489.6MB, alloc=183.8MB, time=58.38
	Adding new y-equations: [y_faux3_0 = x3_5]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-a_0, a_1, y_faux2_0-d_0, d_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b*d_0*k5*x2_0+a_0*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b*d_0+a_0-x3_0-x4_0)*x2_1+x2_0*(b*d_1+a_1-x3_1-x4_1))*k5-x1_1*k3+k4*x2_1-k6*x3_1-k6*x4_1+x2_2, -a_0*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b*d_0*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b*d_0+a_0-x3_0-x4_0)*x2_2+(b*d_2+a_2-x3_2-x4_2)*x2_0+2*x2_1*(b*d_1+a_1-x3_1-x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, a_2, d_2, ((-a_1+x3_1)*x2_0-x2_1*(a_0-x3_0))*k5+k6*x3_1+x3_2, ((-b*d_1+x4_1)*x2_0-x2_1*(b*d_0-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b*d_0+a_0-x3_0-x4_0)*x2_3+(b*d_3+a_3-x3_3-x4_3)*x2_0+(3*b*d_2+3*a_2-3*x3_2-3*x4_2)*x2_1+3*x2_2*(b*d_1+a_1-x3_1-x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, a_3, d_3, ((x3_2-a_2)*x2_0+(2*x3_1-2*a_1)*x2_1-x2_2*(a_0-x3_0))*k5+k6*x3_2+x3_3, ((-d_0*x2_2-2*d_1*x2_1-d_2*x2_0)*b+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b*d_0+a_0-x3_0-x4_0)*x2_4+(4*d_1*x2_3+6*d_2*x2_2+4*d_3*x2_1+d_4*x2_0)*b+(a_4-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3+4*a_3)*x2_1+(-6*x3_2-6*x4_2+6*a_2)*x2_2-4*x2_3*(x3_1+x4_1-a_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, a_4, d_4, ((x3_3-a_3)*x2_0+(3*x3_2-3*a_2)*x2_1+(3*x3_1-3*a_1)*x2_2+x2_3*(-a_0+x3_0))*k5+k6*x3_3+x3_4, ((-d_0*x2_3-3*d_1*x2_2-3*d_2*x2_1-d_3*x2_0)*b+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((d_0*x2_5+5*d_1*x2_4+10*d_2*x2_3+10*d_3*x2_2+5*d_4*x2_1+d_5*x2_0)*b+(-x3_0-x4_0+a_0)*x2_5+(a_5-x3_5-x4_5)*x2_0+(5*a_4-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3+10*a_3)*x2_2+(-10*x3_2-10*x4_2+10*a_2)*x2_3-5*x2_4*(x3_1+x4_1-a_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, a_5, d_5, ((x3_4-a_4)*x2_0+(4*x3_3-4*a_3)*x2_1+(6*x3_2-6*a_2)*x2_2+(4*x3_1-4*a_1)*x2_3+x2_4*(-a_0+x3_0))*k5+k6*x3_4+x3_5, ((-d_0*x2_4-4*d_1*x2_3-6*d_2*x2_2-4*d_3*x2_1-d_4*x2_0)*b+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((d_0*x2_6+6*d_1*x2_5+15*d_2*x2_4+20*d_3*x2_3+15*d_4*x2_2+6*d_5*x2_1+d_6*x2_0)*b+(-x3_0-x4_0+a_0)*x2_6+(a_6-x3_6-x4_6)*x2_0+(6*a_5-6*x3_5-6*x4_5)*x2_1+(15*a_4-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3+20*a_3)*x2_3+(-15*x3_2-15*x4_2+15*a_2)*x2_4-6*x2_5*(x3_1+x4_1-a_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, a_6, d_6, ((x3_5-a_5)*x2_0+(5*x3_4-5*a_4)*x2_1+(10*x3_3-10*a_3)*x2_2+(10*x3_2-10*a_2)*x2_3+(5*x3_1-5*a_1)*x2_4+x2_5*(-a_0+x3_0))*k5+k6*x3_5+x3_6, ((-d_0*x2_5-5*d_1*x2_4-10*d_2*x2_3-10*d_3*x2_2-5*d_4*x2_1-d_5*x2_0)*b+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((d_0*x2_7+7*d_1*x2_6+21*d_2*x2_5+35*d_3*x2_4+35*d_4*x2_3+21*d_5*x2_2+7*d_6*x2_1+d_7*x2_0)*b+(-x3_0-x4_0+a_0)*x2_7+(a_7-x3_7-x4_7)*x2_0+(7*a_6-7*x3_6-7*x4_6)*x2_1+(21*a_5-21*x3_5-21*x4_5)*x2_2+(35*a_4-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3+35*a_3)*x2_4+(-21*x3_2-21*x4_2+21*a_2)*x2_5-7*x2_6*(x3_1+x4_1-a_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, a_7, d_7, ((x3_6-a_6)*x2_0+(6*x3_5-6*a_5)*x2_1+(15*x3_4-15*a_4)*x2_2+(20*x3_3-20*a_3)*x2_3+(15*x3_2-15*a_2)*x2_4+(6*x3_1-6*a_1)*x2_5+x2_6*(-a_0+x3_0))*k5+k6*x3_6+x3_7, ((-d_0*x2_6-6*d_1*x2_5-15*d_2*x2_4-20*d_3*x2_3-15*d_4*x2_2-6*d_5*x2_1-d_6*x2_0)*b+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -a_1+y_faux1_1, -a_2+y_faux1_2, -a_3+y_faux1_3, -a_4+y_faux1_4, -a_5+y_faux1_5, -a_6+y_faux1_6, -a_7+y_faux1_7, -d_1+y_faux2_1, -d_2+y_faux2_2, -d_3+y_faux2_3, -d_4+y_faux2_4, -d_5+y_faux2_5, -d_6+y_faux2_6, -d_7+y_faux2_7, y_faux3_0-x3_5]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = a_0, y_faux1_1 = a_1, y_faux1_2 = a_2, y_faux1_3 = a_3, y_faux1_4 = a_4, y_faux1_5 = a_5, y_faux1_6 = a_6, y_faux1_7 = a_7, y_faux1_8 = a_8, y_faux1_9 = a_9, y_faux1_10 = a_10, y_faux1_11 = a_11, y_faux1_12 = a_12, y_faux1_13 = a_13, y_faux1_14 = a_14, y_faux2_0 = d_0, y_faux2_1 = d_1, y_faux2_2 = d_2, y_faux2_3 = d_3, y_faux2_4 = d_4, y_faux2_5 = d_5, y_faux2_6 = d_6, y_faux2_7 = d_7, y_faux2_8 = d_8, y_faux2_9 = d_9, y_faux2_10 = d_10, y_faux2_11 = d_11, y_faux2_12 = d_12, y_faux2_13 = d_13, y_faux2_14 = d_14, y_faux3_0 = x3_5]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability without tr. basis:  525956485400000000000000
Random sample for the outputs and inputs is generated from  [b = .9230115498e23, k3 = .5772216271e24, k4 = .8240375490e23, k5 = .2624876365e23, k6 = .3110780350e24, k7 = .2767105560e24, a_0 = .6796015177e24, d_0 = .5606144378e24, x1_0 = .2007474783e24, x2_0 = .3303785972e24, x3_0 = .4736660278e24, x4_0 = .4358678333e23, x5_0 = .5335213332e24]
The polynomial system widehat{E^t} contains  83 equations in  68  variables
            "new_logs/Tumor/transcendence_23_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [a, d, x3_6]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {a, d}
Algebraically independent parameters among derivatives: {x3_6}
	Adding ODEs: [diff(a(t),t) = 0, diff(d(t),t) = 0]
	Adding output functions: [y_faux1(t) = a(t), y_faux2(t) = d(t)]
	New system: [diff(a(t),t) = 0, diff(d(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b*d(t)*k5+a(t)*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a(t)*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b*d(t)*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = a(t), y_faux2(t) = d(t)]

=== Input info ===
State variables:          [a(t), d(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t), y_faux2(t)]
Input variables:          []
Parameters in equations:  [b, k3, k4, k5, k6, k7]
===================

memory used=6613.7MB, alloc=183.8MB, time=59.56
memory used=6738.5MB, alloc=183.8MB, time=60.60
memory used=6838.7MB, alloc=183.8MB, time=61.38
	Adding new y-equations: [y_faux3_0 = x3_6]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-a_0, a_1, y_faux2_0-d_0, d_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b*d_0*k5*x2_0+a_0*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b*d_0+a_0-x3_0-x4_0)*x2_1+x2_0*(b*d_1+a_1-x3_1-x4_1))*k5-x1_1*k3+k4*x2_1-k6*x3_1-k6*x4_1+x2_2, -a_0*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b*d_0*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b*d_0+a_0-x3_0-x4_0)*x2_2+(b*d_2+a_2-x3_2-x4_2)*x2_0+2*x2_1*(b*d_1+a_1-x3_1-x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, a_2, d_2, ((-a_1+x3_1)*x2_0-x2_1*(a_0-x3_0))*k5+k6*x3_1+x3_2, ((-b*d_1+x4_1)*x2_0-x2_1*(b*d_0-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b*d_0+a_0-x3_0-x4_0)*x2_3+(b*d_3+a_3-x3_3-x4_3)*x2_0+(3*b*d_2+3*a_2-3*x3_2-3*x4_2)*x2_1+3*x2_2*(b*d_1+a_1-x3_1-x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, a_3, d_3, ((x3_2-a_2)*x2_0+(2*x3_1-2*a_1)*x2_1-x2_2*(a_0-x3_0))*k5+k6*x3_2+x3_3, ((-d_0*x2_2-2*d_1*x2_1-d_2*x2_0)*b+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b*d_0+a_0-x3_0-x4_0)*x2_4+(4*d_1*x2_3+6*d_2*x2_2+4*d_3*x2_1+d_4*x2_0)*b+(a_4-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3+4*a_3)*x2_1+(-6*x3_2-6*x4_2+6*a_2)*x2_2-4*x2_3*(x3_1+x4_1-a_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, a_4, d_4, ((x3_3-a_3)*x2_0+(3*x3_2-3*a_2)*x2_1+(3*x3_1-3*a_1)*x2_2+x2_3*(-a_0+x3_0))*k5+k6*x3_3+x3_4, ((-d_0*x2_3-3*d_1*x2_2-3*d_2*x2_1-d_3*x2_0)*b+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((d_0*x2_5+5*d_1*x2_4+10*d_2*x2_3+10*d_3*x2_2+5*d_4*x2_1+d_5*x2_0)*b+(-x3_0-x4_0+a_0)*x2_5+(a_5-x3_5-x4_5)*x2_0+(5*a_4-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3+10*a_3)*x2_2+(-10*x3_2-10*x4_2+10*a_2)*x2_3-5*x2_4*(x3_1+x4_1-a_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, a_5, d_5, ((x3_4-a_4)*x2_0+(4*x3_3-4*a_3)*x2_1+(6*x3_2-6*a_2)*x2_2+(4*x3_1-4*a_1)*x2_3+x2_4*(-a_0+x3_0))*k5+k6*x3_4+x3_5, ((-d_0*x2_4-4*d_1*x2_3-6*d_2*x2_2-4*d_3*x2_1-d_4*x2_0)*b+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((d_0*x2_6+6*d_1*x2_5+15*d_2*x2_4+20*d_3*x2_3+15*d_4*x2_2+6*d_5*x2_1+d_6*x2_0)*b+(-x3_0-x4_0+a_0)*x2_6+(a_6-x3_6-x4_6)*x2_0+(6*a_5-6*x3_5-6*x4_5)*x2_1+(15*a_4-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3+20*a_3)*x2_3+(-15*x3_2-15*x4_2+15*a_2)*x2_4-6*x2_5*(x3_1+x4_1-a_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, a_6, d_6, ((x3_5-a_5)*x2_0+(5*x3_4-5*a_4)*x2_1+(10*x3_3-10*a_3)*x2_2+(10*x3_2-10*a_2)*x2_3+(5*x3_1-5*a_1)*x2_4+x2_5*(-a_0+x3_0))*k5+k6*x3_5+x3_6, ((-d_0*x2_5-5*d_1*x2_4-10*d_2*x2_3-10*d_3*x2_2-5*d_4*x2_1-d_5*x2_0)*b+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((d_0*x2_7+7*d_1*x2_6+21*d_2*x2_5+35*d_3*x2_4+35*d_4*x2_3+21*d_5*x2_2+7*d_6*x2_1+d_7*x2_0)*b+(-x3_0-x4_0+a_0)*x2_7+(a_7-x3_7-x4_7)*x2_0+(7*a_6-7*x3_6-7*x4_6)*x2_1+(21*a_5-21*x3_5-21*x4_5)*x2_2+(35*a_4-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3+35*a_3)*x2_4+(-21*x3_2-21*x4_2+21*a_2)*x2_5-7*x2_6*(x3_1+x4_1-a_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, a_7, d_7, ((x3_6-a_6)*x2_0+(6*x3_5-6*a_5)*x2_1+(15*x3_4-15*a_4)*x2_2+(20*x3_3-20*a_3)*x2_3+(15*x3_2-15*a_2)*x2_4+(6*x3_1-6*a_1)*x2_5+x2_6*(-a_0+x3_0))*k5+k6*x3_6+x3_7, ((-d_0*x2_6-6*d_1*x2_5-15*d_2*x2_4-20*d_3*x2_3-15*d_4*x2_2-6*d_5*x2_1-d_6*x2_0)*b+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -a_1+y_faux1_1, -a_2+y_faux1_2, -a_3+y_faux1_3, -a_4+y_faux1_4, -a_5+y_faux1_5, -a_6+y_faux1_6, -a_7+y_faux1_7, -d_1+y_faux2_1, -d_2+y_faux2_2, -d_3+y_faux2_3, -d_4+y_faux2_4, -d_5+y_faux2_5, -d_6+y_faux2_6, -d_7+y_faux2_7, y_faux3_0-x3_6]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = a_0, y_faux1_1 = a_1, y_faux1_2 = a_2, y_faux1_3 = a_3, y_faux1_4 = a_4, y_faux1_5 = a_5, y_faux1_6 = a_6, y_faux1_7 = a_7, y_faux1_8 = a_8, y_faux1_9 = a_9, y_faux1_10 = a_10, y_faux1_11 = a_11, y_faux1_12 = a_12, y_faux1_13 = a_13, y_faux1_14 = a_14, y_faux2_0 = d_0, y_faux2_1 = d_1, y_faux2_2 = d_2, y_faux2_3 = d_3, y_faux2_4 = d_4, y_faux2_5 = d_5, y_faux2_6 = d_6, y_faux2_7 = d_7, y_faux2_8 = d_8, y_faux2_9 = d_9, y_faux2_10 = d_10, y_faux2_11 = d_11, y_faux2_12 = d_12, y_faux2_13 = d_13, y_faux2_14 = d_14, y_faux3_0 = x3_6]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability without tr. basis:  525956485400000000000000
Random sample for the outputs and inputs is generated from  [b = .4328290272e23, k3 = .3305681737e24, k4 = .2307818867e24, k5 = .5174702320e24, k6 = .6884600436e24, k7 = .6912418786e24, a_0 = .2450317001e24, d_0 = .2295776783e24, x1_0 = .1081272002e24, x2_0 = .6072658679e24, x3_0 = .6793872581e24, x4_0 = .2569872960e24, x5_0 = .5540488900e24]
The polynomial system widehat{E^t} contains  83 equations in  68  variables
            "new_logs/Tumor/transcendence_24_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [a, d, x3_7]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {a, d}
Algebraically independent parameters among derivatives: {x3_7}
	Adding ODEs: [diff(a(t),t) = 0, diff(d(t),t) = 0]
	Adding output functions: [y_faux1(t) = a(t), y_faux2(t) = d(t)]
	New system: [diff(a(t),t) = 0, diff(d(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b*d(t)*k5+a(t)*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a(t)*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b*d(t)*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = a(t), y_faux2(t) = d(t)]

=== Input info ===
State variables:          [a(t), d(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t), y_faux2(t)]
Input variables:          []
Parameters in equations:  [b, k3, k4, k5, k6, k7]
===================

memory used=6961.7MB, alloc=183.8MB, time=62.64
memory used=7061.7MB, alloc=183.8MB, time=63.42
	Adding new y-equations: [y_faux3_0 = x3_7]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-a_0, a_1, y_faux2_0-d_0, d_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b*d_0*k5*x2_0+a_0*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b*d_0+a_0-x3_0-x4_0)*x2_1+x2_0*(b*d_1+a_1-x3_1-x4_1))*k5-x1_1*k3+k4*x2_1-k6*x3_1-k6*x4_1+x2_2, -a_0*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b*d_0*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b*d_0+a_0-x3_0-x4_0)*x2_2+(b*d_2+a_2-x3_2-x4_2)*x2_0+2*x2_1*(b*d_1+a_1-x3_1-x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, a_2, d_2, ((-a_1+x3_1)*x2_0-x2_1*(a_0-x3_0))*k5+k6*x3_1+x3_2, ((-b*d_1+x4_1)*x2_0-x2_1*(b*d_0-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b*d_0+a_0-x3_0-x4_0)*x2_3+(b*d_3+a_3-x3_3-x4_3)*x2_0+(3*b*d_2+3*a_2-3*x3_2-3*x4_2)*x2_1+3*x2_2*(b*d_1+a_1-x3_1-x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, a_3, d_3, ((x3_2-a_2)*x2_0+(2*x3_1-2*a_1)*x2_1-x2_2*(a_0-x3_0))*k5+k6*x3_2+x3_3, ((-d_0*x2_2-2*d_1*x2_1-d_2*x2_0)*b+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b*d_0+a_0-x3_0-x4_0)*x2_4+(4*d_1*x2_3+6*d_2*x2_2+4*d_3*x2_1+d_4*x2_0)*b+(a_4-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3+4*a_3)*x2_1+(-6*x3_2-6*x4_2+6*a_2)*x2_2-4*x2_3*(x3_1+x4_1-a_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, a_4, d_4, ((x3_3-a_3)*x2_0+(3*x3_2-3*a_2)*x2_1+(3*x3_1-3*a_1)*x2_2+x2_3*(-a_0+x3_0))*k5+k6*x3_3+x3_4, ((-d_0*x2_3-3*d_1*x2_2-3*d_2*x2_1-d_3*x2_0)*b+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((d_0*x2_5+5*d_1*x2_4+10*d_2*x2_3+10*d_3*x2_2+5*d_4*x2_1+d_5*x2_0)*b+(-x3_0-x4_0+a_0)*x2_5+(a_5-x3_5-x4_5)*x2_0+(5*a_4-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3+10*a_3)*x2_2+(-10*x3_2-10*x4_2+10*a_2)*x2_3-5*x2_4*(x3_1+x4_1-a_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, a_5, d_5, ((x3_4-a_4)*x2_0+(4*x3_3-4*a_3)*x2_1+(6*x3_2-6*a_2)*x2_2+(4*x3_1-4*a_1)*x2_3+x2_4*(-a_0+x3_0))*k5+k6*x3_4+x3_5, ((-d_0*x2_4-4*d_1*x2_3-6*d_2*x2_2-4*d_3*x2_1-d_4*x2_0)*b+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((d_0*x2_6+6*d_1*x2_5+15*d_2*x2_4+20*d_3*x2_3+15*d_4*x2_2+6*d_5*x2_1+d_6*x2_0)*b+(-x3_0-x4_0+a_0)*x2_6+(a_6-x3_6-x4_6)*x2_0+(6*a_5-6*x3_5-6*x4_5)*x2_1+(15*a_4-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3+20*a_3)*x2_3+(-15*x3_2-15*x4_2+15*a_2)*x2_4-6*x2_5*(x3_1+x4_1-a_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, a_6, d_6, ((x3_5-a_5)*x2_0+(5*x3_4-5*a_4)*x2_1+(10*x3_3-10*a_3)*x2_2+(10*x3_2-10*a_2)*x2_3+(5*x3_1-5*a_1)*x2_4+x2_5*(-a_0+x3_0))*k5+k6*x3_5+x3_6, ((-d_0*x2_5-5*d_1*x2_4-10*d_2*x2_3-10*d_3*x2_2-5*d_4*x2_1-d_5*x2_0)*b+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((d_0*x2_7+7*d_1*x2_6+21*d_2*x2_5+35*d_3*x2_4+35*d_4*x2_3+21*d_5*x2_2+7*d_6*x2_1+d_7*x2_0)*b+(-x3_0-x4_0+a_0)*x2_7+(a_7-x3_7-x4_7)*x2_0+(7*a_6-7*x3_6-7*x4_6)*x2_1+(21*a_5-21*x3_5-21*x4_5)*x2_2+(35*a_4-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3+35*a_3)*x2_4+(-21*x3_2-21*x4_2+21*a_2)*x2_5-7*x2_6*(x3_1+x4_1-a_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, a_7, d_7, ((x3_6-a_6)*x2_0+(6*x3_5-6*a_5)*x2_1+(15*x3_4-15*a_4)*x2_2+(20*x3_3-20*a_3)*x2_3+(15*x3_2-15*a_2)*x2_4+(6*x3_1-6*a_1)*x2_5+x2_6*(-a_0+x3_0))*k5+k6*x3_6+x3_7, ((-d_0*x2_6-6*d_1*x2_5-15*d_2*x2_4-20*d_3*x2_3-15*d_4*x2_2-6*d_5*x2_1-d_6*x2_0)*b+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -a_1+y_faux1_1, -a_2+y_faux1_2, -a_3+y_faux1_3, -a_4+y_faux1_4, -a_5+y_faux1_5, -a_6+y_faux1_6, -a_7+y_faux1_7, -d_1+y_faux2_1, -d_2+y_faux2_2, -d_3+y_faux2_3, -d_4+y_faux2_4, -d_5+y_faux2_5, -d_6+y_faux2_6, -d_7+y_faux2_7, y_faux3_0-x3_7]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = a_0, y_faux1_1 = a_1, y_faux1_2 = a_2, y_faux1_3 = a_3, y_faux1_4 = a_4, y_faux1_5 = a_5, y_faux1_6 = a_6, y_faux1_7 = a_7, y_faux1_8 = a_8, y_faux1_9 = a_9, y_faux1_10 = a_10, y_faux1_11 = a_11, y_faux1_12 = a_12, y_faux1_13 = a_13, y_faux1_14 = a_14, y_faux2_0 = d_0, y_faux2_1 = d_1, y_faux2_2 = d_2, y_faux2_3 = d_3, y_faux2_4 = d_4, y_faux2_5 = d_5, y_faux2_6 = d_6, y_faux2_7 = d_7, y_faux2_8 = d_8, y_faux2_9 = d_9, y_faux2_10 = d_10, y_faux2_11 = d_11, y_faux2_12 = d_12, y_faux2_13 = d_13, y_faux2_14 = d_14, y_faux3_0 = x3_7]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability without tr. basis:  525956485400000000000000
Random sample for the outputs and inputs is generated from  [b = .1332900547e23, k3 = .5399722121e24, k4 = .6335508004e24, k5 = .1385895928e24, k6 = .4067416092e24, k7 = .1669457420e23, a_0 = .2822466441e24, d_0 = .3927450145e24, x1_0 = .2730308758e24, x2_0 = .4957301076e24, x3_0 = .4386587722e24, x4_0 = .6340487350e24, x5_0 = .3512140335e24]
The polynomial system widehat{E^t} contains  83 equations in  68  variables
            "new_logs/Tumor/transcendence_25_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [a, d, x4(0)]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {a, d}
Algebraically independent parameters among derivatives: {x4(0)}
	Adding ODEs: [diff(a(t),t) = 0, diff(d(t),t) = 0]
	Adding output functions: [y_faux1(t) = a(t), y_faux2(t) = d(t)]
	New system: [diff(a(t),t) = 0, diff(d(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b*d(t)*k5+a(t)*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a(t)*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b*d(t)*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = a(t), y_faux2(t) = d(t)]

=== Input info ===
State variables:          [a(t), d(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t), y_faux2(t)]
Input variables:          []
Parameters in equations:  [b, k3, k4, k5, k6, k7]
===================

memory used=7187.2MB, alloc=183.8MB, time=64.66
memory used=7307.6MB, alloc=183.8MB, time=65.66
memory used=7408.0MB, alloc=183.8MB, time=66.44
	Adding new y-equations: [y_faux3_0 = x4_0]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-a_0, a_1, y_faux2_0-d_0, d_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b*d_0*k5*x2_0+a_0*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b*d_0+a_0-x3_0-x4_0)*x2_1+x2_0*(b*d_1+a_1-x3_1-x4_1))*k5-x1_1*k3+k4*x2_1-k6*x3_1-k6*x4_1+x2_2, -a_0*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b*d_0*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b*d_0+a_0-x3_0-x4_0)*x2_2+(b*d_2+a_2-x3_2-x4_2)*x2_0+2*x2_1*(b*d_1+a_1-x3_1-x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, a_2, d_2, ((-a_1+x3_1)*x2_0-x2_1*(a_0-x3_0))*k5+k6*x3_1+x3_2, ((-b*d_1+x4_1)*x2_0-x2_1*(b*d_0-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b*d_0+a_0-x3_0-x4_0)*x2_3+(b*d_3+a_3-x3_3-x4_3)*x2_0+(3*b*d_2+3*a_2-3*x3_2-3*x4_2)*x2_1+3*x2_2*(b*d_1+a_1-x3_1-x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, a_3, d_3, ((x3_2-a_2)*x2_0+(2*x3_1-2*a_1)*x2_1-x2_2*(a_0-x3_0))*k5+k6*x3_2+x3_3, ((-d_0*x2_2-2*d_1*x2_1-d_2*x2_0)*b+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b*d_0+a_0-x3_0-x4_0)*x2_4+(4*d_1*x2_3+6*d_2*x2_2+4*d_3*x2_1+d_4*x2_0)*b+(a_4-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3+4*a_3)*x2_1+(-6*x3_2-6*x4_2+6*a_2)*x2_2-4*x2_3*(x3_1+x4_1-a_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, a_4, d_4, ((x3_3-a_3)*x2_0+(3*x3_2-3*a_2)*x2_1+(3*x3_1-3*a_1)*x2_2+x2_3*(-a_0+x3_0))*k5+k6*x3_3+x3_4, ((-d_0*x2_3-3*d_1*x2_2-3*d_2*x2_1-d_3*x2_0)*b+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((d_0*x2_5+5*d_1*x2_4+10*d_2*x2_3+10*d_3*x2_2+5*d_4*x2_1+d_5*x2_0)*b+(-x3_0-x4_0+a_0)*x2_5+(a_5-x3_5-x4_5)*x2_0+(5*a_4-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3+10*a_3)*x2_2+(-10*x3_2-10*x4_2+10*a_2)*x2_3-5*x2_4*(x3_1+x4_1-a_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, a_5, d_5, ((x3_4-a_4)*x2_0+(4*x3_3-4*a_3)*x2_1+(6*x3_2-6*a_2)*x2_2+(4*x3_1-4*a_1)*x2_3+x2_4*(-a_0+x3_0))*k5+k6*x3_4+x3_5, ((-d_0*x2_4-4*d_1*x2_3-6*d_2*x2_2-4*d_3*x2_1-d_4*x2_0)*b+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((d_0*x2_6+6*d_1*x2_5+15*d_2*x2_4+20*d_3*x2_3+15*d_4*x2_2+6*d_5*x2_1+d_6*x2_0)*b+(-x3_0-x4_0+a_0)*x2_6+(a_6-x3_6-x4_6)*x2_0+(6*a_5-6*x3_5-6*x4_5)*x2_1+(15*a_4-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3+20*a_3)*x2_3+(-15*x3_2-15*x4_2+15*a_2)*x2_4-6*x2_5*(x3_1+x4_1-a_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, a_6, d_6, ((x3_5-a_5)*x2_0+(5*x3_4-5*a_4)*x2_1+(10*x3_3-10*a_3)*x2_2+(10*x3_2-10*a_2)*x2_3+(5*x3_1-5*a_1)*x2_4+x2_5*(-a_0+x3_0))*k5+k6*x3_5+x3_6, ((-d_0*x2_5-5*d_1*x2_4-10*d_2*x2_3-10*d_3*x2_2-5*d_4*x2_1-d_5*x2_0)*b+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((d_0*x2_7+7*d_1*x2_6+21*d_2*x2_5+35*d_3*x2_4+35*d_4*x2_3+21*d_5*x2_2+7*d_6*x2_1+d_7*x2_0)*b+(-x3_0-x4_0+a_0)*x2_7+(a_7-x3_7-x4_7)*x2_0+(7*a_6-7*x3_6-7*x4_6)*x2_1+(21*a_5-21*x3_5-21*x4_5)*x2_2+(35*a_4-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3+35*a_3)*x2_4+(-21*x3_2-21*x4_2+21*a_2)*x2_5-7*x2_6*(x3_1+x4_1-a_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, a_7, d_7, ((x3_6-a_6)*x2_0+(6*x3_5-6*a_5)*x2_1+(15*x3_4-15*a_4)*x2_2+(20*x3_3-20*a_3)*x2_3+(15*x3_2-15*a_2)*x2_4+(6*x3_1-6*a_1)*x2_5+x2_6*(-a_0+x3_0))*k5+k6*x3_6+x3_7, ((-d_0*x2_6-6*d_1*x2_5-15*d_2*x2_4-20*d_3*x2_3-15*d_4*x2_2-6*d_5*x2_1-d_6*x2_0)*b+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -a_1+y_faux1_1, -a_2+y_faux1_2, -a_3+y_faux1_3, -a_4+y_faux1_4, -a_5+y_faux1_5, -a_6+y_faux1_6, -a_7+y_faux1_7, -d_1+y_faux2_1, -d_2+y_faux2_2, -d_3+y_faux2_3, -d_4+y_faux2_4, -d_5+y_faux2_5, -d_6+y_faux2_6, -d_7+y_faux2_7, y_faux3_0-x4_0]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = a_0, y_faux1_1 = a_1, y_faux1_2 = a_2, y_faux1_3 = a_3, y_faux1_4 = a_4, y_faux1_5 = a_5, y_faux1_6 = a_6, y_faux1_7 = a_7, y_faux1_8 = a_8, y_faux1_9 = a_9, y_faux1_10 = a_10, y_faux1_11 = a_11, y_faux1_12 = a_12, y_faux1_13 = a_13, y_faux1_14 = a_14, y_faux2_0 = d_0, y_faux2_1 = d_1, y_faux2_2 = d_2, y_faux2_3 = d_3, y_faux2_4 = d_4, y_faux2_5 = d_5, y_faux2_6 = d_6, y_faux2_7 = d_7, y_faux2_8 = d_8, y_faux2_9 = d_9, y_faux2_10 = d_10, y_faux2_11 = d_11, y_faux2_12 = d_12, y_faux2_13 = d_13, y_faux2_14 = d_14, y_faux3_0 = x4_0]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability without tr. basis:  525956485400000000000000
Random sample for the outputs and inputs is generated from  [b = .3022795573e24, k3 = .4061941836e23, k4 = .1068719707e24, k5 = .6032880227e23, k6 = .5412248981e23, k7 = .2259813539e23, a_0 = .4134051439e24, d_0 = .5131515335e24, x1_0 = .4126371250e24, x2_0 = .1944517734e24, x3_0 = .2317503713e24, x4_0 = .2490608754e24, x5_0 = .3661699658e24]
The polynomial system widehat{E^t} contains  83 equations in  68  variables
            "new_logs/Tumor/transcendence_26_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [a, d, x4_1]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {a, d}
Algebraically independent parameters among derivatives: {x4_1}
	Adding ODEs: [diff(a(t),t) = 0, diff(d(t),t) = 0]
	Adding output functions: [y_faux1(t) = a(t), y_faux2(t) = d(t)]
	New system: [diff(a(t),t) = 0, diff(d(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b*d(t)*k5+a(t)*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a(t)*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b*d(t)*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = a(t), y_faux2(t) = d(t)]

=== Input info ===
State variables:          [a(t), d(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t), y_faux2(t)]
Input variables:          []
Parameters in equations:  [b, k3, k4, k5, k6, k7]
===================

memory used=7531.8MB, alloc=183.8MB, time=67.68
memory used=7631.9MB, alloc=183.8MB, time=68.44
	Adding new y-equations: [y_faux3_0 = x4_1]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-a_0, a_1, y_faux2_0-d_0, d_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b*d_0*k5*x2_0+a_0*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b*d_0+a_0-x3_0-x4_0)*x2_1+x2_0*(b*d_1+a_1-x3_1-x4_1))*k5-x1_1*k3+k4*x2_1-k6*x3_1-k6*x4_1+x2_2, -a_0*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b*d_0*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b*d_0+a_0-x3_0-x4_0)*x2_2+(b*d_2+a_2-x3_2-x4_2)*x2_0+2*x2_1*(b*d_1+a_1-x3_1-x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, a_2, d_2, ((-a_1+x3_1)*x2_0-x2_1*(a_0-x3_0))*k5+k6*x3_1+x3_2, ((-b*d_1+x4_1)*x2_0-x2_1*(b*d_0-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b*d_0+a_0-x3_0-x4_0)*x2_3+(b*d_3+a_3-x3_3-x4_3)*x2_0+(3*b*d_2+3*a_2-3*x3_2-3*x4_2)*x2_1+3*x2_2*(b*d_1+a_1-x3_1-x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, a_3, d_3, ((x3_2-a_2)*x2_0+(2*x3_1-2*a_1)*x2_1-x2_2*(a_0-x3_0))*k5+k6*x3_2+x3_3, ((-d_0*x2_2-2*d_1*x2_1-d_2*x2_0)*b+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b*d_0+a_0-x3_0-x4_0)*x2_4+(4*d_1*x2_3+6*d_2*x2_2+4*d_3*x2_1+d_4*x2_0)*b+(a_4-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3+4*a_3)*x2_1+(-6*x3_2-6*x4_2+6*a_2)*x2_2-4*x2_3*(x3_1+x4_1-a_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, a_4, d_4, ((x3_3-a_3)*x2_0+(3*x3_2-3*a_2)*x2_1+(3*x3_1-3*a_1)*x2_2+x2_3*(-a_0+x3_0))*k5+k6*x3_3+x3_4, ((-d_0*x2_3-3*d_1*x2_2-3*d_2*x2_1-d_3*x2_0)*b+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((d_0*x2_5+5*d_1*x2_4+10*d_2*x2_3+10*d_3*x2_2+5*d_4*x2_1+d_5*x2_0)*b+(-x3_0-x4_0+a_0)*x2_5+(a_5-x3_5-x4_5)*x2_0+(5*a_4-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3+10*a_3)*x2_2+(-10*x3_2-10*x4_2+10*a_2)*x2_3-5*x2_4*(x3_1+x4_1-a_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, a_5, d_5, ((x3_4-a_4)*x2_0+(4*x3_3-4*a_3)*x2_1+(6*x3_2-6*a_2)*x2_2+(4*x3_1-4*a_1)*x2_3+x2_4*(-a_0+x3_0))*k5+k6*x3_4+x3_5, ((-d_0*x2_4-4*d_1*x2_3-6*d_2*x2_2-4*d_3*x2_1-d_4*x2_0)*b+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((d_0*x2_6+6*d_1*x2_5+15*d_2*x2_4+20*d_3*x2_3+15*d_4*x2_2+6*d_5*x2_1+d_6*x2_0)*b+(-x3_0-x4_0+a_0)*x2_6+(a_6-x3_6-x4_6)*x2_0+(6*a_5-6*x3_5-6*x4_5)*x2_1+(15*a_4-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3+20*a_3)*x2_3+(-15*x3_2-15*x4_2+15*a_2)*x2_4-6*x2_5*(x3_1+x4_1-a_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, a_6, d_6, ((x3_5-a_5)*x2_0+(5*x3_4-5*a_4)*x2_1+(10*x3_3-10*a_3)*x2_2+(10*x3_2-10*a_2)*x2_3+(5*x3_1-5*a_1)*x2_4+x2_5*(-a_0+x3_0))*k5+k6*x3_5+x3_6, ((-d_0*x2_5-5*d_1*x2_4-10*d_2*x2_3-10*d_3*x2_2-5*d_4*x2_1-d_5*x2_0)*b+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((d_0*x2_7+7*d_1*x2_6+21*d_2*x2_5+35*d_3*x2_4+35*d_4*x2_3+21*d_5*x2_2+7*d_6*x2_1+d_7*x2_0)*b+(-x3_0-x4_0+a_0)*x2_7+(a_7-x3_7-x4_7)*x2_0+(7*a_6-7*x3_6-7*x4_6)*x2_1+(21*a_5-21*x3_5-21*x4_5)*x2_2+(35*a_4-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3+35*a_3)*x2_4+(-21*x3_2-21*x4_2+21*a_2)*x2_5-7*x2_6*(x3_1+x4_1-a_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, a_7, d_7, ((x3_6-a_6)*x2_0+(6*x3_5-6*a_5)*x2_1+(15*x3_4-15*a_4)*x2_2+(20*x3_3-20*a_3)*x2_3+(15*x3_2-15*a_2)*x2_4+(6*x3_1-6*a_1)*x2_5+x2_6*(-a_0+x3_0))*k5+k6*x3_6+x3_7, ((-d_0*x2_6-6*d_1*x2_5-15*d_2*x2_4-20*d_3*x2_3-15*d_4*x2_2-6*d_5*x2_1-d_6*x2_0)*b+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -a_1+y_faux1_1, -a_2+y_faux1_2, -a_3+y_faux1_3, -a_4+y_faux1_4, -a_5+y_faux1_5, -a_6+y_faux1_6, -a_7+y_faux1_7, -d_1+y_faux2_1, -d_2+y_faux2_2, -d_3+y_faux2_3, -d_4+y_faux2_4, -d_5+y_faux2_5, -d_6+y_faux2_6, -d_7+y_faux2_7, y_faux3_0-x4_1]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = a_0, y_faux1_1 = a_1, y_faux1_2 = a_2, y_faux1_3 = a_3, y_faux1_4 = a_4, y_faux1_5 = a_5, y_faux1_6 = a_6, y_faux1_7 = a_7, y_faux1_8 = a_8, y_faux1_9 = a_9, y_faux1_10 = a_10, y_faux1_11 = a_11, y_faux1_12 = a_12, y_faux1_13 = a_13, y_faux1_14 = a_14, y_faux2_0 = d_0, y_faux2_1 = d_1, y_faux2_2 = d_2, y_faux2_3 = d_3, y_faux2_4 = d_4, y_faux2_5 = d_5, y_faux2_6 = d_6, y_faux2_7 = d_7, y_faux2_8 = d_8, y_faux2_9 = d_9, y_faux2_10 = d_10, y_faux2_11 = d_11, y_faux2_12 = d_12, y_faux2_13 = d_13, y_faux2_14 = d_14, y_faux3_0 = x4_1]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability without tr. basis:  525956485400000000000000
Random sample for the outputs and inputs is generated from  [b = .4123351442e24, k3 = .3596155739e24, k4 = .1265266079e24, k5 = .3386939508e24, k6 = .1886196435e24, k7 = .3982508656e24, a_0 = .2202356766e23, d_0 = .4070171972e24, x1_0 = .3617345602e24, x2_0 = .2594134500e24, x3_0 = .3861956939e24, x4_0 = .3426690275e24, x5_0 = .5405541936e24]
The polynomial system widehat{E^t} contains  83 equations in  68  variables
            "new_logs/Tumor/transcendence_27_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [a, d, x4_2]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {a, d}
Algebraically independent parameters among derivatives: {x4_2}
	Adding ODEs: [diff(a(t),t) = 0, diff(d(t),t) = 0]
	Adding output functions: [y_faux1(t) = a(t), y_faux2(t) = d(t)]
	New system: [diff(a(t),t) = 0, diff(d(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b*d(t)*k5+a(t)*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a(t)*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b*d(t)*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = a(t), y_faux2(t) = d(t)]

=== Input info ===
State variables:          [a(t), d(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t), y_faux2(t)]
Input variables:          []
Parameters in equations:  [b, k3, k4, k5, k6, k7]
===================

memory used=7757.9MB, alloc=183.8MB, time=69.65
memory used=7876.9MB, alloc=183.8MB, time=70.64
memory used=7977.2MB, alloc=183.8MB, time=71.40
	Adding new y-equations: [y_faux3_0 = x4_2]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-a_0, a_1, y_faux2_0-d_0, d_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b*d_0*k5*x2_0+a_0*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b*d_0+a_0-x3_0-x4_0)*x2_1+x2_0*(b*d_1+a_1-x3_1-x4_1))*k5-x1_1*k3+k4*x2_1-k6*x3_1-k6*x4_1+x2_2, -a_0*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b*d_0*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b*d_0+a_0-x3_0-x4_0)*x2_2+(b*d_2+a_2-x3_2-x4_2)*x2_0+2*x2_1*(b*d_1+a_1-x3_1-x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, a_2, d_2, ((-a_1+x3_1)*x2_0-x2_1*(a_0-x3_0))*k5+k6*x3_1+x3_2, ((-b*d_1+x4_1)*x2_0-x2_1*(b*d_0-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b*d_0+a_0-x3_0-x4_0)*x2_3+(b*d_3+a_3-x3_3-x4_3)*x2_0+(3*b*d_2+3*a_2-3*x3_2-3*x4_2)*x2_1+3*x2_2*(b*d_1+a_1-x3_1-x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, a_3, d_3, ((x3_2-a_2)*x2_0+(2*x3_1-2*a_1)*x2_1-x2_2*(a_0-x3_0))*k5+k6*x3_2+x3_3, ((-d_0*x2_2-2*d_1*x2_1-d_2*x2_0)*b+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b*d_0+a_0-x3_0-x4_0)*x2_4+(4*d_1*x2_3+6*d_2*x2_2+4*d_3*x2_1+d_4*x2_0)*b+(a_4-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3+4*a_3)*x2_1+(-6*x3_2-6*x4_2+6*a_2)*x2_2-4*x2_3*(x3_1+x4_1-a_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, a_4, d_4, ((x3_3-a_3)*x2_0+(3*x3_2-3*a_2)*x2_1+(3*x3_1-3*a_1)*x2_2+x2_3*(-a_0+x3_0))*k5+k6*x3_3+x3_4, ((-d_0*x2_3-3*d_1*x2_2-3*d_2*x2_1-d_3*x2_0)*b+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((d_0*x2_5+5*d_1*x2_4+10*d_2*x2_3+10*d_3*x2_2+5*d_4*x2_1+d_5*x2_0)*b+(-x3_0-x4_0+a_0)*x2_5+(a_5-x3_5-x4_5)*x2_0+(5*a_4-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3+10*a_3)*x2_2+(-10*x3_2-10*x4_2+10*a_2)*x2_3-5*x2_4*(x3_1+x4_1-a_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, a_5, d_5, ((x3_4-a_4)*x2_0+(4*x3_3-4*a_3)*x2_1+(6*x3_2-6*a_2)*x2_2+(4*x3_1-4*a_1)*x2_3+x2_4*(-a_0+x3_0))*k5+k6*x3_4+x3_5, ((-d_0*x2_4-4*d_1*x2_3-6*d_2*x2_2-4*d_3*x2_1-d_4*x2_0)*b+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((d_0*x2_6+6*d_1*x2_5+15*d_2*x2_4+20*d_3*x2_3+15*d_4*x2_2+6*d_5*x2_1+d_6*x2_0)*b+(-x3_0-x4_0+a_0)*x2_6+(a_6-x3_6-x4_6)*x2_0+(6*a_5-6*x3_5-6*x4_5)*x2_1+(15*a_4-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3+20*a_3)*x2_3+(-15*x3_2-15*x4_2+15*a_2)*x2_4-6*x2_5*(x3_1+x4_1-a_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, a_6, d_6, ((x3_5-a_5)*x2_0+(5*x3_4-5*a_4)*x2_1+(10*x3_3-10*a_3)*x2_2+(10*x3_2-10*a_2)*x2_3+(5*x3_1-5*a_1)*x2_4+x2_5*(-a_0+x3_0))*k5+k6*x3_5+x3_6, ((-d_0*x2_5-5*d_1*x2_4-10*d_2*x2_3-10*d_3*x2_2-5*d_4*x2_1-d_5*x2_0)*b+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((d_0*x2_7+7*d_1*x2_6+21*d_2*x2_5+35*d_3*x2_4+35*d_4*x2_3+21*d_5*x2_2+7*d_6*x2_1+d_7*x2_0)*b+(-x3_0-x4_0+a_0)*x2_7+(a_7-x3_7-x4_7)*x2_0+(7*a_6-7*x3_6-7*x4_6)*x2_1+(21*a_5-21*x3_5-21*x4_5)*x2_2+(35*a_4-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3+35*a_3)*x2_4+(-21*x3_2-21*x4_2+21*a_2)*x2_5-7*x2_6*(x3_1+x4_1-a_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, a_7, d_7, ((x3_6-a_6)*x2_0+(6*x3_5-6*a_5)*x2_1+(15*x3_4-15*a_4)*x2_2+(20*x3_3-20*a_3)*x2_3+(15*x3_2-15*a_2)*x2_4+(6*x3_1-6*a_1)*x2_5+x2_6*(-a_0+x3_0))*k5+k6*x3_6+x3_7, ((-d_0*x2_6-6*d_1*x2_5-15*d_2*x2_4-20*d_3*x2_3-15*d_4*x2_2-6*d_5*x2_1-d_6*x2_0)*b+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -a_1+y_faux1_1, -a_2+y_faux1_2, -a_3+y_faux1_3, -a_4+y_faux1_4, -a_5+y_faux1_5, -a_6+y_faux1_6, -a_7+y_faux1_7, -d_1+y_faux2_1, -d_2+y_faux2_2, -d_3+y_faux2_3, -d_4+y_faux2_4, -d_5+y_faux2_5, -d_6+y_faux2_6, -d_7+y_faux2_7, y_faux3_0-x4_2]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = a_0, y_faux1_1 = a_1, y_faux1_2 = a_2, y_faux1_3 = a_3, y_faux1_4 = a_4, y_faux1_5 = a_5, y_faux1_6 = a_6, y_faux1_7 = a_7, y_faux1_8 = a_8, y_faux1_9 = a_9, y_faux1_10 = a_10, y_faux1_11 = a_11, y_faux1_12 = a_12, y_faux1_13 = a_13, y_faux1_14 = a_14, y_faux2_0 = d_0, y_faux2_1 = d_1, y_faux2_2 = d_2, y_faux2_3 = d_3, y_faux2_4 = d_4, y_faux2_5 = d_5, y_faux2_6 = d_6, y_faux2_7 = d_7, y_faux2_8 = d_8, y_faux2_9 = d_9, y_faux2_10 = d_10, y_faux2_11 = d_11, y_faux2_12 = d_12, y_faux2_13 = d_13, y_faux2_14 = d_14, y_faux3_0 = x4_2]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability without tr. basis:  525956485400000000000000
Random sample for the outputs and inputs is generated from  [b = .9566232094e22, k3 = .2952234911e24, k4 = .5695394192e24, k5 = .5762061924e24, k6 = .6890583597e24, k7 = .1914149076e24, a_0 = .2435134477e24, d_0 = .2378475737e24, x1_0 = .9625380272e23, x2_0 = .2030948502e23, x3_0 = .2114751052e24, x4_0 = .1349844387e24, x5_0 = .3067993697e24]
The polynomial system widehat{E^t} contains  83 equations in  68  variables
            "new_logs/Tumor/transcendence_28_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [a, d, x4_3]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {a, d}
Algebraically independent parameters among derivatives: {x4_3}
	Adding ODEs: [diff(a(t),t) = 0, diff(d(t),t) = 0]
	Adding output functions: [y_faux1(t) = a(t), y_faux2(t) = d(t)]
	New system: [diff(a(t),t) = 0, diff(d(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b*d(t)*k5+a(t)*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a(t)*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b*d(t)*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = a(t), y_faux2(t) = d(t)]

=== Input info ===
State variables:          [a(t), d(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t), y_faux2(t)]
Input variables:          []
Parameters in equations:  [b, k3, k4, k5, k6, k7]
===================

memory used=8102.7MB, alloc=183.8MB, time=72.66
memory used=8202.8MB, alloc=183.8MB, time=73.41
	Adding new y-equations: [y_faux3_0 = x4_3]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-a_0, a_1, y_faux2_0-d_0, d_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b*d_0*k5*x2_0+a_0*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b*d_0+a_0-x3_0-x4_0)*x2_1+x2_0*(b*d_1+a_1-x3_1-x4_1))*k5-x1_1*k3+k4*x2_1-k6*x3_1-k6*x4_1+x2_2, -a_0*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b*d_0*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b*d_0+a_0-x3_0-x4_0)*x2_2+(b*d_2+a_2-x3_2-x4_2)*x2_0+2*x2_1*(b*d_1+a_1-x3_1-x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, a_2, d_2, ((-a_1+x3_1)*x2_0-x2_1*(a_0-x3_0))*k5+k6*x3_1+x3_2, ((-b*d_1+x4_1)*x2_0-x2_1*(b*d_0-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b*d_0+a_0-x3_0-x4_0)*x2_3+(b*d_3+a_3-x3_3-x4_3)*x2_0+(3*b*d_2+3*a_2-3*x3_2-3*x4_2)*x2_1+3*x2_2*(b*d_1+a_1-x3_1-x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, a_3, d_3, ((x3_2-a_2)*x2_0+(2*x3_1-2*a_1)*x2_1-x2_2*(a_0-x3_0))*k5+k6*x3_2+x3_3, ((-d_0*x2_2-2*d_1*x2_1-d_2*x2_0)*b+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b*d_0+a_0-x3_0-x4_0)*x2_4+(4*d_1*x2_3+6*d_2*x2_2+4*d_3*x2_1+d_4*x2_0)*b+(a_4-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3+4*a_3)*x2_1+(-6*x3_2-6*x4_2+6*a_2)*x2_2-4*x2_3*(x3_1+x4_1-a_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, a_4, d_4, ((x3_3-a_3)*x2_0+(3*x3_2-3*a_2)*x2_1+(3*x3_1-3*a_1)*x2_2+x2_3*(-a_0+x3_0))*k5+k6*x3_3+x3_4, ((-d_0*x2_3-3*d_1*x2_2-3*d_2*x2_1-d_3*x2_0)*b+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((d_0*x2_5+5*d_1*x2_4+10*d_2*x2_3+10*d_3*x2_2+5*d_4*x2_1+d_5*x2_0)*b+(-x3_0-x4_0+a_0)*x2_5+(a_5-x3_5-x4_5)*x2_0+(5*a_4-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3+10*a_3)*x2_2+(-10*x3_2-10*x4_2+10*a_2)*x2_3-5*x2_4*(x3_1+x4_1-a_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, a_5, d_5, ((x3_4-a_4)*x2_0+(4*x3_3-4*a_3)*x2_1+(6*x3_2-6*a_2)*x2_2+(4*x3_1-4*a_1)*x2_3+x2_4*(-a_0+x3_0))*k5+k6*x3_4+x3_5, ((-d_0*x2_4-4*d_1*x2_3-6*d_2*x2_2-4*d_3*x2_1-d_4*x2_0)*b+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((d_0*x2_6+6*d_1*x2_5+15*d_2*x2_4+20*d_3*x2_3+15*d_4*x2_2+6*d_5*x2_1+d_6*x2_0)*b+(-x3_0-x4_0+a_0)*x2_6+(a_6-x3_6-x4_6)*x2_0+(6*a_5-6*x3_5-6*x4_5)*x2_1+(15*a_4-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3+20*a_3)*x2_3+(-15*x3_2-15*x4_2+15*a_2)*x2_4-6*x2_5*(x3_1+x4_1-a_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, a_6, d_6, ((x3_5-a_5)*x2_0+(5*x3_4-5*a_4)*x2_1+(10*x3_3-10*a_3)*x2_2+(10*x3_2-10*a_2)*x2_3+(5*x3_1-5*a_1)*x2_4+x2_5*(-a_0+x3_0))*k5+k6*x3_5+x3_6, ((-d_0*x2_5-5*d_1*x2_4-10*d_2*x2_3-10*d_3*x2_2-5*d_4*x2_1-d_5*x2_0)*b+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((d_0*x2_7+7*d_1*x2_6+21*d_2*x2_5+35*d_3*x2_4+35*d_4*x2_3+21*d_5*x2_2+7*d_6*x2_1+d_7*x2_0)*b+(-x3_0-x4_0+a_0)*x2_7+(a_7-x3_7-x4_7)*x2_0+(7*a_6-7*x3_6-7*x4_6)*x2_1+(21*a_5-21*x3_5-21*x4_5)*x2_2+(35*a_4-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3+35*a_3)*x2_4+(-21*x3_2-21*x4_2+21*a_2)*x2_5-7*x2_6*(x3_1+x4_1-a_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, a_7, d_7, ((x3_6-a_6)*x2_0+(6*x3_5-6*a_5)*x2_1+(15*x3_4-15*a_4)*x2_2+(20*x3_3-20*a_3)*x2_3+(15*x3_2-15*a_2)*x2_4+(6*x3_1-6*a_1)*x2_5+x2_6*(-a_0+x3_0))*k5+k6*x3_6+x3_7, ((-d_0*x2_6-6*d_1*x2_5-15*d_2*x2_4-20*d_3*x2_3-15*d_4*x2_2-6*d_5*x2_1-d_6*x2_0)*b+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -a_1+y_faux1_1, -a_2+y_faux1_2, -a_3+y_faux1_3, -a_4+y_faux1_4, -a_5+y_faux1_5, -a_6+y_faux1_6, -a_7+y_faux1_7, -d_1+y_faux2_1, -d_2+y_faux2_2, -d_3+y_faux2_3, -d_4+y_faux2_4, -d_5+y_faux2_5, -d_6+y_faux2_6, -d_7+y_faux2_7, y_faux3_0-x4_3]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = a_0, y_faux1_1 = a_1, y_faux1_2 = a_2, y_faux1_3 = a_3, y_faux1_4 = a_4, y_faux1_5 = a_5, y_faux1_6 = a_6, y_faux1_7 = a_7, y_faux1_8 = a_8, y_faux1_9 = a_9, y_faux1_10 = a_10, y_faux1_11 = a_11, y_faux1_12 = a_12, y_faux1_13 = a_13, y_faux1_14 = a_14, y_faux2_0 = d_0, y_faux2_1 = d_1, y_faux2_2 = d_2, y_faux2_3 = d_3, y_faux2_4 = d_4, y_faux2_5 = d_5, y_faux2_6 = d_6, y_faux2_7 = d_7, y_faux2_8 = d_8, y_faux2_9 = d_9, y_faux2_10 = d_10, y_faux2_11 = d_11, y_faux2_12 = d_12, y_faux2_13 = d_13, y_faux2_14 = d_14, y_faux3_0 = x4_3]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability without tr. basis:  525956485400000000000000
Random sample for the outputs and inputs is generated from  [b = .3765963133e24, k3 = .1602412175e24, k4 = .1866477402e24, k5 = .2340550087e24, k6 = .3491451756e24, k7 = .4926184026e24, a_0 = .1516914554e24, d_0 = .3507343204e24, x1_0 = .4202435880e24, x2_0 = .5439567649e23, x3_0 = .3145290812e24, x4_0 = .2656395410e24, x5_0 = .3414239419e24]
The polynomial system widehat{E^t} contains  83 equations in  68  variables
            "new_logs/Tumor/transcendence_29_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [a, d, x4_4]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {a, d}
Algebraically independent parameters among derivatives: {x4_4}
	Adding ODEs: [diff(a(t),t) = 0, diff(d(t),t) = 0]
	Adding output functions: [y_faux1(t) = a(t), y_faux2(t) = d(t)]
	New system: [diff(a(t),t) = 0, diff(d(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b*d(t)*k5+a(t)*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a(t)*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b*d(t)*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = a(t), y_faux2(t) = d(t)]

=== Input info ===
State variables:          [a(t), d(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t), y_faux2(t)]
Input variables:          []
Parameters in equations:  [b, k3, k4, k5, k6, k7]
===================

memory used=8329.9MB, alloc=183.8MB, time=74.59
memory used=8447.6MB, alloc=183.8MB, time=75.55
memory used=8547.9MB, alloc=183.8MB, time=76.30
	Adding new y-equations: [y_faux3_0 = x4_4]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-a_0, a_1, y_faux2_0-d_0, d_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b*d_0*k5*x2_0+a_0*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b*d_0+a_0-x3_0-x4_0)*x2_1+x2_0*(b*d_1+a_1-x3_1-x4_1))*k5-x1_1*k3+k4*x2_1-k6*x3_1-k6*x4_1+x2_2, -a_0*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b*d_0*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b*d_0+a_0-x3_0-x4_0)*x2_2+(b*d_2+a_2-x3_2-x4_2)*x2_0+2*x2_1*(b*d_1+a_1-x3_1-x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, a_2, d_2, ((-a_1+x3_1)*x2_0-x2_1*(a_0-x3_0))*k5+k6*x3_1+x3_2, ((-b*d_1+x4_1)*x2_0-x2_1*(b*d_0-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b*d_0+a_0-x3_0-x4_0)*x2_3+(b*d_3+a_3-x3_3-x4_3)*x2_0+(3*b*d_2+3*a_2-3*x3_2-3*x4_2)*x2_1+3*x2_2*(b*d_1+a_1-x3_1-x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, a_3, d_3, ((x3_2-a_2)*x2_0+(2*x3_1-2*a_1)*x2_1-x2_2*(a_0-x3_0))*k5+k6*x3_2+x3_3, ((-d_0*x2_2-2*d_1*x2_1-d_2*x2_0)*b+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b*d_0+a_0-x3_0-x4_0)*x2_4+(4*d_1*x2_3+6*d_2*x2_2+4*d_3*x2_1+d_4*x2_0)*b+(a_4-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3+4*a_3)*x2_1+(-6*x3_2-6*x4_2+6*a_2)*x2_2-4*x2_3*(x3_1+x4_1-a_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, a_4, d_4, ((x3_3-a_3)*x2_0+(3*x3_2-3*a_2)*x2_1+(3*x3_1-3*a_1)*x2_2+x2_3*(-a_0+x3_0))*k5+k6*x3_3+x3_4, ((-d_0*x2_3-3*d_1*x2_2-3*d_2*x2_1-d_3*x2_0)*b+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((d_0*x2_5+5*d_1*x2_4+10*d_2*x2_3+10*d_3*x2_2+5*d_4*x2_1+d_5*x2_0)*b+(-x3_0-x4_0+a_0)*x2_5+(a_5-x3_5-x4_5)*x2_0+(5*a_4-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3+10*a_3)*x2_2+(-10*x3_2-10*x4_2+10*a_2)*x2_3-5*x2_4*(x3_1+x4_1-a_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, a_5, d_5, ((x3_4-a_4)*x2_0+(4*x3_3-4*a_3)*x2_1+(6*x3_2-6*a_2)*x2_2+(4*x3_1-4*a_1)*x2_3+x2_4*(-a_0+x3_0))*k5+k6*x3_4+x3_5, ((-d_0*x2_4-4*d_1*x2_3-6*d_2*x2_2-4*d_3*x2_1-d_4*x2_0)*b+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((d_0*x2_6+6*d_1*x2_5+15*d_2*x2_4+20*d_3*x2_3+15*d_4*x2_2+6*d_5*x2_1+d_6*x2_0)*b+(-x3_0-x4_0+a_0)*x2_6+(a_6-x3_6-x4_6)*x2_0+(6*a_5-6*x3_5-6*x4_5)*x2_1+(15*a_4-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3+20*a_3)*x2_3+(-15*x3_2-15*x4_2+15*a_2)*x2_4-6*x2_5*(x3_1+x4_1-a_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, a_6, d_6, ((x3_5-a_5)*x2_0+(5*x3_4-5*a_4)*x2_1+(10*x3_3-10*a_3)*x2_2+(10*x3_2-10*a_2)*x2_3+(5*x3_1-5*a_1)*x2_4+x2_5*(-a_0+x3_0))*k5+k6*x3_5+x3_6, ((-d_0*x2_5-5*d_1*x2_4-10*d_2*x2_3-10*d_3*x2_2-5*d_4*x2_1-d_5*x2_0)*b+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((d_0*x2_7+7*d_1*x2_6+21*d_2*x2_5+35*d_3*x2_4+35*d_4*x2_3+21*d_5*x2_2+7*d_6*x2_1+d_7*x2_0)*b+(-x3_0-x4_0+a_0)*x2_7+(a_7-x3_7-x4_7)*x2_0+(7*a_6-7*x3_6-7*x4_6)*x2_1+(21*a_5-21*x3_5-21*x4_5)*x2_2+(35*a_4-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3+35*a_3)*x2_4+(-21*x3_2-21*x4_2+21*a_2)*x2_5-7*x2_6*(x3_1+x4_1-a_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, a_7, d_7, ((x3_6-a_6)*x2_0+(6*x3_5-6*a_5)*x2_1+(15*x3_4-15*a_4)*x2_2+(20*x3_3-20*a_3)*x2_3+(15*x3_2-15*a_2)*x2_4+(6*x3_1-6*a_1)*x2_5+x2_6*(-a_0+x3_0))*k5+k6*x3_6+x3_7, ((-d_0*x2_6-6*d_1*x2_5-15*d_2*x2_4-20*d_3*x2_3-15*d_4*x2_2-6*d_5*x2_1-d_6*x2_0)*b+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -a_1+y_faux1_1, -a_2+y_faux1_2, -a_3+y_faux1_3, -a_4+y_faux1_4, -a_5+y_faux1_5, -a_6+y_faux1_6, -a_7+y_faux1_7, -d_1+y_faux2_1, -d_2+y_faux2_2, -d_3+y_faux2_3, -d_4+y_faux2_4, -d_5+y_faux2_5, -d_6+y_faux2_6, -d_7+y_faux2_7, y_faux3_0-x4_4]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = a_0, y_faux1_1 = a_1, y_faux1_2 = a_2, y_faux1_3 = a_3, y_faux1_4 = a_4, y_faux1_5 = a_5, y_faux1_6 = a_6, y_faux1_7 = a_7, y_faux1_8 = a_8, y_faux1_9 = a_9, y_faux1_10 = a_10, y_faux1_11 = a_11, y_faux1_12 = a_12, y_faux1_13 = a_13, y_faux1_14 = a_14, y_faux2_0 = d_0, y_faux2_1 = d_1, y_faux2_2 = d_2, y_faux2_3 = d_3, y_faux2_4 = d_4, y_faux2_5 = d_5, y_faux2_6 = d_6, y_faux2_7 = d_7, y_faux2_8 = d_8, y_faux2_9 = d_9, y_faux2_10 = d_10, y_faux2_11 = d_11, y_faux2_12 = d_12, y_faux2_13 = d_13, y_faux2_14 = d_14, y_faux3_0 = x4_4]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability without tr. basis:  525956485400000000000000
Random sample for the outputs and inputs is generated from  [b = .1341376373e24, k3 = .5737060404e24, k4 = .2411989399e24, k5 = .4004938995e24, k6 = .8064908090e22, k7 = .4024492980e24, a_0 = .1166722609e23, d_0 = .1679816067e24, x1_0 = .4179202638e24, x2_0 = .5905599010e24, x3_0 = .1494953255e24, x4_0 = .4385871645e24, x5_0 = .9493788135e23]
The polynomial system widehat{E^t} contains  83 equations in  68  variables
            "new_logs/Tumor/transcendence_30_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [a, d, x4_5]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {a, d}
Algebraically independent parameters among derivatives: {x4_5}
	Adding ODEs: [diff(a(t),t) = 0, diff(d(t),t) = 0]
	Adding output functions: [y_faux1(t) = a(t), y_faux2(t) = d(t)]
	New system: [diff(a(t),t) = 0, diff(d(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b*d(t)*k5+a(t)*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a(t)*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b*d(t)*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = a(t), y_faux2(t) = d(t)]

=== Input info ===
State variables:          [a(t), d(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t), y_faux2(t)]
Input variables:          []
Parameters in equations:  [b, k3, k4, k5, k6, k7]
===================

memory used=8675.0MB, alloc=183.8MB, time=77.62
memory used=8774.6MB, alloc=183.8MB, time=78.41
	Adding new y-equations: [y_faux3_0 = x4_5]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-a_0, a_1, y_faux2_0-d_0, d_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b*d_0*k5*x2_0+a_0*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b*d_0+a_0-x3_0-x4_0)*x2_1+x2_0*(b*d_1+a_1-x3_1-x4_1))*k5-x1_1*k3+k4*x2_1-k6*x3_1-k6*x4_1+x2_2, -a_0*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b*d_0*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b*d_0+a_0-x3_0-x4_0)*x2_2+(b*d_2+a_2-x3_2-x4_2)*x2_0+2*x2_1*(b*d_1+a_1-x3_1-x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, a_2, d_2, ((-a_1+x3_1)*x2_0-x2_1*(a_0-x3_0))*k5+k6*x3_1+x3_2, ((-b*d_1+x4_1)*x2_0-x2_1*(b*d_0-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b*d_0+a_0-x3_0-x4_0)*x2_3+(b*d_3+a_3-x3_3-x4_3)*x2_0+(3*b*d_2+3*a_2-3*x3_2-3*x4_2)*x2_1+3*x2_2*(b*d_1+a_1-x3_1-x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, a_3, d_3, ((x3_2-a_2)*x2_0+(2*x3_1-2*a_1)*x2_1-x2_2*(a_0-x3_0))*k5+k6*x3_2+x3_3, ((-d_0*x2_2-2*d_1*x2_1-d_2*x2_0)*b+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b*d_0+a_0-x3_0-x4_0)*x2_4+(4*d_1*x2_3+6*d_2*x2_2+4*d_3*x2_1+d_4*x2_0)*b+(a_4-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3+4*a_3)*x2_1+(-6*x3_2-6*x4_2+6*a_2)*x2_2-4*x2_3*(x3_1+x4_1-a_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, a_4, d_4, ((x3_3-a_3)*x2_0+(3*x3_2-3*a_2)*x2_1+(3*x3_1-3*a_1)*x2_2+x2_3*(-a_0+x3_0))*k5+k6*x3_3+x3_4, ((-d_0*x2_3-3*d_1*x2_2-3*d_2*x2_1-d_3*x2_0)*b+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((d_0*x2_5+5*d_1*x2_4+10*d_2*x2_3+10*d_3*x2_2+5*d_4*x2_1+d_5*x2_0)*b+(-x3_0-x4_0+a_0)*x2_5+(a_5-x3_5-x4_5)*x2_0+(5*a_4-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3+10*a_3)*x2_2+(-10*x3_2-10*x4_2+10*a_2)*x2_3-5*x2_4*(x3_1+x4_1-a_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, a_5, d_5, ((x3_4-a_4)*x2_0+(4*x3_3-4*a_3)*x2_1+(6*x3_2-6*a_2)*x2_2+(4*x3_1-4*a_1)*x2_3+x2_4*(-a_0+x3_0))*k5+k6*x3_4+x3_5, ((-d_0*x2_4-4*d_1*x2_3-6*d_2*x2_2-4*d_3*x2_1-d_4*x2_0)*b+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((d_0*x2_6+6*d_1*x2_5+15*d_2*x2_4+20*d_3*x2_3+15*d_4*x2_2+6*d_5*x2_1+d_6*x2_0)*b+(-x3_0-x4_0+a_0)*x2_6+(a_6-x3_6-x4_6)*x2_0+(6*a_5-6*x3_5-6*x4_5)*x2_1+(15*a_4-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3+20*a_3)*x2_3+(-15*x3_2-15*x4_2+15*a_2)*x2_4-6*x2_5*(x3_1+x4_1-a_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, a_6, d_6, ((x3_5-a_5)*x2_0+(5*x3_4-5*a_4)*x2_1+(10*x3_3-10*a_3)*x2_2+(10*x3_2-10*a_2)*x2_3+(5*x3_1-5*a_1)*x2_4+x2_5*(-a_0+x3_0))*k5+k6*x3_5+x3_6, ((-d_0*x2_5-5*d_1*x2_4-10*d_2*x2_3-10*d_3*x2_2-5*d_4*x2_1-d_5*x2_0)*b+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((d_0*x2_7+7*d_1*x2_6+21*d_2*x2_5+35*d_3*x2_4+35*d_4*x2_3+21*d_5*x2_2+7*d_6*x2_1+d_7*x2_0)*b+(-x3_0-x4_0+a_0)*x2_7+(a_7-x3_7-x4_7)*x2_0+(7*a_6-7*x3_6-7*x4_6)*x2_1+(21*a_5-21*x3_5-21*x4_5)*x2_2+(35*a_4-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3+35*a_3)*x2_4+(-21*x3_2-21*x4_2+21*a_2)*x2_5-7*x2_6*(x3_1+x4_1-a_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, a_7, d_7, ((x3_6-a_6)*x2_0+(6*x3_5-6*a_5)*x2_1+(15*x3_4-15*a_4)*x2_2+(20*x3_3-20*a_3)*x2_3+(15*x3_2-15*a_2)*x2_4+(6*x3_1-6*a_1)*x2_5+x2_6*(-a_0+x3_0))*k5+k6*x3_6+x3_7, ((-d_0*x2_6-6*d_1*x2_5-15*d_2*x2_4-20*d_3*x2_3-15*d_4*x2_2-6*d_5*x2_1-d_6*x2_0)*b+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -a_1+y_faux1_1, -a_2+y_faux1_2, -a_3+y_faux1_3, -a_4+y_faux1_4, -a_5+y_faux1_5, -a_6+y_faux1_6, -a_7+y_faux1_7, -d_1+y_faux2_1, -d_2+y_faux2_2, -d_3+y_faux2_3, -d_4+y_faux2_4, -d_5+y_faux2_5, -d_6+y_faux2_6, -d_7+y_faux2_7, y_faux3_0-x4_5]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = a_0, y_faux1_1 = a_1, y_faux1_2 = a_2, y_faux1_3 = a_3, y_faux1_4 = a_4, y_faux1_5 = a_5, y_faux1_6 = a_6, y_faux1_7 = a_7, y_faux1_8 = a_8, y_faux1_9 = a_9, y_faux1_10 = a_10, y_faux1_11 = a_11, y_faux1_12 = a_12, y_faux1_13 = a_13, y_faux1_14 = a_14, y_faux2_0 = d_0, y_faux2_1 = d_1, y_faux2_2 = d_2, y_faux2_3 = d_3, y_faux2_4 = d_4, y_faux2_5 = d_5, y_faux2_6 = d_6, y_faux2_7 = d_7, y_faux2_8 = d_8, y_faux2_9 = d_9, y_faux2_10 = d_10, y_faux2_11 = d_11, y_faux2_12 = d_12, y_faux2_13 = d_13, y_faux2_14 = d_14, y_faux3_0 = x4_5]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability without tr. basis:  525956485400000000000000
Random sample for the outputs and inputs is generated from  [b = .2704203927e24, k3 = .2800297739e24, k4 = .4039681201e24, k5 = .3571135083e24, k6 = .3905791189e24, k7 = .3836788842e24, a_0 = .6038165475e24, d_0 = .5747476369e24, x1_0 = .2035288553e24, x2_0 = .1388449795e23, x3_0 = .6388128343e24, x4_0 = .4124521829e24, x5_0 = .5315124513e24]
The polynomial system widehat{E^t} contains  83 equations in  68  variables
            "new_logs/Tumor/transcendence_31_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [a, d, x4_6]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {a, d}
Algebraically independent parameters among derivatives: {x4_6}
	Adding ODEs: [diff(a(t),t) = 0, diff(d(t),t) = 0]
	Adding output functions: [y_faux1(t) = a(t), y_faux2(t) = d(t)]
	New system: [diff(a(t),t) = 0, diff(d(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b*d(t)*k5+a(t)*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a(t)*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b*d(t)*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = a(t), y_faux2(t) = d(t)]

=== Input info ===
State variables:          [a(t), d(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t), y_faux2(t)]
Input variables:          []
Parameters in equations:  [b, k3, k4, k5, k6, k7]
===================

memory used=8901.9MB, alloc=183.8MB, time=79.65
memory used=9017.5MB, alloc=183.8MB, time=80.57
memory used=9117.9MB, alloc=183.8MB, time=81.33
	Adding new y-equations: [y_faux3_0 = x4_6]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-a_0, a_1, y_faux2_0-d_0, d_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b*d_0*k5*x2_0+a_0*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b*d_0+a_0-x3_0-x4_0)*x2_1+x2_0*(b*d_1+a_1-x3_1-x4_1))*k5-x1_1*k3+k4*x2_1-k6*x3_1-k6*x4_1+x2_2, -a_0*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b*d_0*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b*d_0+a_0-x3_0-x4_0)*x2_2+(b*d_2+a_2-x3_2-x4_2)*x2_0+2*x2_1*(b*d_1+a_1-x3_1-x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, a_2, d_2, ((-a_1+x3_1)*x2_0-x2_1*(a_0-x3_0))*k5+k6*x3_1+x3_2, ((-b*d_1+x4_1)*x2_0-x2_1*(b*d_0-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b*d_0+a_0-x3_0-x4_0)*x2_3+(b*d_3+a_3-x3_3-x4_3)*x2_0+(3*b*d_2+3*a_2-3*x3_2-3*x4_2)*x2_1+3*x2_2*(b*d_1+a_1-x3_1-x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, a_3, d_3, ((x3_2-a_2)*x2_0+(2*x3_1-2*a_1)*x2_1-x2_2*(a_0-x3_0))*k5+k6*x3_2+x3_3, ((-d_0*x2_2-2*d_1*x2_1-d_2*x2_0)*b+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b*d_0+a_0-x3_0-x4_0)*x2_4+(4*d_1*x2_3+6*d_2*x2_2+4*d_3*x2_1+d_4*x2_0)*b+(a_4-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3+4*a_3)*x2_1+(-6*x3_2-6*x4_2+6*a_2)*x2_2-4*x2_3*(x3_1+x4_1-a_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, a_4, d_4, ((x3_3-a_3)*x2_0+(3*x3_2-3*a_2)*x2_1+(3*x3_1-3*a_1)*x2_2+x2_3*(-a_0+x3_0))*k5+k6*x3_3+x3_4, ((-d_0*x2_3-3*d_1*x2_2-3*d_2*x2_1-d_3*x2_0)*b+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((d_0*x2_5+5*d_1*x2_4+10*d_2*x2_3+10*d_3*x2_2+5*d_4*x2_1+d_5*x2_0)*b+(-x3_0-x4_0+a_0)*x2_5+(a_5-x3_5-x4_5)*x2_0+(5*a_4-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3+10*a_3)*x2_2+(-10*x3_2-10*x4_2+10*a_2)*x2_3-5*x2_4*(x3_1+x4_1-a_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, a_5, d_5, ((x3_4-a_4)*x2_0+(4*x3_3-4*a_3)*x2_1+(6*x3_2-6*a_2)*x2_2+(4*x3_1-4*a_1)*x2_3+x2_4*(-a_0+x3_0))*k5+k6*x3_4+x3_5, ((-d_0*x2_4-4*d_1*x2_3-6*d_2*x2_2-4*d_3*x2_1-d_4*x2_0)*b+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((d_0*x2_6+6*d_1*x2_5+15*d_2*x2_4+20*d_3*x2_3+15*d_4*x2_2+6*d_5*x2_1+d_6*x2_0)*b+(-x3_0-x4_0+a_0)*x2_6+(a_6-x3_6-x4_6)*x2_0+(6*a_5-6*x3_5-6*x4_5)*x2_1+(15*a_4-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3+20*a_3)*x2_3+(-15*x3_2-15*x4_2+15*a_2)*x2_4-6*x2_5*(x3_1+x4_1-a_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, a_6, d_6, ((x3_5-a_5)*x2_0+(5*x3_4-5*a_4)*x2_1+(10*x3_3-10*a_3)*x2_2+(10*x3_2-10*a_2)*x2_3+(5*x3_1-5*a_1)*x2_4+x2_5*(-a_0+x3_0))*k5+k6*x3_5+x3_6, ((-d_0*x2_5-5*d_1*x2_4-10*d_2*x2_3-10*d_3*x2_2-5*d_4*x2_1-d_5*x2_0)*b+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((d_0*x2_7+7*d_1*x2_6+21*d_2*x2_5+35*d_3*x2_4+35*d_4*x2_3+21*d_5*x2_2+7*d_6*x2_1+d_7*x2_0)*b+(-x3_0-x4_0+a_0)*x2_7+(a_7-x3_7-x4_7)*x2_0+(7*a_6-7*x3_6-7*x4_6)*x2_1+(21*a_5-21*x3_5-21*x4_5)*x2_2+(35*a_4-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3+35*a_3)*x2_4+(-21*x3_2-21*x4_2+21*a_2)*x2_5-7*x2_6*(x3_1+x4_1-a_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, a_7, d_7, ((x3_6-a_6)*x2_0+(6*x3_5-6*a_5)*x2_1+(15*x3_4-15*a_4)*x2_2+(20*x3_3-20*a_3)*x2_3+(15*x3_2-15*a_2)*x2_4+(6*x3_1-6*a_1)*x2_5+x2_6*(-a_0+x3_0))*k5+k6*x3_6+x3_7, ((-d_0*x2_6-6*d_1*x2_5-15*d_2*x2_4-20*d_3*x2_3-15*d_4*x2_2-6*d_5*x2_1-d_6*x2_0)*b+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -a_1+y_faux1_1, -a_2+y_faux1_2, -a_3+y_faux1_3, -a_4+y_faux1_4, -a_5+y_faux1_5, -a_6+y_faux1_6, -a_7+y_faux1_7, -d_1+y_faux2_1, -d_2+y_faux2_2, -d_3+y_faux2_3, -d_4+y_faux2_4, -d_5+y_faux2_5, -d_6+y_faux2_6, -d_7+y_faux2_7, y_faux3_0-x4_6]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = a_0, y_faux1_1 = a_1, y_faux1_2 = a_2, y_faux1_3 = a_3, y_faux1_4 = a_4, y_faux1_5 = a_5, y_faux1_6 = a_6, y_faux1_7 = a_7, y_faux1_8 = a_8, y_faux1_9 = a_9, y_faux1_10 = a_10, y_faux1_11 = a_11, y_faux1_12 = a_12, y_faux1_13 = a_13, y_faux1_14 = a_14, y_faux2_0 = d_0, y_faux2_1 = d_1, y_faux2_2 = d_2, y_faux2_3 = d_3, y_faux2_4 = d_4, y_faux2_5 = d_5, y_faux2_6 = d_6, y_faux2_7 = d_7, y_faux2_8 = d_8, y_faux2_9 = d_9, y_faux2_10 = d_10, y_faux2_11 = d_11, y_faux2_12 = d_12, y_faux2_13 = d_13, y_faux2_14 = d_14, y_faux3_0 = x4_6]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability without tr. basis:  525956485400000000000000
Random sample for the outputs and inputs is generated from  [b = .2247792837e24, k3 = .3544865248e23, k4 = .3675959361e24, k5 = .1353529870e24, k6 = .6280314397e24, k7 = .5658067477e23, a_0 = .6999824598e24, d_0 = .2975254042e24, x1_0 = .8795022609e23, x2_0 = .6064459468e24, x3_0 = .6608435851e24, x4_0 = .1209677752e24, x5_0 = .2086723562e24]
The polynomial system widehat{E^t} contains  83 equations in  68  variables
            "new_logs/Tumor/transcendence_32_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [a, d, x4_7]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {a, d}
Algebraically independent parameters among derivatives: {x4_7}
	Adding ODEs: [diff(a(t),t) = 0, diff(d(t),t) = 0]
	Adding output functions: [y_faux1(t) = a(t), y_faux2(t) = d(t)]
	New system: [diff(a(t),t) = 0, diff(d(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b*d(t)*k5+a(t)*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a(t)*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b*d(t)*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = a(t), y_faux2(t) = d(t)]

=== Input info ===
State variables:          [a(t), d(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t), y_faux2(t)]
Input variables:          []
Parameters in equations:  [b, k3, k4, k5, k6, k7]
===================

memory used=9245.0MB, alloc=183.8MB, time=82.64
memory used=9344.6MB, alloc=183.8MB, time=83.41
	Adding new y-equations: [y_faux3_0 = x4_7]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-a_0, a_1, y_faux2_0-d_0, d_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b*d_0*k5*x2_0+a_0*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b*d_0+a_0-x3_0-x4_0)*x2_1+x2_0*(b*d_1+a_1-x3_1-x4_1))*k5-x1_1*k3+k4*x2_1-k6*x3_1-k6*x4_1+x2_2, -a_0*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b*d_0*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b*d_0+a_0-x3_0-x4_0)*x2_2+(b*d_2+a_2-x3_2-x4_2)*x2_0+2*x2_1*(b*d_1+a_1-x3_1-x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, a_2, d_2, ((-a_1+x3_1)*x2_0-x2_1*(a_0-x3_0))*k5+k6*x3_1+x3_2, ((-b*d_1+x4_1)*x2_0-x2_1*(b*d_0-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b*d_0+a_0-x3_0-x4_0)*x2_3+(b*d_3+a_3-x3_3-x4_3)*x2_0+(3*b*d_2+3*a_2-3*x3_2-3*x4_2)*x2_1+3*x2_2*(b*d_1+a_1-x3_1-x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, a_3, d_3, ((x3_2-a_2)*x2_0+(2*x3_1-2*a_1)*x2_1-x2_2*(a_0-x3_0))*k5+k6*x3_2+x3_3, ((-d_0*x2_2-2*d_1*x2_1-d_2*x2_0)*b+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b*d_0+a_0-x3_0-x4_0)*x2_4+(4*d_1*x2_3+6*d_2*x2_2+4*d_3*x2_1+d_4*x2_0)*b+(a_4-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3+4*a_3)*x2_1+(-6*x3_2-6*x4_2+6*a_2)*x2_2-4*x2_3*(x3_1+x4_1-a_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, a_4, d_4, ((x3_3-a_3)*x2_0+(3*x3_2-3*a_2)*x2_1+(3*x3_1-3*a_1)*x2_2+x2_3*(-a_0+x3_0))*k5+k6*x3_3+x3_4, ((-d_0*x2_3-3*d_1*x2_2-3*d_2*x2_1-d_3*x2_0)*b+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((d_0*x2_5+5*d_1*x2_4+10*d_2*x2_3+10*d_3*x2_2+5*d_4*x2_1+d_5*x2_0)*b+(-x3_0-x4_0+a_0)*x2_5+(a_5-x3_5-x4_5)*x2_0+(5*a_4-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3+10*a_3)*x2_2+(-10*x3_2-10*x4_2+10*a_2)*x2_3-5*x2_4*(x3_1+x4_1-a_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, a_5, d_5, ((x3_4-a_4)*x2_0+(4*x3_3-4*a_3)*x2_1+(6*x3_2-6*a_2)*x2_2+(4*x3_1-4*a_1)*x2_3+x2_4*(-a_0+x3_0))*k5+k6*x3_4+x3_5, ((-d_0*x2_4-4*d_1*x2_3-6*d_2*x2_2-4*d_3*x2_1-d_4*x2_0)*b+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((d_0*x2_6+6*d_1*x2_5+15*d_2*x2_4+20*d_3*x2_3+15*d_4*x2_2+6*d_5*x2_1+d_6*x2_0)*b+(-x3_0-x4_0+a_0)*x2_6+(a_6-x3_6-x4_6)*x2_0+(6*a_5-6*x3_5-6*x4_5)*x2_1+(15*a_4-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3+20*a_3)*x2_3+(-15*x3_2-15*x4_2+15*a_2)*x2_4-6*x2_5*(x3_1+x4_1-a_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, a_6, d_6, ((x3_5-a_5)*x2_0+(5*x3_4-5*a_4)*x2_1+(10*x3_3-10*a_3)*x2_2+(10*x3_2-10*a_2)*x2_3+(5*x3_1-5*a_1)*x2_4+x2_5*(-a_0+x3_0))*k5+k6*x3_5+x3_6, ((-d_0*x2_5-5*d_1*x2_4-10*d_2*x2_3-10*d_3*x2_2-5*d_4*x2_1-d_5*x2_0)*b+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((d_0*x2_7+7*d_1*x2_6+21*d_2*x2_5+35*d_3*x2_4+35*d_4*x2_3+21*d_5*x2_2+7*d_6*x2_1+d_7*x2_0)*b+(-x3_0-x4_0+a_0)*x2_7+(a_7-x3_7-x4_7)*x2_0+(7*a_6-7*x3_6-7*x4_6)*x2_1+(21*a_5-21*x3_5-21*x4_5)*x2_2+(35*a_4-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3+35*a_3)*x2_4+(-21*x3_2-21*x4_2+21*a_2)*x2_5-7*x2_6*(x3_1+x4_1-a_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, a_7, d_7, ((x3_6-a_6)*x2_0+(6*x3_5-6*a_5)*x2_1+(15*x3_4-15*a_4)*x2_2+(20*x3_3-20*a_3)*x2_3+(15*x3_2-15*a_2)*x2_4+(6*x3_1-6*a_1)*x2_5+x2_6*(-a_0+x3_0))*k5+k6*x3_6+x3_7, ((-d_0*x2_6-6*d_1*x2_5-15*d_2*x2_4-20*d_3*x2_3-15*d_4*x2_2-6*d_5*x2_1-d_6*x2_0)*b+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -a_1+y_faux1_1, -a_2+y_faux1_2, -a_3+y_faux1_3, -a_4+y_faux1_4, -a_5+y_faux1_5, -a_6+y_faux1_6, -a_7+y_faux1_7, -d_1+y_faux2_1, -d_2+y_faux2_2, -d_3+y_faux2_3, -d_4+y_faux2_4, -d_5+y_faux2_5, -d_6+y_faux2_6, -d_7+y_faux2_7, y_faux3_0-x4_7]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = a_0, y_faux1_1 = a_1, y_faux1_2 = a_2, y_faux1_3 = a_3, y_faux1_4 = a_4, y_faux1_5 = a_5, y_faux1_6 = a_6, y_faux1_7 = a_7, y_faux1_8 = a_8, y_faux1_9 = a_9, y_faux1_10 = a_10, y_faux1_11 = a_11, y_faux1_12 = a_12, y_faux1_13 = a_13, y_faux1_14 = a_14, y_faux2_0 = d_0, y_faux2_1 = d_1, y_faux2_2 = d_2, y_faux2_3 = d_3, y_faux2_4 = d_4, y_faux2_5 = d_5, y_faux2_6 = d_6, y_faux2_7 = d_7, y_faux2_8 = d_8, y_faux2_9 = d_9, y_faux2_10 = d_10, y_faux2_11 = d_11, y_faux2_12 = d_12, y_faux2_13 = d_13, y_faux2_14 = d_14, y_faux3_0 = x4_7]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability without tr. basis:  525956485400000000000000
Random sample for the outputs and inputs is generated from  [b = .5821552553e24, k3 = .1283751085e24, k4 = .6442901510e24, k5 = .1999691053e24, k6 = .1661198953e24, k7 = .6248730155e23, a_0 = .1635360007e24, d_0 = .1494036393e24, x1_0 = .4077314563e24, x2_0 = .1836596153e24, x3_0 = .4557398210e24, x4_0 = .1993097832e24, x5_0 = .2590698484e24]
The polynomial system widehat{E^t} contains  83 equations in  68  variables
            "new_logs/Tumor/transcendence_33_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [a, x3(0), x3_1]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3(0), x3_2]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3(0), x3_3]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3(0), x3_4]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3(0), x3_5]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3(0), x3_6]

=======================================================
Substituting transcendence basis.
=======================================================
memory used=9488.2MB, alloc=183.8MB, time=84.70
Algebraically independent parameters (candidates) [a, x3(0), x3_7]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3(0), x4(0)]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3(0), x4_1]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3(0), x4_2]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3(0), x4_3]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3(0), x4_4]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3(0), x4_5]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3(0), x4_6]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3(0), x4_7]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_1, x3_2]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_1, x3_3]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_1, x3_4]

=======================================================
Substituting transcendence basis.
=======================================================
memory used=9635.9MB, alloc=183.8MB, time=86.19
Algebraically independent parameters (candidates) [a, x3_1, x3_5]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_1, x3_6]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_1, x3_7]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_1, x4(0)]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_1, x4_1]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_1, x4_2]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_1, x4_3]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_1, x4_4]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_1, x4_5]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_1, x4_6]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_1, x4_7]

=======================================================
Substituting transcendence basis.
=======================================================
memory used=9784.8MB, alloc=183.8MB, time=87.70
Algebraically independent parameters (candidates) [a, x3_2, x3_3]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_2, x3_4]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_2, x3_5]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_2, x3_6]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_2, x3_7]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_2, x4(0)]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_2, x4_1]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_2, x4_2]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_2, x4_3]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_2, x4_4]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_2, x4_5]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_2, x4_6]

=======================================================
Substituting transcendence basis.
=======================================================
memory used=9933.5MB, alloc=183.8MB, time=89.19
Algebraically independent parameters (candidates) [a, x3_2, x4_7]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_3, x3_4]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_3, x3_5]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_3, x3_6]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_3, x3_7]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_3, x4(0)]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_3, x4_1]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_3, x4_2]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_3, x4_3]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_3, x4_4]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_3, x4_5]

=======================================================
Substituting transcendence basis.
=======================================================
memory used=10082.9MB, alloc=183.8MB, time=90.71
Algebraically independent parameters (candidates) [a, x3_3, x4_6]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_3, x4_7]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_4, x3_5]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_4, x3_6]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_4, x3_7]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_4, x4(0)]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_4, x4_1]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_4, x4_2]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_4, x4_3]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_4, x4_4]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_4, x4_5]

=======================================================
Substituting transcendence basis.
=======================================================
memory used=10233.7MB, alloc=183.8MB, time=92.19
Algebraically independent parameters (candidates) [a, x3_4, x4_6]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_4, x4_7]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_5, x3_6]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_5, x3_7]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_5, x4(0)]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_5, x4_1]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_5, x4_2]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_5, x4_3]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_5, x4_4]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_5, x4_5]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_5, x4_6]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_5, x4_7]

=======================================================
Substituting transcendence basis.
=======================================================
memory used=10384.7MB, alloc=183.8MB, time=93.66
Algebraically independent parameters (candidates) [a, x3_6, x3_7]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_6, x4(0)]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_6, x4_1]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_6, x4_2]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_6, x4_3]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_6, x4_4]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_6, x4_5]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_6, x4_6]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_6, x4_7]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_7, x4(0)]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_7, x4_1]

=======================================================
Substituting transcendence basis.
=======================================================
memory used=10537.9MB, alloc=183.8MB, time=95.20
Algebraically independent parameters (candidates) [a, x3_7, x4_2]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_7, x4_3]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_7, x4_4]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_7, x4_5]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_7, x4_6]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x3_7, x4_7]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x4(0), x4_1]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x4(0), x4_2]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x4(0), x4_3]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x4(0), x4_4]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x4(0), x4_5]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x4(0), x4_6]

=======================================================
Substituting transcendence basis.
=======================================================
memory used=10691.6MB, alloc=183.8MB, time=96.74
Algebraically independent parameters (candidates) [a, x4(0), x4_7]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x4_1, x4_2]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x4_1, x4_3]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x4_1, x4_4]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x4_1, x4_5]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x4_1, x4_6]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x4_1, x4_7]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x4_2, x4_3]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x4_2, x4_4]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x4_2, x4_5]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x4_2, x4_6]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x4_2, x4_7]

=======================================================
Substituting transcendence basis.
=======================================================
memory used=10846.0MB, alloc=183.8MB, time=98.27
Algebraically independent parameters (candidates) [a, x4_3, x4_4]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x4_3, x4_5]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x4_3, x4_6]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x4_3, x4_7]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x4_4, x4_5]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x4_4, x4_6]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x4_4, x4_7]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x4_5, x4_6]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x4_5, x4_7]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [a, x4_6, x4_7]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [b, d, x3(0)]

=======================================================
Substituting transcendence basis.
=======================================================
memory used=11002.7MB, alloc=183.8MB, time=99.82
Algebraically independent parameters among nonidentifiable: {b, d}
Algebraically independent parameters among derivatives: {x3(0)}
	Adding ODEs: [diff(b(t),t) = 0, diff(d(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t), y_faux2(t) = d(t)]
	New system: [diff(b(t),t) = 0, diff(d(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d(t)*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d(t)*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t), y_faux2(t) = d(t)]

=== Input info ===
State variables:          [b(t), d(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t), y_faux2(t)]
Input variables:          []
Parameters in equations:  [a, k3, k4, k5, k6, k7]
===================

memory used=11109.1MB, alloc=183.8MB, time=101.13
memory used=11233.8MB, alloc=183.8MB, time=102.21
memory used=11335.5MB, alloc=183.8MB, time=103.01
	Adding new y-equations: [y_faux3_0 = x3_0]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, y_faux2_0-d_0, d_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d_0*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d_0+a-x3_0-x4_0)*x2_1-x2_0*(-b_0*d_1-b_1*d_0+x3_1+x4_1))*k5-x1_1*k3+k4*x2_1-k6*x3_1-k6*x4_1+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d_0*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d_2+2*b_1*d_1+b_2*d_0-x3_2-x4_2)*x2_0+(b_0*d_0+a-x3_0-x4_0)*x2_2+2*x2_1*(b_0*d_1+b_1*d_0-x3_1-x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, d_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_0*d_1-b_1*d_0+x4_1)*x2_0-x2_1*(b_0*d_0-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d_3+3*b_1*d_2+3*b_2*d_1+b_3*d_0-x3_3-x4_3)*x2_0+(3*b_0*d_2+6*b_1*d_1+3*b_2*d_0-3*x3_2-3*x4_2)*x2_1+(b_0*d_0+a-x3_0-x4_0)*x2_3+3*x2_2*(b_0*d_1+b_1*d_0-x3_1-x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, d_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*d_2-2*b_1*d_1-b_2*d_0+x4_2)*x2_0+(-2*b_0*d_1-2*b_1*d_0+2*x4_1)*x2_1+x2_2*(-b_0*d_0+x4_0))*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d_4+4*b_1*d_3+6*b_2*d_2+4*b_3*d_1+b_4*d_0-x3_4-x4_4)*x2_0+(4*b_0*d_3+12*b_1*d_2+12*b_2*d_1+4*b_3*d_0-4*x3_3-4*x4_3)*x2_1+(6*b_0*d_2+12*b_1*d_1+6*b_2*d_0-6*x3_2-6*x4_2)*x2_2+(b_0*d_0+a-x3_0-x4_0)*x2_4+4*x2_3*(b_0*d_1+b_1*d_0-x3_1-x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, d_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*d_3-3*b_1*d_2-3*b_2*d_1-b_3*d_0+x4_3)*x2_0+(-3*b_0*d_2-6*b_1*d_1-3*b_2*d_0+3*x4_2)*x2_1+(-d_0*x2_3-3*d_1*x2_2)*b_0-3*x2_2*b_1*d_0+3*x4_1*x2_2+x2_3*x4_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*d_5+5*b_1*d_4+10*b_2*d_3+10*b_3*d_2+5*b_4*d_1+b_5*d_0-x3_5-x4_5)*x2_0+(5*b_0*d_4+20*b_1*d_3+30*b_2*d_2+20*b_3*d_1+5*b_4*d_0-5*x3_4-5*x4_4)*x2_1+(10*b_0*d_3+30*b_1*d_2+30*b_2*d_1+10*b_3*d_0-10*x3_3-10*x4_3)*x2_2+(d_0*x2_5+5*d_1*x2_4+10*d_2*x2_3)*b_0+(5*b_1*x2_4+10*b_2*x2_3)*d_0+(20*b_1*d_1-10*x3_2-10*x4_2)*x2_3+(a-x3_0-x4_0)*x2_5-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, d_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*d_4-4*b_1*d_3-6*b_2*d_2-4*b_3*d_1-b_4*d_0+x4_4)*x2_0+(-4*b_0*d_3-12*b_1*d_2-12*b_2*d_1-4*b_3*d_0+4*x4_3)*x2_1+(-d_0*x2_4-4*d_1*x2_3-6*d_2*x2_2)*b_0+(-4*b_1*x2_3-6*b_2*x2_2)*d_0+(-12*b_1*d_1+6*x4_2)*x2_2+4*x4_1*x2_3+x4_0*x2_4)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*d_6+6*b_1*d_5+15*b_2*d_4+20*b_3*d_3+15*b_4*d_2+6*b_5*d_1+b_6*d_0-x3_6-x4_6)*x2_0+(6*b_0*d_5+30*b_1*d_4+60*b_2*d_3+60*b_3*d_2+30*b_4*d_1+6*b_5*d_0-6*x3_5-6*x4_5)*x2_1+(15*b_0*d_4+60*b_1*d_3+90*b_2*d_2+60*b_3*d_1+15*b_4*d_0-15*x3_4-15*x4_4)*x2_2+(d_0*x2_6+6*d_1*x2_5+15*d_2*x2_4+20*d_3*x2_3)*b_0+(6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3)*d_0+(60*b_1*d_2+60*b_2*d_1-20*x3_3-20*x4_3)*x2_3+30*b_1*d_1*x2_4+(-15*x3_2-15*x4_2)*x2_4+(a-x3_0-x4_0)*x2_6-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, d_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*d_5-5*b_1*d_4-10*b_2*d_3-10*b_3*d_2-5*b_4*d_1-b_5*d_0+x4_5)*x2_0+(-5*b_0*d_4-20*b_1*d_3-30*b_2*d_2-20*b_3*d_1-5*b_4*d_0+5*x4_4)*x2_1+(-d_0*x2_5-5*d_1*x2_4-10*d_2*x2_3-10*d_3*x2_2)*b_0+(-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2)*d_0+(-30*b_1*d_2-30*b_2*d_1+10*x4_3)*x2_2-20*b_1*d_1*x2_3+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*d_7+7*b_1*d_6+21*b_2*d_5+35*b_3*d_4+35*b_4*d_3+21*b_5*d_2+7*b_6*d_1+b_7*d_0-x3_7-x4_7)*x2_0+(7*b_0*d_6+42*b_1*d_5+105*b_2*d_4+140*b_3*d_3+105*b_4*d_2+42*b_5*d_1+7*b_6*d_0-7*x3_6-7*x4_6)*x2_1+(21*b_0*d_5+105*b_1*d_4+210*b_2*d_3+210*b_3*d_2+105*b_4*d_1+21*b_5*d_0-21*x3_5-21*x4_5)*x2_2+(d_0*x2_7+7*d_1*x2_6+21*d_2*x2_5+35*d_3*x2_4+35*d_4*x2_3)*b_0+(7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3)*d_0+(140*b_1*d_3+210*b_2*d_2+140*b_3*d_1-35*x3_4-35*x4_4)*x2_3+(42*d_1*x2_5+105*d_2*x2_4)*b_1+105*b_2*d_1*x2_4+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5+(a-x3_0-x4_0)*x2_7-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, d_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*d_6-6*b_1*d_5-15*b_2*d_4-20*b_3*d_3-15*b_4*d_2-6*b_5*d_1-b_6*d_0+x4_6)*x2_0+(-6*b_0*d_5-30*b_1*d_4-60*b_2*d_3-60*b_3*d_2-30*b_4*d_1-6*b_5*d_0+6*x4_5)*x2_1+(-d_0*x2_6-6*d_1*x2_5-15*d_2*x2_4-20*d_3*x2_3-15*d_4*x2_2)*b_0+(-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2)*d_0+(-60*b_1*d_3-90*b_2*d_2-60*b_3*d_1+15*x4_4)*x2_2+(-30*d_1*x2_4-60*d_2*x2_3)*b_1-60*b_2*d_1*x2_3+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, -d_1+y_faux2_1, -d_2+y_faux2_2, -d_3+y_faux2_3, -d_4+y_faux2_4, -d_5+y_faux2_5, -d_6+y_faux2_6, -d_7+y_faux2_7, y_faux3_0-x3_0]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = d_0, y_faux2_1 = d_1, y_faux2_2 = d_2, y_faux2_3 = d_3, y_faux2_4 = d_4, y_faux2_5 = d_5, y_faux2_6 = d_6, y_faux2_7 = d_7, y_faux2_8 = d_8, y_faux2_9 = d_9, y_faux2_10 = d_10, y_faux2_11 = d_11, y_faux2_12 = d_12, y_faux2_13 = d_13, y_faux2_14 = d_14, y_faux3_0 = x3_0]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability without tr. basis:  525956485400000000000000
Random sample for the outputs and inputs is generated from  [a = .1530250455e24, k3 = .5826111784e24, k4 = .1534807539e23, k5 = .1276210711e24, k6 = .5733889601e24, k7 = .3931167829e24, b_0 = .5382717036e24, d_0 = .5174379688e24, x1_0 = .3268392410e24, x2_0 = .2169113029e24, x3_0 = .1813114023e23, x4_0 = .5816131302e24, x5_0 = .3808096322e24]
The polynomial system widehat{E^t} contains  83 equations in  68  variables
            "new_logs/Tumor/transcendence_154_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, d, x3_1]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b, d}
Algebraically independent parameters among derivatives: {x3_1}
	Adding ODEs: [diff(b(t),t) = 0, diff(d(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t), y_faux2(t) = d(t)]
	New system: [diff(b(t),t) = 0, diff(d(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d(t)*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d(t)*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t), y_faux2(t) = d(t)]

=== Input info ===
State variables:          [b(t), d(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t), y_faux2(t)]
Input variables:          []
Parameters in equations:  [a, k3, k4, k5, k6, k7]
===================

memory used=11456.6MB, alloc=183.8MB, time=104.47
memory used=11569.5MB, alloc=183.8MB, time=105.38
memory used=11671.4MB, alloc=183.8MB, time=106.15
	Adding new y-equations: [y_faux3_0 = x3_1]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, y_faux2_0-d_0, d_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d_0*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d_0+a-x3_0-x4_0)*x2_1-x2_0*(-b_0*d_1-b_1*d_0+x3_1+x4_1))*k5-x1_1*k3+k4*x2_1-k6*x3_1-k6*x4_1+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d_0*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d_2+2*b_1*d_1+b_2*d_0-x3_2-x4_2)*x2_0+(b_0*d_0+a-x3_0-x4_0)*x2_2+2*x2_1*(b_0*d_1+b_1*d_0-x3_1-x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, d_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_0*d_1-b_1*d_0+x4_1)*x2_0-x2_1*(b_0*d_0-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d_3+3*b_1*d_2+3*b_2*d_1+b_3*d_0-x3_3-x4_3)*x2_0+(3*b_0*d_2+6*b_1*d_1+3*b_2*d_0-3*x3_2-3*x4_2)*x2_1+(b_0*d_0+a-x3_0-x4_0)*x2_3+3*x2_2*(b_0*d_1+b_1*d_0-x3_1-x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, d_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*d_2-2*b_1*d_1-b_2*d_0+x4_2)*x2_0+(-2*b_0*d_1-2*b_1*d_0+2*x4_1)*x2_1+x2_2*(-b_0*d_0+x4_0))*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d_4+4*b_1*d_3+6*b_2*d_2+4*b_3*d_1+b_4*d_0-x3_4-x4_4)*x2_0+(4*b_0*d_3+12*b_1*d_2+12*b_2*d_1+4*b_3*d_0-4*x3_3-4*x4_3)*x2_1+(6*b_0*d_2+12*b_1*d_1+6*b_2*d_0-6*x3_2-6*x4_2)*x2_2+(b_0*d_0+a-x3_0-x4_0)*x2_4+4*x2_3*(b_0*d_1+b_1*d_0-x3_1-x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, d_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*d_3-3*b_1*d_2-3*b_2*d_1-b_3*d_0+x4_3)*x2_0+(-3*b_0*d_2-6*b_1*d_1-3*b_2*d_0+3*x4_2)*x2_1+(-d_0*x2_3-3*d_1*x2_2)*b_0-3*x2_2*b_1*d_0+3*x4_1*x2_2+x2_3*x4_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*d_5+5*b_1*d_4+10*b_2*d_3+10*b_3*d_2+5*b_4*d_1+b_5*d_0-x3_5-x4_5)*x2_0+(5*b_0*d_4+20*b_1*d_3+30*b_2*d_2+20*b_3*d_1+5*b_4*d_0-5*x3_4-5*x4_4)*x2_1+(10*b_0*d_3+30*b_1*d_2+30*b_2*d_1+10*b_3*d_0-10*x3_3-10*x4_3)*x2_2+(d_0*x2_5+5*d_1*x2_4+10*d_2*x2_3)*b_0+(5*b_1*x2_4+10*b_2*x2_3)*d_0+(20*b_1*d_1-10*x3_2-10*x4_2)*x2_3+(a-x3_0-x4_0)*x2_5-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, d_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*d_4-4*b_1*d_3-6*b_2*d_2-4*b_3*d_1-b_4*d_0+x4_4)*x2_0+(-4*b_0*d_3-12*b_1*d_2-12*b_2*d_1-4*b_3*d_0+4*x4_3)*x2_1+(-d_0*x2_4-4*d_1*x2_3-6*d_2*x2_2)*b_0+(-4*b_1*x2_3-6*b_2*x2_2)*d_0+(-12*b_1*d_1+6*x4_2)*x2_2+4*x4_1*x2_3+x4_0*x2_4)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*d_6+6*b_1*d_5+15*b_2*d_4+20*b_3*d_3+15*b_4*d_2+6*b_5*d_1+b_6*d_0-x3_6-x4_6)*x2_0+(6*b_0*d_5+30*b_1*d_4+60*b_2*d_3+60*b_3*d_2+30*b_4*d_1+6*b_5*d_0-6*x3_5-6*x4_5)*x2_1+(15*b_0*d_4+60*b_1*d_3+90*b_2*d_2+60*b_3*d_1+15*b_4*d_0-15*x3_4-15*x4_4)*x2_2+(d_0*x2_6+6*d_1*x2_5+15*d_2*x2_4+20*d_3*x2_3)*b_0+(6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3)*d_0+(60*b_1*d_2+60*b_2*d_1-20*x3_3-20*x4_3)*x2_3+30*b_1*d_1*x2_4+(-15*x3_2-15*x4_2)*x2_4+(a-x3_0-x4_0)*x2_6-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, d_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*d_5-5*b_1*d_4-10*b_2*d_3-10*b_3*d_2-5*b_4*d_1-b_5*d_0+x4_5)*x2_0+(-5*b_0*d_4-20*b_1*d_3-30*b_2*d_2-20*b_3*d_1-5*b_4*d_0+5*x4_4)*x2_1+(-d_0*x2_5-5*d_1*x2_4-10*d_2*x2_3-10*d_3*x2_2)*b_0+(-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2)*d_0+(-30*b_1*d_2-30*b_2*d_1+10*x4_3)*x2_2-20*b_1*d_1*x2_3+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*d_7+7*b_1*d_6+21*b_2*d_5+35*b_3*d_4+35*b_4*d_3+21*b_5*d_2+7*b_6*d_1+b_7*d_0-x3_7-x4_7)*x2_0+(7*b_0*d_6+42*b_1*d_5+105*b_2*d_4+140*b_3*d_3+105*b_4*d_2+42*b_5*d_1+7*b_6*d_0-7*x3_6-7*x4_6)*x2_1+(21*b_0*d_5+105*b_1*d_4+210*b_2*d_3+210*b_3*d_2+105*b_4*d_1+21*b_5*d_0-21*x3_5-21*x4_5)*x2_2+(d_0*x2_7+7*d_1*x2_6+21*d_2*x2_5+35*d_3*x2_4+35*d_4*x2_3)*b_0+(7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3)*d_0+(140*b_1*d_3+210*b_2*d_2+140*b_3*d_1-35*x3_4-35*x4_4)*x2_3+(42*d_1*x2_5+105*d_2*x2_4)*b_1+105*b_2*d_1*x2_4+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5+(a-x3_0-x4_0)*x2_7-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, d_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*d_6-6*b_1*d_5-15*b_2*d_4-20*b_3*d_3-15*b_4*d_2-6*b_5*d_1-b_6*d_0+x4_6)*x2_0+(-6*b_0*d_5-30*b_1*d_4-60*b_2*d_3-60*b_3*d_2-30*b_4*d_1-6*b_5*d_0+6*x4_5)*x2_1+(-d_0*x2_6-6*d_1*x2_5-15*d_2*x2_4-20*d_3*x2_3-15*d_4*x2_2)*b_0+(-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2)*d_0+(-60*b_1*d_3-90*b_2*d_2-60*b_3*d_1+15*x4_4)*x2_2+(-30*d_1*x2_4-60*d_2*x2_3)*b_1-60*b_2*d_1*x2_3+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, -d_1+y_faux2_1, -d_2+y_faux2_2, -d_3+y_faux2_3, -d_4+y_faux2_4, -d_5+y_faux2_5, -d_6+y_faux2_6, -d_7+y_faux2_7, y_faux3_0-x3_1]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = d_0, y_faux2_1 = d_1, y_faux2_2 = d_2, y_faux2_3 = d_3, y_faux2_4 = d_4, y_faux2_5 = d_5, y_faux2_6 = d_6, y_faux2_7 = d_7, y_faux2_8 = d_8, y_faux2_9 = d_9, y_faux2_10 = d_10, y_faux2_11 = d_11, y_faux2_12 = d_12, y_faux2_13 = d_13, y_faux2_14 = d_14, y_faux3_0 = x3_1]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability without tr. basis:  525956485400000000000000
Random sample for the outputs and inputs is generated from  [a = .8315320144e23, k3 = .6761224491e24, k4 = .6582113918e24, k5 = .3682676480e24, k6 = .6069728664e24, k7 = .1312798043e24, b_0 = .4293999055e24, d_0 = .4628031930e24, x1_0 = .1840637607e24, x2_0 = .2152667734e24, x3_0 = .1381748234e24, x4_0 = .1084037939e24, x5_0 = .4911960110e24]
The polynomial system widehat{E^t} contains  83 equations in  68  variables
            "new_logs/Tumor/transcendence_155_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, d, x3_2]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b, d}
Algebraically independent parameters among derivatives: {x3_2}
	Adding ODEs: [diff(b(t),t) = 0, diff(d(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t), y_faux2(t) = d(t)]
	New system: [diff(b(t),t) = 0, diff(d(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d(t)*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d(t)*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t), y_faux2(t) = d(t)]

=== Input info ===
State variables:          [b(t), d(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t), y_faux2(t)]
Input variables:          []
Parameters in equations:  [a, k3, k4, k5, k6, k7]
===================

memory used=11792.4MB, alloc=183.8MB, time=107.60
memory used=11905.9MB, alloc=183.8MB, time=108.52
memory used=12007.8MB, alloc=183.8MB, time=109.30
	Adding new y-equations: [y_faux3_0 = x3_2]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, y_faux2_0-d_0, d_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d_0*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d_0+a-x3_0-x4_0)*x2_1-x2_0*(-b_0*d_1-b_1*d_0+x3_1+x4_1))*k5-x1_1*k3+k4*x2_1-k6*x3_1-k6*x4_1+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d_0*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d_2+2*b_1*d_1+b_2*d_0-x3_2-x4_2)*x2_0+(b_0*d_0+a-x3_0-x4_0)*x2_2+2*x2_1*(b_0*d_1+b_1*d_0-x3_1-x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, d_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_0*d_1-b_1*d_0+x4_1)*x2_0-x2_1*(b_0*d_0-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d_3+3*b_1*d_2+3*b_2*d_1+b_3*d_0-x3_3-x4_3)*x2_0+(3*b_0*d_2+6*b_1*d_1+3*b_2*d_0-3*x3_2-3*x4_2)*x2_1+(b_0*d_0+a-x3_0-x4_0)*x2_3+3*x2_2*(b_0*d_1+b_1*d_0-x3_1-x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, d_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*d_2-2*b_1*d_1-b_2*d_0+x4_2)*x2_0+(-2*b_0*d_1-2*b_1*d_0+2*x4_1)*x2_1+x2_2*(-b_0*d_0+x4_0))*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d_4+4*b_1*d_3+6*b_2*d_2+4*b_3*d_1+b_4*d_0-x3_4-x4_4)*x2_0+(4*b_0*d_3+12*b_1*d_2+12*b_2*d_1+4*b_3*d_0-4*x3_3-4*x4_3)*x2_1+(6*b_0*d_2+12*b_1*d_1+6*b_2*d_0-6*x3_2-6*x4_2)*x2_2+(b_0*d_0+a-x3_0-x4_0)*x2_4+4*x2_3*(b_0*d_1+b_1*d_0-x3_1-x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, d_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*d_3-3*b_1*d_2-3*b_2*d_1-b_3*d_0+x4_3)*x2_0+(-3*b_0*d_2-6*b_1*d_1-3*b_2*d_0+3*x4_2)*x2_1+(-d_0*x2_3-3*d_1*x2_2)*b_0-3*x2_2*b_1*d_0+3*x4_1*x2_2+x2_3*x4_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*d_5+5*b_1*d_4+10*b_2*d_3+10*b_3*d_2+5*b_4*d_1+b_5*d_0-x3_5-x4_5)*x2_0+(5*b_0*d_4+20*b_1*d_3+30*b_2*d_2+20*b_3*d_1+5*b_4*d_0-5*x3_4-5*x4_4)*x2_1+(10*b_0*d_3+30*b_1*d_2+30*b_2*d_1+10*b_3*d_0-10*x3_3-10*x4_3)*x2_2+(d_0*x2_5+5*d_1*x2_4+10*d_2*x2_3)*b_0+(5*b_1*x2_4+10*b_2*x2_3)*d_0+(20*b_1*d_1-10*x3_2-10*x4_2)*x2_3+(a-x3_0-x4_0)*x2_5-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, d_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*d_4-4*b_1*d_3-6*b_2*d_2-4*b_3*d_1-b_4*d_0+x4_4)*x2_0+(-4*b_0*d_3-12*b_1*d_2-12*b_2*d_1-4*b_3*d_0+4*x4_3)*x2_1+(-d_0*x2_4-4*d_1*x2_3-6*d_2*x2_2)*b_0+(-4*b_1*x2_3-6*b_2*x2_2)*d_0+(-12*b_1*d_1+6*x4_2)*x2_2+4*x4_1*x2_3+x4_0*x2_4)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*d_6+6*b_1*d_5+15*b_2*d_4+20*b_3*d_3+15*b_4*d_2+6*b_5*d_1+b_6*d_0-x3_6-x4_6)*x2_0+(6*b_0*d_5+30*b_1*d_4+60*b_2*d_3+60*b_3*d_2+30*b_4*d_1+6*b_5*d_0-6*x3_5-6*x4_5)*x2_1+(15*b_0*d_4+60*b_1*d_3+90*b_2*d_2+60*b_3*d_1+15*b_4*d_0-15*x3_4-15*x4_4)*x2_2+(d_0*x2_6+6*d_1*x2_5+15*d_2*x2_4+20*d_3*x2_3)*b_0+(6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3)*d_0+(60*b_1*d_2+60*b_2*d_1-20*x3_3-20*x4_3)*x2_3+30*b_1*d_1*x2_4+(-15*x3_2-15*x4_2)*x2_4+(a-x3_0-x4_0)*x2_6-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, d_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*d_5-5*b_1*d_4-10*b_2*d_3-10*b_3*d_2-5*b_4*d_1-b_5*d_0+x4_5)*x2_0+(-5*b_0*d_4-20*b_1*d_3-30*b_2*d_2-20*b_3*d_1-5*b_4*d_0+5*x4_4)*x2_1+(-d_0*x2_5-5*d_1*x2_4-10*d_2*x2_3-10*d_3*x2_2)*b_0+(-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2)*d_0+(-30*b_1*d_2-30*b_2*d_1+10*x4_3)*x2_2-20*b_1*d_1*x2_3+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*d_7+7*b_1*d_6+21*b_2*d_5+35*b_3*d_4+35*b_4*d_3+21*b_5*d_2+7*b_6*d_1+b_7*d_0-x3_7-x4_7)*x2_0+(7*b_0*d_6+42*b_1*d_5+105*b_2*d_4+140*b_3*d_3+105*b_4*d_2+42*b_5*d_1+7*b_6*d_0-7*x3_6-7*x4_6)*x2_1+(21*b_0*d_5+105*b_1*d_4+210*b_2*d_3+210*b_3*d_2+105*b_4*d_1+21*b_5*d_0-21*x3_5-21*x4_5)*x2_2+(d_0*x2_7+7*d_1*x2_6+21*d_2*x2_5+35*d_3*x2_4+35*d_4*x2_3)*b_0+(7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3)*d_0+(140*b_1*d_3+210*b_2*d_2+140*b_3*d_1-35*x3_4-35*x4_4)*x2_3+(42*d_1*x2_5+105*d_2*x2_4)*b_1+105*b_2*d_1*x2_4+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5+(a-x3_0-x4_0)*x2_7-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, d_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*d_6-6*b_1*d_5-15*b_2*d_4-20*b_3*d_3-15*b_4*d_2-6*b_5*d_1-b_6*d_0+x4_6)*x2_0+(-6*b_0*d_5-30*b_1*d_4-60*b_2*d_3-60*b_3*d_2-30*b_4*d_1-6*b_5*d_0+6*x4_5)*x2_1+(-d_0*x2_6-6*d_1*x2_5-15*d_2*x2_4-20*d_3*x2_3-15*d_4*x2_2)*b_0+(-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2)*d_0+(-60*b_1*d_3-90*b_2*d_2-60*b_3*d_1+15*x4_4)*x2_2+(-30*d_1*x2_4-60*d_2*x2_3)*b_1-60*b_2*d_1*x2_3+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, -d_1+y_faux2_1, -d_2+y_faux2_2, -d_3+y_faux2_3, -d_4+y_faux2_4, -d_5+y_faux2_5, -d_6+y_faux2_6, -d_7+y_faux2_7, y_faux3_0-x3_2]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = d_0, y_faux2_1 = d_1, y_faux2_2 = d_2, y_faux2_3 = d_3, y_faux2_4 = d_4, y_faux2_5 = d_5, y_faux2_6 = d_6, y_faux2_7 = d_7, y_faux2_8 = d_8, y_faux2_9 = d_9, y_faux2_10 = d_10, y_faux2_11 = d_11, y_faux2_12 = d_12, y_faux2_13 = d_13, y_faux2_14 = d_14, y_faux3_0 = x3_2]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability without tr. basis:  525956485400000000000000
Random sample for the outputs and inputs is generated from  [a = .3504314172e24, k3 = .1317477433e24, k4 = .2117071653e24, k5 = .2652078398e24, k6 = .6622674926e24, k7 = .2394781296e24, b_0 = .8657919527e23, d_0 = .4162716414e24, x1_0 = .6883521904e24, x2_0 = .4633910431e24, x3_0 = .6307848646e24, x4_0 = .6652284179e23, x5_0 = .5552901638e24]
The polynomial system widehat{E^t} contains  83 equations in  68  variables
            "new_logs/Tumor/transcendence_156_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, d, x3_3]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b, d}
Algebraically independent parameters among derivatives: {x3_3}
	Adding ODEs: [diff(b(t),t) = 0, diff(d(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t), y_faux2(t) = d(t)]
	New system: [diff(b(t),t) = 0, diff(d(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d(t)*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d(t)*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t), y_faux2(t) = d(t)]

=== Input info ===
State variables:          [b(t), d(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t), y_faux2(t)]
Input variables:          []
Parameters in equations:  [a, k3, k4, k5, k6, k7]
===================

memory used=12129.1MB, alloc=183.8MB, time=110.72
memory used=12242.1MB, alloc=183.8MB, time=111.63
memory used=12344.0MB, alloc=183.8MB, time=112.43
	Adding new y-equations: [y_faux3_0 = x3_3]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, y_faux2_0-d_0, d_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d_0*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d_0+a-x3_0-x4_0)*x2_1-x2_0*(-b_0*d_1-b_1*d_0+x3_1+x4_1))*k5-x1_1*k3+k4*x2_1-k6*x3_1-k6*x4_1+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d_0*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d_2+2*b_1*d_1+b_2*d_0-x3_2-x4_2)*x2_0+(b_0*d_0+a-x3_0-x4_0)*x2_2+2*x2_1*(b_0*d_1+b_1*d_0-x3_1-x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, d_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_0*d_1-b_1*d_0+x4_1)*x2_0-x2_1*(b_0*d_0-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d_3+3*b_1*d_2+3*b_2*d_1+b_3*d_0-x3_3-x4_3)*x2_0+(3*b_0*d_2+6*b_1*d_1+3*b_2*d_0-3*x3_2-3*x4_2)*x2_1+(b_0*d_0+a-x3_0-x4_0)*x2_3+3*x2_2*(b_0*d_1+b_1*d_0-x3_1-x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, d_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*d_2-2*b_1*d_1-b_2*d_0+x4_2)*x2_0+(-2*b_0*d_1-2*b_1*d_0+2*x4_1)*x2_1+x2_2*(-b_0*d_0+x4_0))*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d_4+4*b_1*d_3+6*b_2*d_2+4*b_3*d_1+b_4*d_0-x3_4-x4_4)*x2_0+(4*b_0*d_3+12*b_1*d_2+12*b_2*d_1+4*b_3*d_0-4*x3_3-4*x4_3)*x2_1+(6*b_0*d_2+12*b_1*d_1+6*b_2*d_0-6*x3_2-6*x4_2)*x2_2+(b_0*d_0+a-x3_0-x4_0)*x2_4+4*x2_3*(b_0*d_1+b_1*d_0-x3_1-x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, d_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*d_3-3*b_1*d_2-3*b_2*d_1-b_3*d_0+x4_3)*x2_0+(-3*b_0*d_2-6*b_1*d_1-3*b_2*d_0+3*x4_2)*x2_1+(-d_0*x2_3-3*d_1*x2_2)*b_0-3*x2_2*b_1*d_0+3*x4_1*x2_2+x2_3*x4_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*d_5+5*b_1*d_4+10*b_2*d_3+10*b_3*d_2+5*b_4*d_1+b_5*d_0-x3_5-x4_5)*x2_0+(5*b_0*d_4+20*b_1*d_3+30*b_2*d_2+20*b_3*d_1+5*b_4*d_0-5*x3_4-5*x4_4)*x2_1+(10*b_0*d_3+30*b_1*d_2+30*b_2*d_1+10*b_3*d_0-10*x3_3-10*x4_3)*x2_2+(d_0*x2_5+5*d_1*x2_4+10*d_2*x2_3)*b_0+(5*b_1*x2_4+10*b_2*x2_3)*d_0+(20*b_1*d_1-10*x3_2-10*x4_2)*x2_3+(a-x3_0-x4_0)*x2_5-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, d_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*d_4-4*b_1*d_3-6*b_2*d_2-4*b_3*d_1-b_4*d_0+x4_4)*x2_0+(-4*b_0*d_3-12*b_1*d_2-12*b_2*d_1-4*b_3*d_0+4*x4_3)*x2_1+(-d_0*x2_4-4*d_1*x2_3-6*d_2*x2_2)*b_0+(-4*b_1*x2_3-6*b_2*x2_2)*d_0+(-12*b_1*d_1+6*x4_2)*x2_2+4*x4_1*x2_3+x4_0*x2_4)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*d_6+6*b_1*d_5+15*b_2*d_4+20*b_3*d_3+15*b_4*d_2+6*b_5*d_1+b_6*d_0-x3_6-x4_6)*x2_0+(6*b_0*d_5+30*b_1*d_4+60*b_2*d_3+60*b_3*d_2+30*b_4*d_1+6*b_5*d_0-6*x3_5-6*x4_5)*x2_1+(15*b_0*d_4+60*b_1*d_3+90*b_2*d_2+60*b_3*d_1+15*b_4*d_0-15*x3_4-15*x4_4)*x2_2+(d_0*x2_6+6*d_1*x2_5+15*d_2*x2_4+20*d_3*x2_3)*b_0+(6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3)*d_0+(60*b_1*d_2+60*b_2*d_1-20*x3_3-20*x4_3)*x2_3+30*b_1*d_1*x2_4+(-15*x3_2-15*x4_2)*x2_4+(a-x3_0-x4_0)*x2_6-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, d_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*d_5-5*b_1*d_4-10*b_2*d_3-10*b_3*d_2-5*b_4*d_1-b_5*d_0+x4_5)*x2_0+(-5*b_0*d_4-20*b_1*d_3-30*b_2*d_2-20*b_3*d_1-5*b_4*d_0+5*x4_4)*x2_1+(-d_0*x2_5-5*d_1*x2_4-10*d_2*x2_3-10*d_3*x2_2)*b_0+(-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2)*d_0+(-30*b_1*d_2-30*b_2*d_1+10*x4_3)*x2_2-20*b_1*d_1*x2_3+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*d_7+7*b_1*d_6+21*b_2*d_5+35*b_3*d_4+35*b_4*d_3+21*b_5*d_2+7*b_6*d_1+b_7*d_0-x3_7-x4_7)*x2_0+(7*b_0*d_6+42*b_1*d_5+105*b_2*d_4+140*b_3*d_3+105*b_4*d_2+42*b_5*d_1+7*b_6*d_0-7*x3_6-7*x4_6)*x2_1+(21*b_0*d_5+105*b_1*d_4+210*b_2*d_3+210*b_3*d_2+105*b_4*d_1+21*b_5*d_0-21*x3_5-21*x4_5)*x2_2+(d_0*x2_7+7*d_1*x2_6+21*d_2*x2_5+35*d_3*x2_4+35*d_4*x2_3)*b_0+(7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3)*d_0+(140*b_1*d_3+210*b_2*d_2+140*b_3*d_1-35*x3_4-35*x4_4)*x2_3+(42*d_1*x2_5+105*d_2*x2_4)*b_1+105*b_2*d_1*x2_4+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5+(a-x3_0-x4_0)*x2_7-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, d_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*d_6-6*b_1*d_5-15*b_2*d_4-20*b_3*d_3-15*b_4*d_2-6*b_5*d_1-b_6*d_0+x4_6)*x2_0+(-6*b_0*d_5-30*b_1*d_4-60*b_2*d_3-60*b_3*d_2-30*b_4*d_1-6*b_5*d_0+6*x4_5)*x2_1+(-d_0*x2_6-6*d_1*x2_5-15*d_2*x2_4-20*d_3*x2_3-15*d_4*x2_2)*b_0+(-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2)*d_0+(-60*b_1*d_3-90*b_2*d_2-60*b_3*d_1+15*x4_4)*x2_2+(-30*d_1*x2_4-60*d_2*x2_3)*b_1-60*b_2*d_1*x2_3+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, -d_1+y_faux2_1, -d_2+y_faux2_2, -d_3+y_faux2_3, -d_4+y_faux2_4, -d_5+y_faux2_5, -d_6+y_faux2_6, -d_7+y_faux2_7, y_faux3_0-x3_3]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = d_0, y_faux2_1 = d_1, y_faux2_2 = d_2, y_faux2_3 = d_3, y_faux2_4 = d_4, y_faux2_5 = d_5, y_faux2_6 = d_6, y_faux2_7 = d_7, y_faux2_8 = d_8, y_faux2_9 = d_9, y_faux2_10 = d_10, y_faux2_11 = d_11, y_faux2_12 = d_12, y_faux2_13 = d_13, y_faux2_14 = d_14, y_faux3_0 = x3_3]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability without tr. basis:  525956485400000000000000
Random sample for the outputs and inputs is generated from  [a = .1548205613e24, k3 = .1595131467e24, k4 = .2344610971e24, k5 = .8524050817e22, k6 = .5679099886e24, k7 = .4853194093e24, b_0 = .1143789179e24, d_0 = .6185910793e24, x1_0 = .2927922949e24, x2_0 = .6916947075e23, x3_0 = .4474291259e24, x4_0 = .6875300103e24, x5_0 = .1170242073e24]
The polynomial system widehat{E^t} contains  83 equations in  68  variables
            "new_logs/Tumor/transcendence_157_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, d, x3_4]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b, d}
Algebraically independent parameters among derivatives: {x3_4}
	Adding ODEs: [diff(b(t),t) = 0, diff(d(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t), y_faux2(t) = d(t)]
	New system: [diff(b(t),t) = 0, diff(d(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d(t)*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d(t)*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t), y_faux2(t) = d(t)]

=== Input info ===
State variables:          [b(t), d(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t), y_faux2(t)]
Input variables:          []
Parameters in equations:  [a, k3, k4, k5, k6, k7]
===================

memory used=12467.7MB, alloc=183.8MB, time=113.89
memory used=12579.9MB, alloc=183.8MB, time=114.78
memory used=12681.8MB, alloc=183.8MB, time=115.56
	Adding new y-equations: [y_faux3_0 = x3_4]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, y_faux2_0-d_0, d_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d_0*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d_0+a-x3_0-x4_0)*x2_1-x2_0*(-b_0*d_1-b_1*d_0+x3_1+x4_1))*k5-x1_1*k3+k4*x2_1-k6*x3_1-k6*x4_1+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d_0*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d_2+2*b_1*d_1+b_2*d_0-x3_2-x4_2)*x2_0+(b_0*d_0+a-x3_0-x4_0)*x2_2+2*x2_1*(b_0*d_1+b_1*d_0-x3_1-x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, d_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_0*d_1-b_1*d_0+x4_1)*x2_0-x2_1*(b_0*d_0-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d_3+3*b_1*d_2+3*b_2*d_1+b_3*d_0-x3_3-x4_3)*x2_0+(3*b_0*d_2+6*b_1*d_1+3*b_2*d_0-3*x3_2-3*x4_2)*x2_1+(b_0*d_0+a-x3_0-x4_0)*x2_3+3*x2_2*(b_0*d_1+b_1*d_0-x3_1-x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, d_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*d_2-2*b_1*d_1-b_2*d_0+x4_2)*x2_0+(-2*b_0*d_1-2*b_1*d_0+2*x4_1)*x2_1+x2_2*(-b_0*d_0+x4_0))*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d_4+4*b_1*d_3+6*b_2*d_2+4*b_3*d_1+b_4*d_0-x3_4-x4_4)*x2_0+(4*b_0*d_3+12*b_1*d_2+12*b_2*d_1+4*b_3*d_0-4*x3_3-4*x4_3)*x2_1+(6*b_0*d_2+12*b_1*d_1+6*b_2*d_0-6*x3_2-6*x4_2)*x2_2+(b_0*d_0+a-x3_0-x4_0)*x2_4+4*x2_3*(b_0*d_1+b_1*d_0-x3_1-x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, d_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*d_3-3*b_1*d_2-3*b_2*d_1-b_3*d_0+x4_3)*x2_0+(-3*b_0*d_2-6*b_1*d_1-3*b_2*d_0+3*x4_2)*x2_1+(-d_0*x2_3-3*d_1*x2_2)*b_0-3*x2_2*b_1*d_0+3*x4_1*x2_2+x2_3*x4_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*d_5+5*b_1*d_4+10*b_2*d_3+10*b_3*d_2+5*b_4*d_1+b_5*d_0-x3_5-x4_5)*x2_0+(5*b_0*d_4+20*b_1*d_3+30*b_2*d_2+20*b_3*d_1+5*b_4*d_0-5*x3_4-5*x4_4)*x2_1+(10*b_0*d_3+30*b_1*d_2+30*b_2*d_1+10*b_3*d_0-10*x3_3-10*x4_3)*x2_2+(d_0*x2_5+5*d_1*x2_4+10*d_2*x2_3)*b_0+(5*b_1*x2_4+10*b_2*x2_3)*d_0+(20*b_1*d_1-10*x3_2-10*x4_2)*x2_3+(a-x3_0-x4_0)*x2_5-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, d_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*d_4-4*b_1*d_3-6*b_2*d_2-4*b_3*d_1-b_4*d_0+x4_4)*x2_0+(-4*b_0*d_3-12*b_1*d_2-12*b_2*d_1-4*b_3*d_0+4*x4_3)*x2_1+(-d_0*x2_4-4*d_1*x2_3-6*d_2*x2_2)*b_0+(-4*b_1*x2_3-6*b_2*x2_2)*d_0+(-12*b_1*d_1+6*x4_2)*x2_2+4*x4_1*x2_3+x4_0*x2_4)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*d_6+6*b_1*d_5+15*b_2*d_4+20*b_3*d_3+15*b_4*d_2+6*b_5*d_1+b_6*d_0-x3_6-x4_6)*x2_0+(6*b_0*d_5+30*b_1*d_4+60*b_2*d_3+60*b_3*d_2+30*b_4*d_1+6*b_5*d_0-6*x3_5-6*x4_5)*x2_1+(15*b_0*d_4+60*b_1*d_3+90*b_2*d_2+60*b_3*d_1+15*b_4*d_0-15*x3_4-15*x4_4)*x2_2+(d_0*x2_6+6*d_1*x2_5+15*d_2*x2_4+20*d_3*x2_3)*b_0+(6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3)*d_0+(60*b_1*d_2+60*b_2*d_1-20*x3_3-20*x4_3)*x2_3+30*b_1*d_1*x2_4+(-15*x3_2-15*x4_2)*x2_4+(a-x3_0-x4_0)*x2_6-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, d_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*d_5-5*b_1*d_4-10*b_2*d_3-10*b_3*d_2-5*b_4*d_1-b_5*d_0+x4_5)*x2_0+(-5*b_0*d_4-20*b_1*d_3-30*b_2*d_2-20*b_3*d_1-5*b_4*d_0+5*x4_4)*x2_1+(-d_0*x2_5-5*d_1*x2_4-10*d_2*x2_3-10*d_3*x2_2)*b_0+(-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2)*d_0+(-30*b_1*d_2-30*b_2*d_1+10*x4_3)*x2_2-20*b_1*d_1*x2_3+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*d_7+7*b_1*d_6+21*b_2*d_5+35*b_3*d_4+35*b_4*d_3+21*b_5*d_2+7*b_6*d_1+b_7*d_0-x3_7-x4_7)*x2_0+(7*b_0*d_6+42*b_1*d_5+105*b_2*d_4+140*b_3*d_3+105*b_4*d_2+42*b_5*d_1+7*b_6*d_0-7*x3_6-7*x4_6)*x2_1+(21*b_0*d_5+105*b_1*d_4+210*b_2*d_3+210*b_3*d_2+105*b_4*d_1+21*b_5*d_0-21*x3_5-21*x4_5)*x2_2+(d_0*x2_7+7*d_1*x2_6+21*d_2*x2_5+35*d_3*x2_4+35*d_4*x2_3)*b_0+(7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3)*d_0+(140*b_1*d_3+210*b_2*d_2+140*b_3*d_1-35*x3_4-35*x4_4)*x2_3+(42*d_1*x2_5+105*d_2*x2_4)*b_1+105*b_2*d_1*x2_4+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5+(a-x3_0-x4_0)*x2_7-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, d_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*d_6-6*b_1*d_5-15*b_2*d_4-20*b_3*d_3-15*b_4*d_2-6*b_5*d_1-b_6*d_0+x4_6)*x2_0+(-6*b_0*d_5-30*b_1*d_4-60*b_2*d_3-60*b_3*d_2-30*b_4*d_1-6*b_5*d_0+6*x4_5)*x2_1+(-d_0*x2_6-6*d_1*x2_5-15*d_2*x2_4-20*d_3*x2_3-15*d_4*x2_2)*b_0+(-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2)*d_0+(-60*b_1*d_3-90*b_2*d_2-60*b_3*d_1+15*x4_4)*x2_2+(-30*d_1*x2_4-60*d_2*x2_3)*b_1-60*b_2*d_1*x2_3+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, -d_1+y_faux2_1, -d_2+y_faux2_2, -d_3+y_faux2_3, -d_4+y_faux2_4, -d_5+y_faux2_5, -d_6+y_faux2_6, -d_7+y_faux2_7, y_faux3_0-x3_4]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = d_0, y_faux2_1 = d_1, y_faux2_2 = d_2, y_faux2_3 = d_3, y_faux2_4 = d_4, y_faux2_5 = d_5, y_faux2_6 = d_6, y_faux2_7 = d_7, y_faux2_8 = d_8, y_faux2_9 = d_9, y_faux2_10 = d_10, y_faux2_11 = d_11, y_faux2_12 = d_12, y_faux2_13 = d_13, y_faux2_14 = d_14, y_faux3_0 = x3_4]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability without tr. basis:  525956485400000000000000
Random sample for the outputs and inputs is generated from  [a = .7011751504e24, k3 = .3021010184e24, k4 = .1961016290e24, k5 = .3053088042e24, k6 = .5302292026e24, k7 = .6047422531e24, b_0 = .8695692287e23, d_0 = .3263450971e24, x1_0 = .8471033526e23, x2_0 = .9745440057e23, x3_0 = .3367654034e23, x4_0 = .3846857719e24, x5_0 = .1200087629e24]
The polynomial system widehat{E^t} contains  83 equations in  68  variables
            "new_logs/Tumor/transcendence_158_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, d, x3_5]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b, d}
Algebraically independent parameters among derivatives: {x3_5}
	Adding ODEs: [diff(b(t),t) = 0, diff(d(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t), y_faux2(t) = d(t)]
	New system: [diff(b(t),t) = 0, diff(d(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d(t)*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d(t)*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t), y_faux2(t) = d(t)]

=== Input info ===
State variables:          [b(t), d(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t), y_faux2(t)]
Input variables:          []
Parameters in equations:  [a, k3, k4, k5, k6, k7]
===================

memory used=12798.6MB, alloc=183.8MB, time=116.98
memory used=12915.9MB, alloc=183.8MB, time=117.94
memory used=13018.0MB, alloc=183.8MB, time=118.75
	Adding new y-equations: [y_faux3_0 = x3_5]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, y_faux2_0-d_0, d_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d_0*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d_0+a-x3_0-x4_0)*x2_1-x2_0*(-b_0*d_1-b_1*d_0+x3_1+x4_1))*k5-x1_1*k3+k4*x2_1-k6*x3_1-k6*x4_1+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d_0*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d_2+2*b_1*d_1+b_2*d_0-x3_2-x4_2)*x2_0+(b_0*d_0+a-x3_0-x4_0)*x2_2+2*x2_1*(b_0*d_1+b_1*d_0-x3_1-x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, d_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_0*d_1-b_1*d_0+x4_1)*x2_0-x2_1*(b_0*d_0-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d_3+3*b_1*d_2+3*b_2*d_1+b_3*d_0-x3_3-x4_3)*x2_0+(3*b_0*d_2+6*b_1*d_1+3*b_2*d_0-3*x3_2-3*x4_2)*x2_1+(b_0*d_0+a-x3_0-x4_0)*x2_3+3*x2_2*(b_0*d_1+b_1*d_0-x3_1-x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, d_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*d_2-2*b_1*d_1-b_2*d_0+x4_2)*x2_0+(-2*b_0*d_1-2*b_1*d_0+2*x4_1)*x2_1+x2_2*(-b_0*d_0+x4_0))*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d_4+4*b_1*d_3+6*b_2*d_2+4*b_3*d_1+b_4*d_0-x3_4-x4_4)*x2_0+(4*b_0*d_3+12*b_1*d_2+12*b_2*d_1+4*b_3*d_0-4*x3_3-4*x4_3)*x2_1+(6*b_0*d_2+12*b_1*d_1+6*b_2*d_0-6*x3_2-6*x4_2)*x2_2+(b_0*d_0+a-x3_0-x4_0)*x2_4+4*x2_3*(b_0*d_1+b_1*d_0-x3_1-x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, d_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*d_3-3*b_1*d_2-3*b_2*d_1-b_3*d_0+x4_3)*x2_0+(-3*b_0*d_2-6*b_1*d_1-3*b_2*d_0+3*x4_2)*x2_1+(-d_0*x2_3-3*d_1*x2_2)*b_0-3*x2_2*b_1*d_0+3*x4_1*x2_2+x2_3*x4_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*d_5+5*b_1*d_4+10*b_2*d_3+10*b_3*d_2+5*b_4*d_1+b_5*d_0-x3_5-x4_5)*x2_0+(5*b_0*d_4+20*b_1*d_3+30*b_2*d_2+20*b_3*d_1+5*b_4*d_0-5*x3_4-5*x4_4)*x2_1+(10*b_0*d_3+30*b_1*d_2+30*b_2*d_1+10*b_3*d_0-10*x3_3-10*x4_3)*x2_2+(d_0*x2_5+5*d_1*x2_4+10*d_2*x2_3)*b_0+(5*b_1*x2_4+10*b_2*x2_3)*d_0+(20*b_1*d_1-10*x3_2-10*x4_2)*x2_3+(a-x3_0-x4_0)*x2_5-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, d_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*d_4-4*b_1*d_3-6*b_2*d_2-4*b_3*d_1-b_4*d_0+x4_4)*x2_0+(-4*b_0*d_3-12*b_1*d_2-12*b_2*d_1-4*b_3*d_0+4*x4_3)*x2_1+(-d_0*x2_4-4*d_1*x2_3-6*d_2*x2_2)*b_0+(-4*b_1*x2_3-6*b_2*x2_2)*d_0+(-12*b_1*d_1+6*x4_2)*x2_2+4*x4_1*x2_3+x4_0*x2_4)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*d_6+6*b_1*d_5+15*b_2*d_4+20*b_3*d_3+15*b_4*d_2+6*b_5*d_1+b_6*d_0-x3_6-x4_6)*x2_0+(6*b_0*d_5+30*b_1*d_4+60*b_2*d_3+60*b_3*d_2+30*b_4*d_1+6*b_5*d_0-6*x3_5-6*x4_5)*x2_1+(15*b_0*d_4+60*b_1*d_3+90*b_2*d_2+60*b_3*d_1+15*b_4*d_0-15*x3_4-15*x4_4)*x2_2+(d_0*x2_6+6*d_1*x2_5+15*d_2*x2_4+20*d_3*x2_3)*b_0+(6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3)*d_0+(60*b_1*d_2+60*b_2*d_1-20*x3_3-20*x4_3)*x2_3+30*b_1*d_1*x2_4+(-15*x3_2-15*x4_2)*x2_4+(a-x3_0-x4_0)*x2_6-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, d_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*d_5-5*b_1*d_4-10*b_2*d_3-10*b_3*d_2-5*b_4*d_1-b_5*d_0+x4_5)*x2_0+(-5*b_0*d_4-20*b_1*d_3-30*b_2*d_2-20*b_3*d_1-5*b_4*d_0+5*x4_4)*x2_1+(-d_0*x2_5-5*d_1*x2_4-10*d_2*x2_3-10*d_3*x2_2)*b_0+(-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2)*d_0+(-30*b_1*d_2-30*b_2*d_1+10*x4_3)*x2_2-20*b_1*d_1*x2_3+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*d_7+7*b_1*d_6+21*b_2*d_5+35*b_3*d_4+35*b_4*d_3+21*b_5*d_2+7*b_6*d_1+b_7*d_0-x3_7-x4_7)*x2_0+(7*b_0*d_6+42*b_1*d_5+105*b_2*d_4+140*b_3*d_3+105*b_4*d_2+42*b_5*d_1+7*b_6*d_0-7*x3_6-7*x4_6)*x2_1+(21*b_0*d_5+105*b_1*d_4+210*b_2*d_3+210*b_3*d_2+105*b_4*d_1+21*b_5*d_0-21*x3_5-21*x4_5)*x2_2+(d_0*x2_7+7*d_1*x2_6+21*d_2*x2_5+35*d_3*x2_4+35*d_4*x2_3)*b_0+(7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3)*d_0+(140*b_1*d_3+210*b_2*d_2+140*b_3*d_1-35*x3_4-35*x4_4)*x2_3+(42*d_1*x2_5+105*d_2*x2_4)*b_1+105*b_2*d_1*x2_4+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5+(a-x3_0-x4_0)*x2_7-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, d_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*d_6-6*b_1*d_5-15*b_2*d_4-20*b_3*d_3-15*b_4*d_2-6*b_5*d_1-b_6*d_0+x4_6)*x2_0+(-6*b_0*d_5-30*b_1*d_4-60*b_2*d_3-60*b_3*d_2-30*b_4*d_1-6*b_5*d_0+6*x4_5)*x2_1+(-d_0*x2_6-6*d_1*x2_5-15*d_2*x2_4-20*d_3*x2_3-15*d_4*x2_2)*b_0+(-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2)*d_0+(-60*b_1*d_3-90*b_2*d_2-60*b_3*d_1+15*x4_4)*x2_2+(-30*d_1*x2_4-60*d_2*x2_3)*b_1-60*b_2*d_1*x2_3+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, -d_1+y_faux2_1, -d_2+y_faux2_2, -d_3+y_faux2_3, -d_4+y_faux2_4, -d_5+y_faux2_5, -d_6+y_faux2_6, -d_7+y_faux2_7, y_faux3_0-x3_5]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = d_0, y_faux2_1 = d_1, y_faux2_2 = d_2, y_faux2_3 = d_3, y_faux2_4 = d_4, y_faux2_5 = d_5, y_faux2_6 = d_6, y_faux2_7 = d_7, y_faux2_8 = d_8, y_faux2_9 = d_9, y_faux2_10 = d_10, y_faux2_11 = d_11, y_faux2_12 = d_12, y_faux2_13 = d_13, y_faux2_14 = d_14, y_faux3_0 = x3_5]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability without tr. basis:  525956485400000000000000
Random sample for the outputs and inputs is generated from  [a = .6188554027e24, k3 = .6072731030e24, k4 = .1252643099e24, k5 = .9493799432e23, k6 = .1625582734e24, k7 = .4448874259e24, b_0 = .4129165086e24, d_0 = .6069029148e24, x1_0 = .8629236080e23, x2_0 = .4006728029e24, x3_0 = .6437018594e24, x4_0 = .5752824171e23, x5_0 = .3640768832e24]
The polynomial system widehat{E^t} contains  83 equations in  68  variables
            "new_logs/Tumor/transcendence_159_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, d, x3_6]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b, d}
Algebraically independent parameters among derivatives: {x3_6}
	Adding ODEs: [diff(b(t),t) = 0, diff(d(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t), y_faux2(t) = d(t)]
	New system: [diff(b(t),t) = 0, diff(d(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d(t)*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d(t)*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t), y_faux2(t) = d(t)]

=== Input info ===
State variables:          [b(t), d(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t), y_faux2(t)]
Input variables:          []
Parameters in equations:  [a, k3, k4, k5, k6, k7]
===================

memory used=13139.9MB, alloc=183.8MB, time=120.18
memory used=13252.8MB, alloc=183.8MB, time=121.09
memory used=13354.7MB, alloc=215.8MB, time=121.91
	Adding new y-equations: [y_faux3_0 = x3_6]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, y_faux2_0-d_0, d_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d_0*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d_0+a-x3_0-x4_0)*x2_1-x2_0*(-b_0*d_1-b_1*d_0+x3_1+x4_1))*k5-x1_1*k3+k4*x2_1-k6*x3_1-k6*x4_1+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d_0*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d_2+2*b_1*d_1+b_2*d_0-x3_2-x4_2)*x2_0+(b_0*d_0+a-x3_0-x4_0)*x2_2+2*x2_1*(b_0*d_1+b_1*d_0-x3_1-x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, d_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_0*d_1-b_1*d_0+x4_1)*x2_0-x2_1*(b_0*d_0-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d_3+3*b_1*d_2+3*b_2*d_1+b_3*d_0-x3_3-x4_3)*x2_0+(3*b_0*d_2+6*b_1*d_1+3*b_2*d_0-3*x3_2-3*x4_2)*x2_1+(b_0*d_0+a-x3_0-x4_0)*x2_3+3*x2_2*(b_0*d_1+b_1*d_0-x3_1-x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, d_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*d_2-2*b_1*d_1-b_2*d_0+x4_2)*x2_0+(-2*b_0*d_1-2*b_1*d_0+2*x4_1)*x2_1+x2_2*(-b_0*d_0+x4_0))*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d_4+4*b_1*d_3+6*b_2*d_2+4*b_3*d_1+b_4*d_0-x3_4-x4_4)*x2_0+(4*b_0*d_3+12*b_1*d_2+12*b_2*d_1+4*b_3*d_0-4*x3_3-4*x4_3)*x2_1+(6*b_0*d_2+12*b_1*d_1+6*b_2*d_0-6*x3_2-6*x4_2)*x2_2+(b_0*d_0+a-x3_0-x4_0)*x2_4+4*x2_3*(b_0*d_1+b_1*d_0-x3_1-x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, d_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*d_3-3*b_1*d_2-3*b_2*d_1-b_3*d_0+x4_3)*x2_0+(-3*b_0*d_2-6*b_1*d_1-3*b_2*d_0+3*x4_2)*x2_1+(-d_0*x2_3-3*d_1*x2_2)*b_0-3*x2_2*b_1*d_0+3*x4_1*x2_2+x2_3*x4_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*d_5+5*b_1*d_4+10*b_2*d_3+10*b_3*d_2+5*b_4*d_1+b_5*d_0-x3_5-x4_5)*x2_0+(5*b_0*d_4+20*b_1*d_3+30*b_2*d_2+20*b_3*d_1+5*b_4*d_0-5*x3_4-5*x4_4)*x2_1+(10*b_0*d_3+30*b_1*d_2+30*b_2*d_1+10*b_3*d_0-10*x3_3-10*x4_3)*x2_2+(d_0*x2_5+5*d_1*x2_4+10*d_2*x2_3)*b_0+(5*b_1*x2_4+10*b_2*x2_3)*d_0+(20*b_1*d_1-10*x3_2-10*x4_2)*x2_3+(a-x3_0-x4_0)*x2_5-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, d_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*d_4-4*b_1*d_3-6*b_2*d_2-4*b_3*d_1-b_4*d_0+x4_4)*x2_0+(-4*b_0*d_3-12*b_1*d_2-12*b_2*d_1-4*b_3*d_0+4*x4_3)*x2_1+(-d_0*x2_4-4*d_1*x2_3-6*d_2*x2_2)*b_0+(-4*b_1*x2_3-6*b_2*x2_2)*d_0+(-12*b_1*d_1+6*x4_2)*x2_2+4*x4_1*x2_3+x4_0*x2_4)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*d_6+6*b_1*d_5+15*b_2*d_4+20*b_3*d_3+15*b_4*d_2+6*b_5*d_1+b_6*d_0-x3_6-x4_6)*x2_0+(6*b_0*d_5+30*b_1*d_4+60*b_2*d_3+60*b_3*d_2+30*b_4*d_1+6*b_5*d_0-6*x3_5-6*x4_5)*x2_1+(15*b_0*d_4+60*b_1*d_3+90*b_2*d_2+60*b_3*d_1+15*b_4*d_0-15*x3_4-15*x4_4)*x2_2+(d_0*x2_6+6*d_1*x2_5+15*d_2*x2_4+20*d_3*x2_3)*b_0+(6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3)*d_0+(60*b_1*d_2+60*b_2*d_1-20*x3_3-20*x4_3)*x2_3+30*b_1*d_1*x2_4+(-15*x3_2-15*x4_2)*x2_4+(a-x3_0-x4_0)*x2_6-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, d_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*d_5-5*b_1*d_4-10*b_2*d_3-10*b_3*d_2-5*b_4*d_1-b_5*d_0+x4_5)*x2_0+(-5*b_0*d_4-20*b_1*d_3-30*b_2*d_2-20*b_3*d_1-5*b_4*d_0+5*x4_4)*x2_1+(-d_0*x2_5-5*d_1*x2_4-10*d_2*x2_3-10*d_3*x2_2)*b_0+(-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2)*d_0+(-30*b_1*d_2-30*b_2*d_1+10*x4_3)*x2_2-20*b_1*d_1*x2_3+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*d_7+7*b_1*d_6+21*b_2*d_5+35*b_3*d_4+35*b_4*d_3+21*b_5*d_2+7*b_6*d_1+b_7*d_0-x3_7-x4_7)*x2_0+(7*b_0*d_6+42*b_1*d_5+105*b_2*d_4+140*b_3*d_3+105*b_4*d_2+42*b_5*d_1+7*b_6*d_0-7*x3_6-7*x4_6)*x2_1+(21*b_0*d_5+105*b_1*d_4+210*b_2*d_3+210*b_3*d_2+105*b_4*d_1+21*b_5*d_0-21*x3_5-21*x4_5)*x2_2+(d_0*x2_7+7*d_1*x2_6+21*d_2*x2_5+35*d_3*x2_4+35*d_4*x2_3)*b_0+(7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3)*d_0+(140*b_1*d_3+210*b_2*d_2+140*b_3*d_1-35*x3_4-35*x4_4)*x2_3+(42*d_1*x2_5+105*d_2*x2_4)*b_1+105*b_2*d_1*x2_4+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5+(a-x3_0-x4_0)*x2_7-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, d_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*d_6-6*b_1*d_5-15*b_2*d_4-20*b_3*d_3-15*b_4*d_2-6*b_5*d_1-b_6*d_0+x4_6)*x2_0+(-6*b_0*d_5-30*b_1*d_4-60*b_2*d_3-60*b_3*d_2-30*b_4*d_1-6*b_5*d_0+6*x4_5)*x2_1+(-d_0*x2_6-6*d_1*x2_5-15*d_2*x2_4-20*d_3*x2_3-15*d_4*x2_2)*b_0+(-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2)*d_0+(-60*b_1*d_3-90*b_2*d_2-60*b_3*d_1+15*x4_4)*x2_2+(-30*d_1*x2_4-60*d_2*x2_3)*b_1-60*b_2*d_1*x2_3+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, -d_1+y_faux2_1, -d_2+y_faux2_2, -d_3+y_faux2_3, -d_4+y_faux2_4, -d_5+y_faux2_5, -d_6+y_faux2_6, -d_7+y_faux2_7, y_faux3_0-x3_6]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = d_0, y_faux2_1 = d_1, y_faux2_2 = d_2, y_faux2_3 = d_3, y_faux2_4 = d_4, y_faux2_5 = d_5, y_faux2_6 = d_6, y_faux2_7 = d_7, y_faux2_8 = d_8, y_faux2_9 = d_9, y_faux2_10 = d_10, y_faux2_11 = d_11, y_faux2_12 = d_12, y_faux2_13 = d_13, y_faux2_14 = d_14, y_faux3_0 = x3_6]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability without tr. basis:  525956485400000000000000
Random sample for the outputs and inputs is generated from  [a = .1696046236e24, k3 = .3901205429e24, k4 = .4352818576e24, k5 = .2368370295e24, k6 = .2929898390e24, k7 = .2853824888e23, b_0 = .5435692700e24, d_0 = .5961885027e24, x1_0 = .3262074285e24, x2_0 = .5265420586e24, x3_0 = .6781847811e24, x4_0 = .7977992583e23, x5_0 = .5149937333e24]
The polynomial system widehat{E^t} contains  83 equations in  68  variables
            "new_logs/Tumor/transcendence_160_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, d, x3_7]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b, d}
Algebraically independent parameters among derivatives: {x3_7}
	Adding ODEs: [diff(b(t),t) = 0, diff(d(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t), y_faux2(t) = d(t)]
	New system: [diff(b(t),t) = 0, diff(d(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d(t)*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d(t)*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t), y_faux2(t) = d(t)]

=== Input info ===
State variables:          [b(t), d(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t), y_faux2(t)]
Input variables:          []
Parameters in equations:  [a, k3, k4, k5, k6, k7]
===================

memory used=13474.7MB, alloc=215.8MB, time=123.37
memory used=13589.0MB, alloc=215.8MB, time=124.32
memory used=13691.0MB, alloc=215.8MB, time=125.11
	Adding new y-equations: [y_faux3_0 = x3_7]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, y_faux2_0-d_0, d_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d_0*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d_0+a-x3_0-x4_0)*x2_1-x2_0*(-b_0*d_1-b_1*d_0+x3_1+x4_1))*k5-x1_1*k3+k4*x2_1-k6*x3_1-k6*x4_1+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d_0*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d_2+2*b_1*d_1+b_2*d_0-x3_2-x4_2)*x2_0+(b_0*d_0+a-x3_0-x4_0)*x2_2+2*x2_1*(b_0*d_1+b_1*d_0-x3_1-x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, d_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_0*d_1-b_1*d_0+x4_1)*x2_0-x2_1*(b_0*d_0-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d_3+3*b_1*d_2+3*b_2*d_1+b_3*d_0-x3_3-x4_3)*x2_0+(3*b_0*d_2+6*b_1*d_1+3*b_2*d_0-3*x3_2-3*x4_2)*x2_1+(b_0*d_0+a-x3_0-x4_0)*x2_3+3*x2_2*(b_0*d_1+b_1*d_0-x3_1-x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, d_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*d_2-2*b_1*d_1-b_2*d_0+x4_2)*x2_0+(-2*b_0*d_1-2*b_1*d_0+2*x4_1)*x2_1+x2_2*(-b_0*d_0+x4_0))*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d_4+4*b_1*d_3+6*b_2*d_2+4*b_3*d_1+b_4*d_0-x3_4-x4_4)*x2_0+(4*b_0*d_3+12*b_1*d_2+12*b_2*d_1+4*b_3*d_0-4*x3_3-4*x4_3)*x2_1+(6*b_0*d_2+12*b_1*d_1+6*b_2*d_0-6*x3_2-6*x4_2)*x2_2+(b_0*d_0+a-x3_0-x4_0)*x2_4+4*x2_3*(b_0*d_1+b_1*d_0-x3_1-x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, d_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*d_3-3*b_1*d_2-3*b_2*d_1-b_3*d_0+x4_3)*x2_0+(-3*b_0*d_2-6*b_1*d_1-3*b_2*d_0+3*x4_2)*x2_1+(-d_0*x2_3-3*d_1*x2_2)*b_0-3*x2_2*b_1*d_0+3*x4_1*x2_2+x2_3*x4_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*d_5+5*b_1*d_4+10*b_2*d_3+10*b_3*d_2+5*b_4*d_1+b_5*d_0-x3_5-x4_5)*x2_0+(5*b_0*d_4+20*b_1*d_3+30*b_2*d_2+20*b_3*d_1+5*b_4*d_0-5*x3_4-5*x4_4)*x2_1+(10*b_0*d_3+30*b_1*d_2+30*b_2*d_1+10*b_3*d_0-10*x3_3-10*x4_3)*x2_2+(d_0*x2_5+5*d_1*x2_4+10*d_2*x2_3)*b_0+(5*b_1*x2_4+10*b_2*x2_3)*d_0+(20*b_1*d_1-10*x3_2-10*x4_2)*x2_3+(a-x3_0-x4_0)*x2_5-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, d_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*d_4-4*b_1*d_3-6*b_2*d_2-4*b_3*d_1-b_4*d_0+x4_4)*x2_0+(-4*b_0*d_3-12*b_1*d_2-12*b_2*d_1-4*b_3*d_0+4*x4_3)*x2_1+(-d_0*x2_4-4*d_1*x2_3-6*d_2*x2_2)*b_0+(-4*b_1*x2_3-6*b_2*x2_2)*d_0+(-12*b_1*d_1+6*x4_2)*x2_2+4*x4_1*x2_3+x4_0*x2_4)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*d_6+6*b_1*d_5+15*b_2*d_4+20*b_3*d_3+15*b_4*d_2+6*b_5*d_1+b_6*d_0-x3_6-x4_6)*x2_0+(6*b_0*d_5+30*b_1*d_4+60*b_2*d_3+60*b_3*d_2+30*b_4*d_1+6*b_5*d_0-6*x3_5-6*x4_5)*x2_1+(15*b_0*d_4+60*b_1*d_3+90*b_2*d_2+60*b_3*d_1+15*b_4*d_0-15*x3_4-15*x4_4)*x2_2+(d_0*x2_6+6*d_1*x2_5+15*d_2*x2_4+20*d_3*x2_3)*b_0+(6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3)*d_0+(60*b_1*d_2+60*b_2*d_1-20*x3_3-20*x4_3)*x2_3+30*b_1*d_1*x2_4+(-15*x3_2-15*x4_2)*x2_4+(a-x3_0-x4_0)*x2_6-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, d_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*d_5-5*b_1*d_4-10*b_2*d_3-10*b_3*d_2-5*b_4*d_1-b_5*d_0+x4_5)*x2_0+(-5*b_0*d_4-20*b_1*d_3-30*b_2*d_2-20*b_3*d_1-5*b_4*d_0+5*x4_4)*x2_1+(-d_0*x2_5-5*d_1*x2_4-10*d_2*x2_3-10*d_3*x2_2)*b_0+(-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2)*d_0+(-30*b_1*d_2-30*b_2*d_1+10*x4_3)*x2_2-20*b_1*d_1*x2_3+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*d_7+7*b_1*d_6+21*b_2*d_5+35*b_3*d_4+35*b_4*d_3+21*b_5*d_2+7*b_6*d_1+b_7*d_0-x3_7-x4_7)*x2_0+(7*b_0*d_6+42*b_1*d_5+105*b_2*d_4+140*b_3*d_3+105*b_4*d_2+42*b_5*d_1+7*b_6*d_0-7*x3_6-7*x4_6)*x2_1+(21*b_0*d_5+105*b_1*d_4+210*b_2*d_3+210*b_3*d_2+105*b_4*d_1+21*b_5*d_0-21*x3_5-21*x4_5)*x2_2+(d_0*x2_7+7*d_1*x2_6+21*d_2*x2_5+35*d_3*x2_4+35*d_4*x2_3)*b_0+(7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3)*d_0+(140*b_1*d_3+210*b_2*d_2+140*b_3*d_1-35*x3_4-35*x4_4)*x2_3+(42*d_1*x2_5+105*d_2*x2_4)*b_1+105*b_2*d_1*x2_4+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5+(a-x3_0-x4_0)*x2_7-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, d_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*d_6-6*b_1*d_5-15*b_2*d_4-20*b_3*d_3-15*b_4*d_2-6*b_5*d_1-b_6*d_0+x4_6)*x2_0+(-6*b_0*d_5-30*b_1*d_4-60*b_2*d_3-60*b_3*d_2-30*b_4*d_1-6*b_5*d_0+6*x4_5)*x2_1+(-d_0*x2_6-6*d_1*x2_5-15*d_2*x2_4-20*d_3*x2_3-15*d_4*x2_2)*b_0+(-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2)*d_0+(-60*b_1*d_3-90*b_2*d_2-60*b_3*d_1+15*x4_4)*x2_2+(-30*d_1*x2_4-60*d_2*x2_3)*b_1-60*b_2*d_1*x2_3+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, -d_1+y_faux2_1, -d_2+y_faux2_2, -d_3+y_faux2_3, -d_4+y_faux2_4, -d_5+y_faux2_5, -d_6+y_faux2_6, -d_7+y_faux2_7, y_faux3_0-x3_7]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = d_0, y_faux2_1 = d_1, y_faux2_2 = d_2, y_faux2_3 = d_3, y_faux2_4 = d_4, y_faux2_5 = d_5, y_faux2_6 = d_6, y_faux2_7 = d_7, y_faux2_8 = d_8, y_faux2_9 = d_9, y_faux2_10 = d_10, y_faux2_11 = d_11, y_faux2_12 = d_12, y_faux2_13 = d_13, y_faux2_14 = d_14, y_faux3_0 = x3_7]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability without tr. basis:  525956485400000000000000
Random sample for the outputs and inputs is generated from  [a = .6221390219e24, k3 = .4113165838e24, k4 = .1221759843e24, k5 = .2190454458e24, k6 = .3880708201e24, k7 = .2252418988e24, b_0 = .8825554807e23, d_0 = .6388947490e24, x1_0 = .6538434290e24, x2_0 = .2479102989e24, x3_0 = .2591609486e23, x4_0 = .1240709231e24, x5_0 = .4819857225e24]
The polynomial system widehat{E^t} contains  83 equations in  68  variables
            "new_logs/Tumor/transcendence_161_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, d, x4(0)]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b, d}
Algebraically independent parameters among derivatives: {x4(0)}
	Adding ODEs: [diff(b(t),t) = 0, diff(d(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t), y_faux2(t) = d(t)]
	New system: [diff(b(t),t) = 0, diff(d(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d(t)*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d(t)*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t), y_faux2(t) = d(t)]

=== Input info ===
State variables:          [b(t), d(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t), y_faux2(t)]
Input variables:          []
Parameters in equations:  [a, k3, k4, k5, k6, k7]
===================

memory used=13808.7MB, alloc=215.8MB, time=126.58
memory used=13924.1MB, alloc=215.8MB, time=127.55
memory used=14025.9MB, alloc=215.8MB, time=128.34
	Adding new y-equations: [y_faux3_0 = x4_0]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, y_faux2_0-d_0, d_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d_0*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d_0+a-x3_0-x4_0)*x2_1-x2_0*(-b_0*d_1-b_1*d_0+x3_1+x4_1))*k5-x1_1*k3+k4*x2_1-k6*x3_1-k6*x4_1+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d_0*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d_2+2*b_1*d_1+b_2*d_0-x3_2-x4_2)*x2_0+(b_0*d_0+a-x3_0-x4_0)*x2_2+2*x2_1*(b_0*d_1+b_1*d_0-x3_1-x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, d_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_0*d_1-b_1*d_0+x4_1)*x2_0-x2_1*(b_0*d_0-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d_3+3*b_1*d_2+3*b_2*d_1+b_3*d_0-x3_3-x4_3)*x2_0+(3*b_0*d_2+6*b_1*d_1+3*b_2*d_0-3*x3_2-3*x4_2)*x2_1+(b_0*d_0+a-x3_0-x4_0)*x2_3+3*x2_2*(b_0*d_1+b_1*d_0-x3_1-x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, d_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*d_2-2*b_1*d_1-b_2*d_0+x4_2)*x2_0+(-2*b_0*d_1-2*b_1*d_0+2*x4_1)*x2_1+x2_2*(-b_0*d_0+x4_0))*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d_4+4*b_1*d_3+6*b_2*d_2+4*b_3*d_1+b_4*d_0-x3_4-x4_4)*x2_0+(4*b_0*d_3+12*b_1*d_2+12*b_2*d_1+4*b_3*d_0-4*x3_3-4*x4_3)*x2_1+(6*b_0*d_2+12*b_1*d_1+6*b_2*d_0-6*x3_2-6*x4_2)*x2_2+(b_0*d_0+a-x3_0-x4_0)*x2_4+4*x2_3*(b_0*d_1+b_1*d_0-x3_1-x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, d_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*d_3-3*b_1*d_2-3*b_2*d_1-b_3*d_0+x4_3)*x2_0+(-3*b_0*d_2-6*b_1*d_1-3*b_2*d_0+3*x4_2)*x2_1+(-d_0*x2_3-3*d_1*x2_2)*b_0-3*x2_2*b_1*d_0+3*x4_1*x2_2+x2_3*x4_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*d_5+5*b_1*d_4+10*b_2*d_3+10*b_3*d_2+5*b_4*d_1+b_5*d_0-x3_5-x4_5)*x2_0+(5*b_0*d_4+20*b_1*d_3+30*b_2*d_2+20*b_3*d_1+5*b_4*d_0-5*x3_4-5*x4_4)*x2_1+(10*b_0*d_3+30*b_1*d_2+30*b_2*d_1+10*b_3*d_0-10*x3_3-10*x4_3)*x2_2+(d_0*x2_5+5*d_1*x2_4+10*d_2*x2_3)*b_0+(5*b_1*x2_4+10*b_2*x2_3)*d_0+(20*b_1*d_1-10*x3_2-10*x4_2)*x2_3+(a-x3_0-x4_0)*x2_5-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, d_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*d_4-4*b_1*d_3-6*b_2*d_2-4*b_3*d_1-b_4*d_0+x4_4)*x2_0+(-4*b_0*d_3-12*b_1*d_2-12*b_2*d_1-4*b_3*d_0+4*x4_3)*x2_1+(-d_0*x2_4-4*d_1*x2_3-6*d_2*x2_2)*b_0+(-4*b_1*x2_3-6*b_2*x2_2)*d_0+(-12*b_1*d_1+6*x4_2)*x2_2+4*x4_1*x2_3+x4_0*x2_4)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*d_6+6*b_1*d_5+15*b_2*d_4+20*b_3*d_3+15*b_4*d_2+6*b_5*d_1+b_6*d_0-x3_6-x4_6)*x2_0+(6*b_0*d_5+30*b_1*d_4+60*b_2*d_3+60*b_3*d_2+30*b_4*d_1+6*b_5*d_0-6*x3_5-6*x4_5)*x2_1+(15*b_0*d_4+60*b_1*d_3+90*b_2*d_2+60*b_3*d_1+15*b_4*d_0-15*x3_4-15*x4_4)*x2_2+(d_0*x2_6+6*d_1*x2_5+15*d_2*x2_4+20*d_3*x2_3)*b_0+(6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3)*d_0+(60*b_1*d_2+60*b_2*d_1-20*x3_3-20*x4_3)*x2_3+30*b_1*d_1*x2_4+(-15*x3_2-15*x4_2)*x2_4+(a-x3_0-x4_0)*x2_6-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, d_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*d_5-5*b_1*d_4-10*b_2*d_3-10*b_3*d_2-5*b_4*d_1-b_5*d_0+x4_5)*x2_0+(-5*b_0*d_4-20*b_1*d_3-30*b_2*d_2-20*b_3*d_1-5*b_4*d_0+5*x4_4)*x2_1+(-d_0*x2_5-5*d_1*x2_4-10*d_2*x2_3-10*d_3*x2_2)*b_0+(-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2)*d_0+(-30*b_1*d_2-30*b_2*d_1+10*x4_3)*x2_2-20*b_1*d_1*x2_3+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*d_7+7*b_1*d_6+21*b_2*d_5+35*b_3*d_4+35*b_4*d_3+21*b_5*d_2+7*b_6*d_1+b_7*d_0-x3_7-x4_7)*x2_0+(7*b_0*d_6+42*b_1*d_5+105*b_2*d_4+140*b_3*d_3+105*b_4*d_2+42*b_5*d_1+7*b_6*d_0-7*x3_6-7*x4_6)*x2_1+(21*b_0*d_5+105*b_1*d_4+210*b_2*d_3+210*b_3*d_2+105*b_4*d_1+21*b_5*d_0-21*x3_5-21*x4_5)*x2_2+(d_0*x2_7+7*d_1*x2_6+21*d_2*x2_5+35*d_3*x2_4+35*d_4*x2_3)*b_0+(7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3)*d_0+(140*b_1*d_3+210*b_2*d_2+140*b_3*d_1-35*x3_4-35*x4_4)*x2_3+(42*d_1*x2_5+105*d_2*x2_4)*b_1+105*b_2*d_1*x2_4+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5+(a-x3_0-x4_0)*x2_7-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, d_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*d_6-6*b_1*d_5-15*b_2*d_4-20*b_3*d_3-15*b_4*d_2-6*b_5*d_1-b_6*d_0+x4_6)*x2_0+(-6*b_0*d_5-30*b_1*d_4-60*b_2*d_3-60*b_3*d_2-30*b_4*d_1-6*b_5*d_0+6*x4_5)*x2_1+(-d_0*x2_6-6*d_1*x2_5-15*d_2*x2_4-20*d_3*x2_3-15*d_4*x2_2)*b_0+(-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2)*d_0+(-60*b_1*d_3-90*b_2*d_2-60*b_3*d_1+15*x4_4)*x2_2+(-30*d_1*x2_4-60*d_2*x2_3)*b_1-60*b_2*d_1*x2_3+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, -d_1+y_faux2_1, -d_2+y_faux2_2, -d_3+y_faux2_3, -d_4+y_faux2_4, -d_5+y_faux2_5, -d_6+y_faux2_6, -d_7+y_faux2_7, y_faux3_0-x4_0]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = d_0, y_faux2_1 = d_1, y_faux2_2 = d_2, y_faux2_3 = d_3, y_faux2_4 = d_4, y_faux2_5 = d_5, y_faux2_6 = d_6, y_faux2_7 = d_7, y_faux2_8 = d_8, y_faux2_9 = d_9, y_faux2_10 = d_10, y_faux2_11 = d_11, y_faux2_12 = d_12, y_faux2_13 = d_13, y_faux2_14 = d_14, y_faux3_0 = x4_0]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability without tr. basis:  525956485400000000000000
Random sample for the outputs and inputs is generated from  [a = .6080015392e24, k3 = .4969877924e24, k4 = .3230454639e24, k5 = .2320177806e24, k6 = .1589356887e24, k7 = .3012926925e24, b_0 = .3917613935e24, d_0 = .1140786084e24, x1_0 = .3126685261e24, x2_0 = .4673928815e24, x3_0 = .2998747045e24, x4_0 = .4435744373e24, x5_0 = .8652354816e22]
The polynomial system widehat{E^t} contains  83 equations in  68  variables
            "new_logs/Tumor/transcendence_162_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, d, x4_1]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b, d}
Algebraically independent parameters among derivatives: {x4_1}
	Adding ODEs: [diff(b(t),t) = 0, diff(d(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t), y_faux2(t) = d(t)]
	New system: [diff(b(t),t) = 0, diff(d(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d(t)*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d(t)*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t), y_faux2(t) = d(t)]

=== Input info ===
State variables:          [b(t), d(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t), y_faux2(t)]
Input variables:          []
Parameters in equations:  [a, k3, k4, k5, k6, k7]
===================

memory used=14143.4MB, alloc=215.8MB, time=129.78
memory used=14258.3MB, alloc=215.8MB, time=130.73
memory used=14360.2MB, alloc=215.8MB, time=131.50
	Adding new y-equations: [y_faux3_0 = x4_1]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, y_faux2_0-d_0, d_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d_0*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d_0+a-x3_0-x4_0)*x2_1-x2_0*(-b_0*d_1-b_1*d_0+x3_1+x4_1))*k5-x1_1*k3+k4*x2_1-k6*x3_1-k6*x4_1+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d_0*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d_2+2*b_1*d_1+b_2*d_0-x3_2-x4_2)*x2_0+(b_0*d_0+a-x3_0-x4_0)*x2_2+2*x2_1*(b_0*d_1+b_1*d_0-x3_1-x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, d_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_0*d_1-b_1*d_0+x4_1)*x2_0-x2_1*(b_0*d_0-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d_3+3*b_1*d_2+3*b_2*d_1+b_3*d_0-x3_3-x4_3)*x2_0+(3*b_0*d_2+6*b_1*d_1+3*b_2*d_0-3*x3_2-3*x4_2)*x2_1+(b_0*d_0+a-x3_0-x4_0)*x2_3+3*x2_2*(b_0*d_1+b_1*d_0-x3_1-x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, d_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*d_2-2*b_1*d_1-b_2*d_0+x4_2)*x2_0+(-2*b_0*d_1-2*b_1*d_0+2*x4_1)*x2_1+x2_2*(-b_0*d_0+x4_0))*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d_4+4*b_1*d_3+6*b_2*d_2+4*b_3*d_1+b_4*d_0-x3_4-x4_4)*x2_0+(4*b_0*d_3+12*b_1*d_2+12*b_2*d_1+4*b_3*d_0-4*x3_3-4*x4_3)*x2_1+(6*b_0*d_2+12*b_1*d_1+6*b_2*d_0-6*x3_2-6*x4_2)*x2_2+(b_0*d_0+a-x3_0-x4_0)*x2_4+4*x2_3*(b_0*d_1+b_1*d_0-x3_1-x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, d_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*d_3-3*b_1*d_2-3*b_2*d_1-b_3*d_0+x4_3)*x2_0+(-3*b_0*d_2-6*b_1*d_1-3*b_2*d_0+3*x4_2)*x2_1+(-d_0*x2_3-3*d_1*x2_2)*b_0-3*x2_2*b_1*d_0+3*x4_1*x2_2+x2_3*x4_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*d_5+5*b_1*d_4+10*b_2*d_3+10*b_3*d_2+5*b_4*d_1+b_5*d_0-x3_5-x4_5)*x2_0+(5*b_0*d_4+20*b_1*d_3+30*b_2*d_2+20*b_3*d_1+5*b_4*d_0-5*x3_4-5*x4_4)*x2_1+(10*b_0*d_3+30*b_1*d_2+30*b_2*d_1+10*b_3*d_0-10*x3_3-10*x4_3)*x2_2+(d_0*x2_5+5*d_1*x2_4+10*d_2*x2_3)*b_0+(5*b_1*x2_4+10*b_2*x2_3)*d_0+(20*b_1*d_1-10*x3_2-10*x4_2)*x2_3+(a-x3_0-x4_0)*x2_5-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, d_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*d_4-4*b_1*d_3-6*b_2*d_2-4*b_3*d_1-b_4*d_0+x4_4)*x2_0+(-4*b_0*d_3-12*b_1*d_2-12*b_2*d_1-4*b_3*d_0+4*x4_3)*x2_1+(-d_0*x2_4-4*d_1*x2_3-6*d_2*x2_2)*b_0+(-4*b_1*x2_3-6*b_2*x2_2)*d_0+(-12*b_1*d_1+6*x4_2)*x2_2+4*x4_1*x2_3+x4_0*x2_4)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*d_6+6*b_1*d_5+15*b_2*d_4+20*b_3*d_3+15*b_4*d_2+6*b_5*d_1+b_6*d_0-x3_6-x4_6)*x2_0+(6*b_0*d_5+30*b_1*d_4+60*b_2*d_3+60*b_3*d_2+30*b_4*d_1+6*b_5*d_0-6*x3_5-6*x4_5)*x2_1+(15*b_0*d_4+60*b_1*d_3+90*b_2*d_2+60*b_3*d_1+15*b_4*d_0-15*x3_4-15*x4_4)*x2_2+(d_0*x2_6+6*d_1*x2_5+15*d_2*x2_4+20*d_3*x2_3)*b_0+(6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3)*d_0+(60*b_1*d_2+60*b_2*d_1-20*x3_3-20*x4_3)*x2_3+30*b_1*d_1*x2_4+(-15*x3_2-15*x4_2)*x2_4+(a-x3_0-x4_0)*x2_6-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, d_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*d_5-5*b_1*d_4-10*b_2*d_3-10*b_3*d_2-5*b_4*d_1-b_5*d_0+x4_5)*x2_0+(-5*b_0*d_4-20*b_1*d_3-30*b_2*d_2-20*b_3*d_1-5*b_4*d_0+5*x4_4)*x2_1+(-d_0*x2_5-5*d_1*x2_4-10*d_2*x2_3-10*d_3*x2_2)*b_0+(-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2)*d_0+(-30*b_1*d_2-30*b_2*d_1+10*x4_3)*x2_2-20*b_1*d_1*x2_3+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*d_7+7*b_1*d_6+21*b_2*d_5+35*b_3*d_4+35*b_4*d_3+21*b_5*d_2+7*b_6*d_1+b_7*d_0-x3_7-x4_7)*x2_0+(7*b_0*d_6+42*b_1*d_5+105*b_2*d_4+140*b_3*d_3+105*b_4*d_2+42*b_5*d_1+7*b_6*d_0-7*x3_6-7*x4_6)*x2_1+(21*b_0*d_5+105*b_1*d_4+210*b_2*d_3+210*b_3*d_2+105*b_4*d_1+21*b_5*d_0-21*x3_5-21*x4_5)*x2_2+(d_0*x2_7+7*d_1*x2_6+21*d_2*x2_5+35*d_3*x2_4+35*d_4*x2_3)*b_0+(7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3)*d_0+(140*b_1*d_3+210*b_2*d_2+140*b_3*d_1-35*x3_4-35*x4_4)*x2_3+(42*d_1*x2_5+105*d_2*x2_4)*b_1+105*b_2*d_1*x2_4+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5+(a-x3_0-x4_0)*x2_7-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, d_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*d_6-6*b_1*d_5-15*b_2*d_4-20*b_3*d_3-15*b_4*d_2-6*b_5*d_1-b_6*d_0+x4_6)*x2_0+(-6*b_0*d_5-30*b_1*d_4-60*b_2*d_3-60*b_3*d_2-30*b_4*d_1-6*b_5*d_0+6*x4_5)*x2_1+(-d_0*x2_6-6*d_1*x2_5-15*d_2*x2_4-20*d_3*x2_3-15*d_4*x2_2)*b_0+(-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2)*d_0+(-60*b_1*d_3-90*b_2*d_2-60*b_3*d_1+15*x4_4)*x2_2+(-30*d_1*x2_4-60*d_2*x2_3)*b_1-60*b_2*d_1*x2_3+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, -d_1+y_faux2_1, -d_2+y_faux2_2, -d_3+y_faux2_3, -d_4+y_faux2_4, -d_5+y_faux2_5, -d_6+y_faux2_6, -d_7+y_faux2_7, y_faux3_0-x4_1]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = d_0, y_faux2_1 = d_1, y_faux2_2 = d_2, y_faux2_3 = d_3, y_faux2_4 = d_4, y_faux2_5 = d_5, y_faux2_6 = d_6, y_faux2_7 = d_7, y_faux2_8 = d_8, y_faux2_9 = d_9, y_faux2_10 = d_10, y_faux2_11 = d_11, y_faux2_12 = d_12, y_faux2_13 = d_13, y_faux2_14 = d_14, y_faux3_0 = x4_1]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability without tr. basis:  525956485400000000000000
Random sample for the outputs and inputs is generated from  [a = .2725403140e24, k3 = .1288670055e24, k4 = .1695629097e24, k5 = .3434733975e24, k6 = .4265191877e24, k7 = .3389724765e24, b_0 = .1036683504e24, d_0 = .6920540855e24, x1_0 = .3501468007e24, x2_0 = .2634522914e24, x3_0 = .5441182049e24, x4_0 = .6079273255e23, x5_0 = .4779868590e24]
The polynomial system widehat{E^t} contains  83 equations in  68  variables
            "new_logs/Tumor/transcendence_163_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, d, x4_2]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b, d}
Algebraically independent parameters among derivatives: {x4_2}
	Adding ODEs: [diff(b(t),t) = 0, diff(d(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t), y_faux2(t) = d(t)]
	New system: [diff(b(t),t) = 0, diff(d(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d(t)*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d(t)*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t), y_faux2(t) = d(t)]

=== Input info ===
State variables:          [b(t), d(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t), y_faux2(t)]
Input variables:          []
Parameters in equations:  [a, k3, k4, k5, k6, k7]
===================

memory used=14480.6MB, alloc=215.8MB, time=132.92
memory used=14593.9MB, alloc=215.8MB, time=133.83
memory used=14695.7MB, alloc=215.8MB, time=134.61
	Adding new y-equations: [y_faux3_0 = x4_2]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, y_faux2_0-d_0, d_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d_0*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d_0+a-x3_0-x4_0)*x2_1-x2_0*(-b_0*d_1-b_1*d_0+x3_1+x4_1))*k5-x1_1*k3+k4*x2_1-k6*x3_1-k6*x4_1+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d_0*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d_2+2*b_1*d_1+b_2*d_0-x3_2-x4_2)*x2_0+(b_0*d_0+a-x3_0-x4_0)*x2_2+2*x2_1*(b_0*d_1+b_1*d_0-x3_1-x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, d_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_0*d_1-b_1*d_0+x4_1)*x2_0-x2_1*(b_0*d_0-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d_3+3*b_1*d_2+3*b_2*d_1+b_3*d_0-x3_3-x4_3)*x2_0+(3*b_0*d_2+6*b_1*d_1+3*b_2*d_0-3*x3_2-3*x4_2)*x2_1+(b_0*d_0+a-x3_0-x4_0)*x2_3+3*x2_2*(b_0*d_1+b_1*d_0-x3_1-x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, d_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*d_2-2*b_1*d_1-b_2*d_0+x4_2)*x2_0+(-2*b_0*d_1-2*b_1*d_0+2*x4_1)*x2_1+x2_2*(-b_0*d_0+x4_0))*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d_4+4*b_1*d_3+6*b_2*d_2+4*b_3*d_1+b_4*d_0-x3_4-x4_4)*x2_0+(4*b_0*d_3+12*b_1*d_2+12*b_2*d_1+4*b_3*d_0-4*x3_3-4*x4_3)*x2_1+(6*b_0*d_2+12*b_1*d_1+6*b_2*d_0-6*x3_2-6*x4_2)*x2_2+(b_0*d_0+a-x3_0-x4_0)*x2_4+4*x2_3*(b_0*d_1+b_1*d_0-x3_1-x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, d_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*d_3-3*b_1*d_2-3*b_2*d_1-b_3*d_0+x4_3)*x2_0+(-3*b_0*d_2-6*b_1*d_1-3*b_2*d_0+3*x4_2)*x2_1+(-d_0*x2_3-3*d_1*x2_2)*b_0-3*x2_2*b_1*d_0+3*x4_1*x2_2+x2_3*x4_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*d_5+5*b_1*d_4+10*b_2*d_3+10*b_3*d_2+5*b_4*d_1+b_5*d_0-x3_5-x4_5)*x2_0+(5*b_0*d_4+20*b_1*d_3+30*b_2*d_2+20*b_3*d_1+5*b_4*d_0-5*x3_4-5*x4_4)*x2_1+(10*b_0*d_3+30*b_1*d_2+30*b_2*d_1+10*b_3*d_0-10*x3_3-10*x4_3)*x2_2+(d_0*x2_5+5*d_1*x2_4+10*d_2*x2_3)*b_0+(5*b_1*x2_4+10*b_2*x2_3)*d_0+(20*b_1*d_1-10*x3_2-10*x4_2)*x2_3+(a-x3_0-x4_0)*x2_5-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, d_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*d_4-4*b_1*d_3-6*b_2*d_2-4*b_3*d_1-b_4*d_0+x4_4)*x2_0+(-4*b_0*d_3-12*b_1*d_2-12*b_2*d_1-4*b_3*d_0+4*x4_3)*x2_1+(-d_0*x2_4-4*d_1*x2_3-6*d_2*x2_2)*b_0+(-4*b_1*x2_3-6*b_2*x2_2)*d_0+(-12*b_1*d_1+6*x4_2)*x2_2+4*x4_1*x2_3+x4_0*x2_4)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*d_6+6*b_1*d_5+15*b_2*d_4+20*b_3*d_3+15*b_4*d_2+6*b_5*d_1+b_6*d_0-x3_6-x4_6)*x2_0+(6*b_0*d_5+30*b_1*d_4+60*b_2*d_3+60*b_3*d_2+30*b_4*d_1+6*b_5*d_0-6*x3_5-6*x4_5)*x2_1+(15*b_0*d_4+60*b_1*d_3+90*b_2*d_2+60*b_3*d_1+15*b_4*d_0-15*x3_4-15*x4_4)*x2_2+(d_0*x2_6+6*d_1*x2_5+15*d_2*x2_4+20*d_3*x2_3)*b_0+(6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3)*d_0+(60*b_1*d_2+60*b_2*d_1-20*x3_3-20*x4_3)*x2_3+30*b_1*d_1*x2_4+(-15*x3_2-15*x4_2)*x2_4+(a-x3_0-x4_0)*x2_6-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, d_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*d_5-5*b_1*d_4-10*b_2*d_3-10*b_3*d_2-5*b_4*d_1-b_5*d_0+x4_5)*x2_0+(-5*b_0*d_4-20*b_1*d_3-30*b_2*d_2-20*b_3*d_1-5*b_4*d_0+5*x4_4)*x2_1+(-d_0*x2_5-5*d_1*x2_4-10*d_2*x2_3-10*d_3*x2_2)*b_0+(-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2)*d_0+(-30*b_1*d_2-30*b_2*d_1+10*x4_3)*x2_2-20*b_1*d_1*x2_3+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*d_7+7*b_1*d_6+21*b_2*d_5+35*b_3*d_4+35*b_4*d_3+21*b_5*d_2+7*b_6*d_1+b_7*d_0-x3_7-x4_7)*x2_0+(7*b_0*d_6+42*b_1*d_5+105*b_2*d_4+140*b_3*d_3+105*b_4*d_2+42*b_5*d_1+7*b_6*d_0-7*x3_6-7*x4_6)*x2_1+(21*b_0*d_5+105*b_1*d_4+210*b_2*d_3+210*b_3*d_2+105*b_4*d_1+21*b_5*d_0-21*x3_5-21*x4_5)*x2_2+(d_0*x2_7+7*d_1*x2_6+21*d_2*x2_5+35*d_3*x2_4+35*d_4*x2_3)*b_0+(7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3)*d_0+(140*b_1*d_3+210*b_2*d_2+140*b_3*d_1-35*x3_4-35*x4_4)*x2_3+(42*d_1*x2_5+105*d_2*x2_4)*b_1+105*b_2*d_1*x2_4+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5+(a-x3_0-x4_0)*x2_7-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, d_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*d_6-6*b_1*d_5-15*b_2*d_4-20*b_3*d_3-15*b_4*d_2-6*b_5*d_1-b_6*d_0+x4_6)*x2_0+(-6*b_0*d_5-30*b_1*d_4-60*b_2*d_3-60*b_3*d_2-30*b_4*d_1-6*b_5*d_0+6*x4_5)*x2_1+(-d_0*x2_6-6*d_1*x2_5-15*d_2*x2_4-20*d_3*x2_3-15*d_4*x2_2)*b_0+(-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2)*d_0+(-60*b_1*d_3-90*b_2*d_2-60*b_3*d_1+15*x4_4)*x2_2+(-30*d_1*x2_4-60*d_2*x2_3)*b_1-60*b_2*d_1*x2_3+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, -d_1+y_faux2_1, -d_2+y_faux2_2, -d_3+y_faux2_3, -d_4+y_faux2_4, -d_5+y_faux2_5, -d_6+y_faux2_6, -d_7+y_faux2_7, y_faux3_0-x4_2]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = d_0, y_faux2_1 = d_1, y_faux2_2 = d_2, y_faux2_3 = d_3, y_faux2_4 = d_4, y_faux2_5 = d_5, y_faux2_6 = d_6, y_faux2_7 = d_7, y_faux2_8 = d_8, y_faux2_9 = d_9, y_faux2_10 = d_10, y_faux2_11 = d_11, y_faux2_12 = d_12, y_faux2_13 = d_13, y_faux2_14 = d_14, y_faux3_0 = x4_2]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability without tr. basis:  525956485400000000000000
Random sample for the outputs and inputs is generated from  [a = .4712107033e24, k3 = .4169685412e24, k4 = .3461846219e24, k5 = .7180238569e23, k6 = .6509303852e24, k7 = .6037107448e24, b_0 = .2492030143e24, d_0 = .1796901748e24, x1_0 = .5224283939e24, x2_0 = .1510130543e24, x3_0 = .4319789145e24, x4_0 = .2404555778e24, x5_0 = .5418031936e24]
The polynomial system widehat{E^t} contains  83 equations in  68  variables
            "new_logs/Tumor/transcendence_164_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, d, x4_3]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b, d}
Algebraically independent parameters among derivatives: {x4_3}
	Adding ODEs: [diff(b(t),t) = 0, diff(d(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t), y_faux2(t) = d(t)]
	New system: [diff(b(t),t) = 0, diff(d(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d(t)*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d(t)*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t), y_faux2(t) = d(t)]

=== Input info ===
State variables:          [b(t), d(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t), y_faux2(t)]
Input variables:          []
Parameters in equations:  [a, k3, k4, k5, k6, k7]
===================

memory used=14818.0MB, alloc=215.8MB, time=136.09
memory used=14929.9MB, alloc=215.8MB, time=137.00
memory used=15031.6MB, alloc=215.8MB, time=137.78
	Adding new y-equations: [y_faux3_0 = x4_3]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, y_faux2_0-d_0, d_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d_0*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d_0+a-x3_0-x4_0)*x2_1-x2_0*(-b_0*d_1-b_1*d_0+x3_1+x4_1))*k5-x1_1*k3+k4*x2_1-k6*x3_1-k6*x4_1+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d_0*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d_2+2*b_1*d_1+b_2*d_0-x3_2-x4_2)*x2_0+(b_0*d_0+a-x3_0-x4_0)*x2_2+2*x2_1*(b_0*d_1+b_1*d_0-x3_1-x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, d_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_0*d_1-b_1*d_0+x4_1)*x2_0-x2_1*(b_0*d_0-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d_3+3*b_1*d_2+3*b_2*d_1+b_3*d_0-x3_3-x4_3)*x2_0+(3*b_0*d_2+6*b_1*d_1+3*b_2*d_0-3*x3_2-3*x4_2)*x2_1+(b_0*d_0+a-x3_0-x4_0)*x2_3+3*x2_2*(b_0*d_1+b_1*d_0-x3_1-x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, d_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*d_2-2*b_1*d_1-b_2*d_0+x4_2)*x2_0+(-2*b_0*d_1-2*b_1*d_0+2*x4_1)*x2_1+x2_2*(-b_0*d_0+x4_0))*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d_4+4*b_1*d_3+6*b_2*d_2+4*b_3*d_1+b_4*d_0-x3_4-x4_4)*x2_0+(4*b_0*d_3+12*b_1*d_2+12*b_2*d_1+4*b_3*d_0-4*x3_3-4*x4_3)*x2_1+(6*b_0*d_2+12*b_1*d_1+6*b_2*d_0-6*x3_2-6*x4_2)*x2_2+(b_0*d_0+a-x3_0-x4_0)*x2_4+4*x2_3*(b_0*d_1+b_1*d_0-x3_1-x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, d_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*d_3-3*b_1*d_2-3*b_2*d_1-b_3*d_0+x4_3)*x2_0+(-3*b_0*d_2-6*b_1*d_1-3*b_2*d_0+3*x4_2)*x2_1+(-d_0*x2_3-3*d_1*x2_2)*b_0-3*x2_2*b_1*d_0+3*x4_1*x2_2+x2_3*x4_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*d_5+5*b_1*d_4+10*b_2*d_3+10*b_3*d_2+5*b_4*d_1+b_5*d_0-x3_5-x4_5)*x2_0+(5*b_0*d_4+20*b_1*d_3+30*b_2*d_2+20*b_3*d_1+5*b_4*d_0-5*x3_4-5*x4_4)*x2_1+(10*b_0*d_3+30*b_1*d_2+30*b_2*d_1+10*b_3*d_0-10*x3_3-10*x4_3)*x2_2+(d_0*x2_5+5*d_1*x2_4+10*d_2*x2_3)*b_0+(5*b_1*x2_4+10*b_2*x2_3)*d_0+(20*b_1*d_1-10*x3_2-10*x4_2)*x2_3+(a-x3_0-x4_0)*x2_5-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, d_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*d_4-4*b_1*d_3-6*b_2*d_2-4*b_3*d_1-b_4*d_0+x4_4)*x2_0+(-4*b_0*d_3-12*b_1*d_2-12*b_2*d_1-4*b_3*d_0+4*x4_3)*x2_1+(-d_0*x2_4-4*d_1*x2_3-6*d_2*x2_2)*b_0+(-4*b_1*x2_3-6*b_2*x2_2)*d_0+(-12*b_1*d_1+6*x4_2)*x2_2+4*x4_1*x2_3+x4_0*x2_4)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*d_6+6*b_1*d_5+15*b_2*d_4+20*b_3*d_3+15*b_4*d_2+6*b_5*d_1+b_6*d_0-x3_6-x4_6)*x2_0+(6*b_0*d_5+30*b_1*d_4+60*b_2*d_3+60*b_3*d_2+30*b_4*d_1+6*b_5*d_0-6*x3_5-6*x4_5)*x2_1+(15*b_0*d_4+60*b_1*d_3+90*b_2*d_2+60*b_3*d_1+15*b_4*d_0-15*x3_4-15*x4_4)*x2_2+(d_0*x2_6+6*d_1*x2_5+15*d_2*x2_4+20*d_3*x2_3)*b_0+(6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3)*d_0+(60*b_1*d_2+60*b_2*d_1-20*x3_3-20*x4_3)*x2_3+30*b_1*d_1*x2_4+(-15*x3_2-15*x4_2)*x2_4+(a-x3_0-x4_0)*x2_6-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, d_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*d_5-5*b_1*d_4-10*b_2*d_3-10*b_3*d_2-5*b_4*d_1-b_5*d_0+x4_5)*x2_0+(-5*b_0*d_4-20*b_1*d_3-30*b_2*d_2-20*b_3*d_1-5*b_4*d_0+5*x4_4)*x2_1+(-d_0*x2_5-5*d_1*x2_4-10*d_2*x2_3-10*d_3*x2_2)*b_0+(-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2)*d_0+(-30*b_1*d_2-30*b_2*d_1+10*x4_3)*x2_2-20*b_1*d_1*x2_3+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*d_7+7*b_1*d_6+21*b_2*d_5+35*b_3*d_4+35*b_4*d_3+21*b_5*d_2+7*b_6*d_1+b_7*d_0-x3_7-x4_7)*x2_0+(7*b_0*d_6+42*b_1*d_5+105*b_2*d_4+140*b_3*d_3+105*b_4*d_2+42*b_5*d_1+7*b_6*d_0-7*x3_6-7*x4_6)*x2_1+(21*b_0*d_5+105*b_1*d_4+210*b_2*d_3+210*b_3*d_2+105*b_4*d_1+21*b_5*d_0-21*x3_5-21*x4_5)*x2_2+(d_0*x2_7+7*d_1*x2_6+21*d_2*x2_5+35*d_3*x2_4+35*d_4*x2_3)*b_0+(7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3)*d_0+(140*b_1*d_3+210*b_2*d_2+140*b_3*d_1-35*x3_4-35*x4_4)*x2_3+(42*d_1*x2_5+105*d_2*x2_4)*b_1+105*b_2*d_1*x2_4+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5+(a-x3_0-x4_0)*x2_7-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, d_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*d_6-6*b_1*d_5-15*b_2*d_4-20*b_3*d_3-15*b_4*d_2-6*b_5*d_1-b_6*d_0+x4_6)*x2_0+(-6*b_0*d_5-30*b_1*d_4-60*b_2*d_3-60*b_3*d_2-30*b_4*d_1-6*b_5*d_0+6*x4_5)*x2_1+(-d_0*x2_6-6*d_1*x2_5-15*d_2*x2_4-20*d_3*x2_3-15*d_4*x2_2)*b_0+(-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2)*d_0+(-60*b_1*d_3-90*b_2*d_2-60*b_3*d_1+15*x4_4)*x2_2+(-30*d_1*x2_4-60*d_2*x2_3)*b_1-60*b_2*d_1*x2_3+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, -d_1+y_faux2_1, -d_2+y_faux2_2, -d_3+y_faux2_3, -d_4+y_faux2_4, -d_5+y_faux2_5, -d_6+y_faux2_6, -d_7+y_faux2_7, y_faux3_0-x4_3]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = d_0, y_faux2_1 = d_1, y_faux2_2 = d_2, y_faux2_3 = d_3, y_faux2_4 = d_4, y_faux2_5 = d_5, y_faux2_6 = d_6, y_faux2_7 = d_7, y_faux2_8 = d_8, y_faux2_9 = d_9, y_faux2_10 = d_10, y_faux2_11 = d_11, y_faux2_12 = d_12, y_faux2_13 = d_13, y_faux2_14 = d_14, y_faux3_0 = x4_3]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability without tr. basis:  525956485400000000000000
Random sample for the outputs and inputs is generated from  [a = .1670052414e24, k3 = .6045462283e24, k4 = .2624131782e24, k5 = .4416129078e24, k6 = .6423705974e24, k7 = .5634974870e24, b_0 = .3044887835e24, d_0 = .4334911598e24, x1_0 = .2208057207e23, x2_0 = .3025825477e24, x3_0 = .2254148371e24, x4_0 = .2336004265e24, x5_0 = .1335823920e24]
The polynomial system widehat{E^t} contains  83 equations in  68  variables
            "new_logs/Tumor/transcendence_165_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, d, x4_4]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b, d}
Algebraically independent parameters among derivatives: {x4_4}
	Adding ODEs: [diff(b(t),t) = 0, diff(d(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t), y_faux2(t) = d(t)]
	New system: [diff(b(t),t) = 0, diff(d(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d(t)*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d(t)*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t), y_faux2(t) = d(t)]

=== Input info ===
State variables:          [b(t), d(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t), y_faux2(t)]
Input variables:          []
Parameters in equations:  [a, k3, k4, k5, k6, k7]
===================

memory used=15154.7MB, alloc=215.8MB, time=139.28
memory used=15265.9MB, alloc=215.8MB, time=140.21
memory used=15367.3MB, alloc=215.8MB, time=141.00
	Adding new y-equations: [y_faux3_0 = x4_4]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, y_faux2_0-d_0, d_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d_0*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d_0+a-x3_0-x4_0)*x2_1-x2_0*(-b_0*d_1-b_1*d_0+x3_1+x4_1))*k5-x1_1*k3+k4*x2_1-k6*x3_1-k6*x4_1+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d_0*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d_2+2*b_1*d_1+b_2*d_0-x3_2-x4_2)*x2_0+(b_0*d_0+a-x3_0-x4_0)*x2_2+2*x2_1*(b_0*d_1+b_1*d_0-x3_1-x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, d_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_0*d_1-b_1*d_0+x4_1)*x2_0-x2_1*(b_0*d_0-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d_3+3*b_1*d_2+3*b_2*d_1+b_3*d_0-x3_3-x4_3)*x2_0+(3*b_0*d_2+6*b_1*d_1+3*b_2*d_0-3*x3_2-3*x4_2)*x2_1+(b_0*d_0+a-x3_0-x4_0)*x2_3+3*x2_2*(b_0*d_1+b_1*d_0-x3_1-x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, d_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*d_2-2*b_1*d_1-b_2*d_0+x4_2)*x2_0+(-2*b_0*d_1-2*b_1*d_0+2*x4_1)*x2_1+x2_2*(-b_0*d_0+x4_0))*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d_4+4*b_1*d_3+6*b_2*d_2+4*b_3*d_1+b_4*d_0-x3_4-x4_4)*x2_0+(4*b_0*d_3+12*b_1*d_2+12*b_2*d_1+4*b_3*d_0-4*x3_3-4*x4_3)*x2_1+(6*b_0*d_2+12*b_1*d_1+6*b_2*d_0-6*x3_2-6*x4_2)*x2_2+(b_0*d_0+a-x3_0-x4_0)*x2_4+4*x2_3*(b_0*d_1+b_1*d_0-x3_1-x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, d_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*d_3-3*b_1*d_2-3*b_2*d_1-b_3*d_0+x4_3)*x2_0+(-3*b_0*d_2-6*b_1*d_1-3*b_2*d_0+3*x4_2)*x2_1+(-d_0*x2_3-3*d_1*x2_2)*b_0-3*x2_2*b_1*d_0+3*x4_1*x2_2+x2_3*x4_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*d_5+5*b_1*d_4+10*b_2*d_3+10*b_3*d_2+5*b_4*d_1+b_5*d_0-x3_5-x4_5)*x2_0+(5*b_0*d_4+20*b_1*d_3+30*b_2*d_2+20*b_3*d_1+5*b_4*d_0-5*x3_4-5*x4_4)*x2_1+(10*b_0*d_3+30*b_1*d_2+30*b_2*d_1+10*b_3*d_0-10*x3_3-10*x4_3)*x2_2+(d_0*x2_5+5*d_1*x2_4+10*d_2*x2_3)*b_0+(5*b_1*x2_4+10*b_2*x2_3)*d_0+(20*b_1*d_1-10*x3_2-10*x4_2)*x2_3+(a-x3_0-x4_0)*x2_5-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, d_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*d_4-4*b_1*d_3-6*b_2*d_2-4*b_3*d_1-b_4*d_0+x4_4)*x2_0+(-4*b_0*d_3-12*b_1*d_2-12*b_2*d_1-4*b_3*d_0+4*x4_3)*x2_1+(-d_0*x2_4-4*d_1*x2_3-6*d_2*x2_2)*b_0+(-4*b_1*x2_3-6*b_2*x2_2)*d_0+(-12*b_1*d_1+6*x4_2)*x2_2+4*x4_1*x2_3+x4_0*x2_4)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*d_6+6*b_1*d_5+15*b_2*d_4+20*b_3*d_3+15*b_4*d_2+6*b_5*d_1+b_6*d_0-x3_6-x4_6)*x2_0+(6*b_0*d_5+30*b_1*d_4+60*b_2*d_3+60*b_3*d_2+30*b_4*d_1+6*b_5*d_0-6*x3_5-6*x4_5)*x2_1+(15*b_0*d_4+60*b_1*d_3+90*b_2*d_2+60*b_3*d_1+15*b_4*d_0-15*x3_4-15*x4_4)*x2_2+(d_0*x2_6+6*d_1*x2_5+15*d_2*x2_4+20*d_3*x2_3)*b_0+(6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3)*d_0+(60*b_1*d_2+60*b_2*d_1-20*x3_3-20*x4_3)*x2_3+30*b_1*d_1*x2_4+(-15*x3_2-15*x4_2)*x2_4+(a-x3_0-x4_0)*x2_6-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, d_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*d_5-5*b_1*d_4-10*b_2*d_3-10*b_3*d_2-5*b_4*d_1-b_5*d_0+x4_5)*x2_0+(-5*b_0*d_4-20*b_1*d_3-30*b_2*d_2-20*b_3*d_1-5*b_4*d_0+5*x4_4)*x2_1+(-d_0*x2_5-5*d_1*x2_4-10*d_2*x2_3-10*d_3*x2_2)*b_0+(-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2)*d_0+(-30*b_1*d_2-30*b_2*d_1+10*x4_3)*x2_2-20*b_1*d_1*x2_3+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*d_7+7*b_1*d_6+21*b_2*d_5+35*b_3*d_4+35*b_4*d_3+21*b_5*d_2+7*b_6*d_1+b_7*d_0-x3_7-x4_7)*x2_0+(7*b_0*d_6+42*b_1*d_5+105*b_2*d_4+140*b_3*d_3+105*b_4*d_2+42*b_5*d_1+7*b_6*d_0-7*x3_6-7*x4_6)*x2_1+(21*b_0*d_5+105*b_1*d_4+210*b_2*d_3+210*b_3*d_2+105*b_4*d_1+21*b_5*d_0-21*x3_5-21*x4_5)*x2_2+(d_0*x2_7+7*d_1*x2_6+21*d_2*x2_5+35*d_3*x2_4+35*d_4*x2_3)*b_0+(7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3)*d_0+(140*b_1*d_3+210*b_2*d_2+140*b_3*d_1-35*x3_4-35*x4_4)*x2_3+(42*d_1*x2_5+105*d_2*x2_4)*b_1+105*b_2*d_1*x2_4+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5+(a-x3_0-x4_0)*x2_7-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, d_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*d_6-6*b_1*d_5-15*b_2*d_4-20*b_3*d_3-15*b_4*d_2-6*b_5*d_1-b_6*d_0+x4_6)*x2_0+(-6*b_0*d_5-30*b_1*d_4-60*b_2*d_3-60*b_3*d_2-30*b_4*d_1-6*b_5*d_0+6*x4_5)*x2_1+(-d_0*x2_6-6*d_1*x2_5-15*d_2*x2_4-20*d_3*x2_3-15*d_4*x2_2)*b_0+(-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2)*d_0+(-60*b_1*d_3-90*b_2*d_2-60*b_3*d_1+15*x4_4)*x2_2+(-30*d_1*x2_4-60*d_2*x2_3)*b_1-60*b_2*d_1*x2_3+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, -d_1+y_faux2_1, -d_2+y_faux2_2, -d_3+y_faux2_3, -d_4+y_faux2_4, -d_5+y_faux2_5, -d_6+y_faux2_6, -d_7+y_faux2_7, y_faux3_0-x4_4]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = d_0, y_faux2_1 = d_1, y_faux2_2 = d_2, y_faux2_3 = d_3, y_faux2_4 = d_4, y_faux2_5 = d_5, y_faux2_6 = d_6, y_faux2_7 = d_7, y_faux2_8 = d_8, y_faux2_9 = d_9, y_faux2_10 = d_10, y_faux2_11 = d_11, y_faux2_12 = d_12, y_faux2_13 = d_13, y_faux2_14 = d_14, y_faux3_0 = x4_4]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability without tr. basis:  525956485400000000000000
Random sample for the outputs and inputs is generated from  [a = .4809797099e24, k3 = .4639784020e24, k4 = .5127077875e24, k5 = .3259312661e24, k6 = .5625257858e24, k7 = .2010992653e24, b_0 = .6028597583e24, d_0 = .2877345745e24, x1_0 = .1160178563e22, x2_0 = .2648542592e24, x3_0 = .4463762747e23, x4_0 = .1237457018e24, x5_0 = .5431486255e24]
The polynomial system widehat{E^t} contains  83 equations in  68  variables
            "new_logs/Tumor/transcendence_166_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, d, x4_5]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b, d}
Algebraically independent parameters among derivatives: {x4_5}
	Adding ODEs: [diff(b(t),t) = 0, diff(d(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t), y_faux2(t) = d(t)]
	New system: [diff(b(t),t) = 0, diff(d(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d(t)*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d(t)*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t), y_faux2(t) = d(t)]

=== Input info ===
State variables:          [b(t), d(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t), y_faux2(t)]
Input variables:          []
Parameters in equations:  [a, k3, k4, k5, k6, k7]
===================

memory used=15491.5MB, alloc=215.8MB, time=142.44
memory used=15602.0MB, alloc=215.8MB, time=143.31
memory used=15703.9MB, alloc=215.8MB, time=144.09
	Adding new y-equations: [y_faux3_0 = x4_5]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, y_faux2_0-d_0, d_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d_0*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d_0+a-x3_0-x4_0)*x2_1-x2_0*(-b_0*d_1-b_1*d_0+x3_1+x4_1))*k5-x1_1*k3+k4*x2_1-k6*x3_1-k6*x4_1+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d_0*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d_2+2*b_1*d_1+b_2*d_0-x3_2-x4_2)*x2_0+(b_0*d_0+a-x3_0-x4_0)*x2_2+2*x2_1*(b_0*d_1+b_1*d_0-x3_1-x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, d_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_0*d_1-b_1*d_0+x4_1)*x2_0-x2_1*(b_0*d_0-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d_3+3*b_1*d_2+3*b_2*d_1+b_3*d_0-x3_3-x4_3)*x2_0+(3*b_0*d_2+6*b_1*d_1+3*b_2*d_0-3*x3_2-3*x4_2)*x2_1+(b_0*d_0+a-x3_0-x4_0)*x2_3+3*x2_2*(b_0*d_1+b_1*d_0-x3_1-x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, d_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*d_2-2*b_1*d_1-b_2*d_0+x4_2)*x2_0+(-2*b_0*d_1-2*b_1*d_0+2*x4_1)*x2_1+x2_2*(-b_0*d_0+x4_0))*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d_4+4*b_1*d_3+6*b_2*d_2+4*b_3*d_1+b_4*d_0-x3_4-x4_4)*x2_0+(4*b_0*d_3+12*b_1*d_2+12*b_2*d_1+4*b_3*d_0-4*x3_3-4*x4_3)*x2_1+(6*b_0*d_2+12*b_1*d_1+6*b_2*d_0-6*x3_2-6*x4_2)*x2_2+(b_0*d_0+a-x3_0-x4_0)*x2_4+4*x2_3*(b_0*d_1+b_1*d_0-x3_1-x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, d_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*d_3-3*b_1*d_2-3*b_2*d_1-b_3*d_0+x4_3)*x2_0+(-3*b_0*d_2-6*b_1*d_1-3*b_2*d_0+3*x4_2)*x2_1+(-d_0*x2_3-3*d_1*x2_2)*b_0-3*x2_2*b_1*d_0+3*x4_1*x2_2+x2_3*x4_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*d_5+5*b_1*d_4+10*b_2*d_3+10*b_3*d_2+5*b_4*d_1+b_5*d_0-x3_5-x4_5)*x2_0+(5*b_0*d_4+20*b_1*d_3+30*b_2*d_2+20*b_3*d_1+5*b_4*d_0-5*x3_4-5*x4_4)*x2_1+(10*b_0*d_3+30*b_1*d_2+30*b_2*d_1+10*b_3*d_0-10*x3_3-10*x4_3)*x2_2+(d_0*x2_5+5*d_1*x2_4+10*d_2*x2_3)*b_0+(5*b_1*x2_4+10*b_2*x2_3)*d_0+(20*b_1*d_1-10*x3_2-10*x4_2)*x2_3+(a-x3_0-x4_0)*x2_5-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, d_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*d_4-4*b_1*d_3-6*b_2*d_2-4*b_3*d_1-b_4*d_0+x4_4)*x2_0+(-4*b_0*d_3-12*b_1*d_2-12*b_2*d_1-4*b_3*d_0+4*x4_3)*x2_1+(-d_0*x2_4-4*d_1*x2_3-6*d_2*x2_2)*b_0+(-4*b_1*x2_3-6*b_2*x2_2)*d_0+(-12*b_1*d_1+6*x4_2)*x2_2+4*x4_1*x2_3+x4_0*x2_4)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*d_6+6*b_1*d_5+15*b_2*d_4+20*b_3*d_3+15*b_4*d_2+6*b_5*d_1+b_6*d_0-x3_6-x4_6)*x2_0+(6*b_0*d_5+30*b_1*d_4+60*b_2*d_3+60*b_3*d_2+30*b_4*d_1+6*b_5*d_0-6*x3_5-6*x4_5)*x2_1+(15*b_0*d_4+60*b_1*d_3+90*b_2*d_2+60*b_3*d_1+15*b_4*d_0-15*x3_4-15*x4_4)*x2_2+(d_0*x2_6+6*d_1*x2_5+15*d_2*x2_4+20*d_3*x2_3)*b_0+(6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3)*d_0+(60*b_1*d_2+60*b_2*d_1-20*x3_3-20*x4_3)*x2_3+30*b_1*d_1*x2_4+(-15*x3_2-15*x4_2)*x2_4+(a-x3_0-x4_0)*x2_6-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, d_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*d_5-5*b_1*d_4-10*b_2*d_3-10*b_3*d_2-5*b_4*d_1-b_5*d_0+x4_5)*x2_0+(-5*b_0*d_4-20*b_1*d_3-30*b_2*d_2-20*b_3*d_1-5*b_4*d_0+5*x4_4)*x2_1+(-d_0*x2_5-5*d_1*x2_4-10*d_2*x2_3-10*d_3*x2_2)*b_0+(-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2)*d_0+(-30*b_1*d_2-30*b_2*d_1+10*x4_3)*x2_2-20*b_1*d_1*x2_3+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*d_7+7*b_1*d_6+21*b_2*d_5+35*b_3*d_4+35*b_4*d_3+21*b_5*d_2+7*b_6*d_1+b_7*d_0-x3_7-x4_7)*x2_0+(7*b_0*d_6+42*b_1*d_5+105*b_2*d_4+140*b_3*d_3+105*b_4*d_2+42*b_5*d_1+7*b_6*d_0-7*x3_6-7*x4_6)*x2_1+(21*b_0*d_5+105*b_1*d_4+210*b_2*d_3+210*b_3*d_2+105*b_4*d_1+21*b_5*d_0-21*x3_5-21*x4_5)*x2_2+(d_0*x2_7+7*d_1*x2_6+21*d_2*x2_5+35*d_3*x2_4+35*d_4*x2_3)*b_0+(7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3)*d_0+(140*b_1*d_3+210*b_2*d_2+140*b_3*d_1-35*x3_4-35*x4_4)*x2_3+(42*d_1*x2_5+105*d_2*x2_4)*b_1+105*b_2*d_1*x2_4+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5+(a-x3_0-x4_0)*x2_7-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, d_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*d_6-6*b_1*d_5-15*b_2*d_4-20*b_3*d_3-15*b_4*d_2-6*b_5*d_1-b_6*d_0+x4_6)*x2_0+(-6*b_0*d_5-30*b_1*d_4-60*b_2*d_3-60*b_3*d_2-30*b_4*d_1-6*b_5*d_0+6*x4_5)*x2_1+(-d_0*x2_6-6*d_1*x2_5-15*d_2*x2_4-20*d_3*x2_3-15*d_4*x2_2)*b_0+(-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2)*d_0+(-60*b_1*d_3-90*b_2*d_2-60*b_3*d_1+15*x4_4)*x2_2+(-30*d_1*x2_4-60*d_2*x2_3)*b_1-60*b_2*d_1*x2_3+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, -d_1+y_faux2_1, -d_2+y_faux2_2, -d_3+y_faux2_3, -d_4+y_faux2_4, -d_5+y_faux2_5, -d_6+y_faux2_6, -d_7+y_faux2_7, y_faux3_0-x4_5]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = d_0, y_faux2_1 = d_1, y_faux2_2 = d_2, y_faux2_3 = d_3, y_faux2_4 = d_4, y_faux2_5 = d_5, y_faux2_6 = d_6, y_faux2_7 = d_7, y_faux2_8 = d_8, y_faux2_9 = d_9, y_faux2_10 = d_10, y_faux2_11 = d_11, y_faux2_12 = d_12, y_faux2_13 = d_13, y_faux2_14 = d_14, y_faux3_0 = x4_5]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability without tr. basis:  525956485400000000000000
Random sample for the outputs and inputs is generated from  [a = .4907923352e24, k3 = .3379139329e24, k4 = .2212579918e24, k5 = .4557339104e24, k6 = .1090255166e24, k7 = .6854001036e24, b_0 = .1409954567e24, d_0 = .1281929122e24, x1_0 = .1863050070e24, x2_0 = .3836156494e24, x3_0 = .5990873665e24, x4_0 = .7126881089e23, x5_0 = .5321147940e24]
The polynomial system widehat{E^t} contains  83 equations in  68  variables
            "new_logs/Tumor/transcendence_167_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, d, x4_6]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b, d}
Algebraically independent parameters among derivatives: {x4_6}
	Adding ODEs: [diff(b(t),t) = 0, diff(d(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t), y_faux2(t) = d(t)]
	New system: [diff(b(t),t) = 0, diff(d(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d(t)*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d(t)*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t), y_faux2(t) = d(t)]

=== Input info ===
State variables:          [b(t), d(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t), y_faux2(t)]
Input variables:          []
Parameters in equations:  [a, k3, k4, k5, k6, k7]
===================

memory used=15828.7MB, alloc=215.8MB, time=145.57
memory used=15939.3MB, alloc=215.8MB, time=146.50
memory used=16040.0MB, alloc=215.8MB, time=147.30
	Adding new y-equations: [y_faux3_0 = x4_6]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, y_faux2_0-d_0, d_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d_0*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d_0+a-x3_0-x4_0)*x2_1-x2_0*(-b_0*d_1-b_1*d_0+x3_1+x4_1))*k5-x1_1*k3+k4*x2_1-k6*x3_1-k6*x4_1+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d_0*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d_2+2*b_1*d_1+b_2*d_0-x3_2-x4_2)*x2_0+(b_0*d_0+a-x3_0-x4_0)*x2_2+2*x2_1*(b_0*d_1+b_1*d_0-x3_1-x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, d_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_0*d_1-b_1*d_0+x4_1)*x2_0-x2_1*(b_0*d_0-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d_3+3*b_1*d_2+3*b_2*d_1+b_3*d_0-x3_3-x4_3)*x2_0+(3*b_0*d_2+6*b_1*d_1+3*b_2*d_0-3*x3_2-3*x4_2)*x2_1+(b_0*d_0+a-x3_0-x4_0)*x2_3+3*x2_2*(b_0*d_1+b_1*d_0-x3_1-x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, d_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*d_2-2*b_1*d_1-b_2*d_0+x4_2)*x2_0+(-2*b_0*d_1-2*b_1*d_0+2*x4_1)*x2_1+x2_2*(-b_0*d_0+x4_0))*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d_4+4*b_1*d_3+6*b_2*d_2+4*b_3*d_1+b_4*d_0-x3_4-x4_4)*x2_0+(4*b_0*d_3+12*b_1*d_2+12*b_2*d_1+4*b_3*d_0-4*x3_3-4*x4_3)*x2_1+(6*b_0*d_2+12*b_1*d_1+6*b_2*d_0-6*x3_2-6*x4_2)*x2_2+(b_0*d_0+a-x3_0-x4_0)*x2_4+4*x2_3*(b_0*d_1+b_1*d_0-x3_1-x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, d_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*d_3-3*b_1*d_2-3*b_2*d_1-b_3*d_0+x4_3)*x2_0+(-3*b_0*d_2-6*b_1*d_1-3*b_2*d_0+3*x4_2)*x2_1+(-d_0*x2_3-3*d_1*x2_2)*b_0-3*x2_2*b_1*d_0+3*x4_1*x2_2+x2_3*x4_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*d_5+5*b_1*d_4+10*b_2*d_3+10*b_3*d_2+5*b_4*d_1+b_5*d_0-x3_5-x4_5)*x2_0+(5*b_0*d_4+20*b_1*d_3+30*b_2*d_2+20*b_3*d_1+5*b_4*d_0-5*x3_4-5*x4_4)*x2_1+(10*b_0*d_3+30*b_1*d_2+30*b_2*d_1+10*b_3*d_0-10*x3_3-10*x4_3)*x2_2+(d_0*x2_5+5*d_1*x2_4+10*d_2*x2_3)*b_0+(5*b_1*x2_4+10*b_2*x2_3)*d_0+(20*b_1*d_1-10*x3_2-10*x4_2)*x2_3+(a-x3_0-x4_0)*x2_5-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, d_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*d_4-4*b_1*d_3-6*b_2*d_2-4*b_3*d_1-b_4*d_0+x4_4)*x2_0+(-4*b_0*d_3-12*b_1*d_2-12*b_2*d_1-4*b_3*d_0+4*x4_3)*x2_1+(-d_0*x2_4-4*d_1*x2_3-6*d_2*x2_2)*b_0+(-4*b_1*x2_3-6*b_2*x2_2)*d_0+(-12*b_1*d_1+6*x4_2)*x2_2+4*x4_1*x2_3+x4_0*x2_4)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*d_6+6*b_1*d_5+15*b_2*d_4+20*b_3*d_3+15*b_4*d_2+6*b_5*d_1+b_6*d_0-x3_6-x4_6)*x2_0+(6*b_0*d_5+30*b_1*d_4+60*b_2*d_3+60*b_3*d_2+30*b_4*d_1+6*b_5*d_0-6*x3_5-6*x4_5)*x2_1+(15*b_0*d_4+60*b_1*d_3+90*b_2*d_2+60*b_3*d_1+15*b_4*d_0-15*x3_4-15*x4_4)*x2_2+(d_0*x2_6+6*d_1*x2_5+15*d_2*x2_4+20*d_3*x2_3)*b_0+(6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3)*d_0+(60*b_1*d_2+60*b_2*d_1-20*x3_3-20*x4_3)*x2_3+30*b_1*d_1*x2_4+(-15*x3_2-15*x4_2)*x2_4+(a-x3_0-x4_0)*x2_6-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, d_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*d_5-5*b_1*d_4-10*b_2*d_3-10*b_3*d_2-5*b_4*d_1-b_5*d_0+x4_5)*x2_0+(-5*b_0*d_4-20*b_1*d_3-30*b_2*d_2-20*b_3*d_1-5*b_4*d_0+5*x4_4)*x2_1+(-d_0*x2_5-5*d_1*x2_4-10*d_2*x2_3-10*d_3*x2_2)*b_0+(-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2)*d_0+(-30*b_1*d_2-30*b_2*d_1+10*x4_3)*x2_2-20*b_1*d_1*x2_3+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*d_7+7*b_1*d_6+21*b_2*d_5+35*b_3*d_4+35*b_4*d_3+21*b_5*d_2+7*b_6*d_1+b_7*d_0-x3_7-x4_7)*x2_0+(7*b_0*d_6+42*b_1*d_5+105*b_2*d_4+140*b_3*d_3+105*b_4*d_2+42*b_5*d_1+7*b_6*d_0-7*x3_6-7*x4_6)*x2_1+(21*b_0*d_5+105*b_1*d_4+210*b_2*d_3+210*b_3*d_2+105*b_4*d_1+21*b_5*d_0-21*x3_5-21*x4_5)*x2_2+(d_0*x2_7+7*d_1*x2_6+21*d_2*x2_5+35*d_3*x2_4+35*d_4*x2_3)*b_0+(7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3)*d_0+(140*b_1*d_3+210*b_2*d_2+140*b_3*d_1-35*x3_4-35*x4_4)*x2_3+(42*d_1*x2_5+105*d_2*x2_4)*b_1+105*b_2*d_1*x2_4+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5+(a-x3_0-x4_0)*x2_7-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, d_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*d_6-6*b_1*d_5-15*b_2*d_4-20*b_3*d_3-15*b_4*d_2-6*b_5*d_1-b_6*d_0+x4_6)*x2_0+(-6*b_0*d_5-30*b_1*d_4-60*b_2*d_3-60*b_3*d_2-30*b_4*d_1-6*b_5*d_0+6*x4_5)*x2_1+(-d_0*x2_6-6*d_1*x2_5-15*d_2*x2_4-20*d_3*x2_3-15*d_4*x2_2)*b_0+(-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2)*d_0+(-60*b_1*d_3-90*b_2*d_2-60*b_3*d_1+15*x4_4)*x2_2+(-30*d_1*x2_4-60*d_2*x2_3)*b_1-60*b_2*d_1*x2_3+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, -d_1+y_faux2_1, -d_2+y_faux2_2, -d_3+y_faux2_3, -d_4+y_faux2_4, -d_5+y_faux2_5, -d_6+y_faux2_6, -d_7+y_faux2_7, y_faux3_0-x4_6]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = d_0, y_faux2_1 = d_1, y_faux2_2 = d_2, y_faux2_3 = d_3, y_faux2_4 = d_4, y_faux2_5 = d_5, y_faux2_6 = d_6, y_faux2_7 = d_7, y_faux2_8 = d_8, y_faux2_9 = d_9, y_faux2_10 = d_10, y_faux2_11 = d_11, y_faux2_12 = d_12, y_faux2_13 = d_13, y_faux2_14 = d_14, y_faux3_0 = x4_6]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability without tr. basis:  525956485400000000000000
Random sample for the outputs and inputs is generated from  [a = .6536075669e24, k3 = .4878029584e24, k4 = .3243667166e24, k5 = .6566690182e24, k6 = .6171210089e24, k7 = .1763528459e24, b_0 = .3275482794e24, d_0 = .2754498699e24, x1_0 = .6657722271e24, x2_0 = .3564771999e24, x3_0 = .3586168304e24, x4_0 = .4888258140e24, x5_0 = .4156316391e24]
The polynomial system widehat{E^t} contains  83 equations in  68  variables
            "new_logs/Tumor/transcendence_168_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, d, x4_7]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b, d}
Algebraically independent parameters among derivatives: {x4_7}
	Adding ODEs: [diff(b(t),t) = 0, diff(d(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t), y_faux2(t) = d(t)]
	New system: [diff(b(t),t) = 0, diff(d(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d(t)*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d(t)*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t), y_faux2(t) = d(t)]

=== Input info ===
State variables:          [b(t), d(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t), y_faux2(t)]
Input variables:          []
Parameters in equations:  [a, k3, k4, k5, k6, k7]
===================

memory used=16164.7MB, alloc=215.8MB, time=148.84
memory used=16274.4MB, alloc=215.8MB, time=149.72
memory used=16374.9MB, alloc=215.8MB, time=150.51
	Adding new y-equations: [y_faux3_0 = x4_7]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, y_faux2_0-d_0, d_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d_0*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d_0+a-x3_0-x4_0)*x2_1-x2_0*(-b_0*d_1-b_1*d_0+x3_1+x4_1))*k5-x1_1*k3+k4*x2_1-k6*x3_1-k6*x4_1+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d_0*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d_2+2*b_1*d_1+b_2*d_0-x3_2-x4_2)*x2_0+(b_0*d_0+a-x3_0-x4_0)*x2_2+2*x2_1*(b_0*d_1+b_1*d_0-x3_1-x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, d_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_0*d_1-b_1*d_0+x4_1)*x2_0-x2_1*(b_0*d_0-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d_3+3*b_1*d_2+3*b_2*d_1+b_3*d_0-x3_3-x4_3)*x2_0+(3*b_0*d_2+6*b_1*d_1+3*b_2*d_0-3*x3_2-3*x4_2)*x2_1+(b_0*d_0+a-x3_0-x4_0)*x2_3+3*x2_2*(b_0*d_1+b_1*d_0-x3_1-x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, d_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*d_2-2*b_1*d_1-b_2*d_0+x4_2)*x2_0+(-2*b_0*d_1-2*b_1*d_0+2*x4_1)*x2_1+x2_2*(-b_0*d_0+x4_0))*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d_4+4*b_1*d_3+6*b_2*d_2+4*b_3*d_1+b_4*d_0-x3_4-x4_4)*x2_0+(4*b_0*d_3+12*b_1*d_2+12*b_2*d_1+4*b_3*d_0-4*x3_3-4*x4_3)*x2_1+(6*b_0*d_2+12*b_1*d_1+6*b_2*d_0-6*x3_2-6*x4_2)*x2_2+(b_0*d_0+a-x3_0-x4_0)*x2_4+4*x2_3*(b_0*d_1+b_1*d_0-x3_1-x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, d_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*d_3-3*b_1*d_2-3*b_2*d_1-b_3*d_0+x4_3)*x2_0+(-3*b_0*d_2-6*b_1*d_1-3*b_2*d_0+3*x4_2)*x2_1+(-d_0*x2_3-3*d_1*x2_2)*b_0-3*x2_2*b_1*d_0+3*x4_1*x2_2+x2_3*x4_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*d_5+5*b_1*d_4+10*b_2*d_3+10*b_3*d_2+5*b_4*d_1+b_5*d_0-x3_5-x4_5)*x2_0+(5*b_0*d_4+20*b_1*d_3+30*b_2*d_2+20*b_3*d_1+5*b_4*d_0-5*x3_4-5*x4_4)*x2_1+(10*b_0*d_3+30*b_1*d_2+30*b_2*d_1+10*b_3*d_0-10*x3_3-10*x4_3)*x2_2+(d_0*x2_5+5*d_1*x2_4+10*d_2*x2_3)*b_0+(5*b_1*x2_4+10*b_2*x2_3)*d_0+(20*b_1*d_1-10*x3_2-10*x4_2)*x2_3+(a-x3_0-x4_0)*x2_5-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, d_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*d_4-4*b_1*d_3-6*b_2*d_2-4*b_3*d_1-b_4*d_0+x4_4)*x2_0+(-4*b_0*d_3-12*b_1*d_2-12*b_2*d_1-4*b_3*d_0+4*x4_3)*x2_1+(-d_0*x2_4-4*d_1*x2_3-6*d_2*x2_2)*b_0+(-4*b_1*x2_3-6*b_2*x2_2)*d_0+(-12*b_1*d_1+6*x4_2)*x2_2+4*x4_1*x2_3+x4_0*x2_4)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*d_6+6*b_1*d_5+15*b_2*d_4+20*b_3*d_3+15*b_4*d_2+6*b_5*d_1+b_6*d_0-x3_6-x4_6)*x2_0+(6*b_0*d_5+30*b_1*d_4+60*b_2*d_3+60*b_3*d_2+30*b_4*d_1+6*b_5*d_0-6*x3_5-6*x4_5)*x2_1+(15*b_0*d_4+60*b_1*d_3+90*b_2*d_2+60*b_3*d_1+15*b_4*d_0-15*x3_4-15*x4_4)*x2_2+(d_0*x2_6+6*d_1*x2_5+15*d_2*x2_4+20*d_3*x2_3)*b_0+(6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3)*d_0+(60*b_1*d_2+60*b_2*d_1-20*x3_3-20*x4_3)*x2_3+30*b_1*d_1*x2_4+(-15*x3_2-15*x4_2)*x2_4+(a-x3_0-x4_0)*x2_6-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, d_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*d_5-5*b_1*d_4-10*b_2*d_3-10*b_3*d_2-5*b_4*d_1-b_5*d_0+x4_5)*x2_0+(-5*b_0*d_4-20*b_1*d_3-30*b_2*d_2-20*b_3*d_1-5*b_4*d_0+5*x4_4)*x2_1+(-d_0*x2_5-5*d_1*x2_4-10*d_2*x2_3-10*d_3*x2_2)*b_0+(-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2)*d_0+(-30*b_1*d_2-30*b_2*d_1+10*x4_3)*x2_2-20*b_1*d_1*x2_3+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*d_7+7*b_1*d_6+21*b_2*d_5+35*b_3*d_4+35*b_4*d_3+21*b_5*d_2+7*b_6*d_1+b_7*d_0-x3_7-x4_7)*x2_0+(7*b_0*d_6+42*b_1*d_5+105*b_2*d_4+140*b_3*d_3+105*b_4*d_2+42*b_5*d_1+7*b_6*d_0-7*x3_6-7*x4_6)*x2_1+(21*b_0*d_5+105*b_1*d_4+210*b_2*d_3+210*b_3*d_2+105*b_4*d_1+21*b_5*d_0-21*x3_5-21*x4_5)*x2_2+(d_0*x2_7+7*d_1*x2_6+21*d_2*x2_5+35*d_3*x2_4+35*d_4*x2_3)*b_0+(7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3)*d_0+(140*b_1*d_3+210*b_2*d_2+140*b_3*d_1-35*x3_4-35*x4_4)*x2_3+(42*d_1*x2_5+105*d_2*x2_4)*b_1+105*b_2*d_1*x2_4+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5+(a-x3_0-x4_0)*x2_7-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, d_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*d_6-6*b_1*d_5-15*b_2*d_4-20*b_3*d_3-15*b_4*d_2-6*b_5*d_1-b_6*d_0+x4_6)*x2_0+(-6*b_0*d_5-30*b_1*d_4-60*b_2*d_3-60*b_3*d_2-30*b_4*d_1-6*b_5*d_0+6*x4_5)*x2_1+(-d_0*x2_6-6*d_1*x2_5-15*d_2*x2_4-20*d_3*x2_3-15*d_4*x2_2)*b_0+(-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2)*d_0+(-60*b_1*d_3-90*b_2*d_2-60*b_3*d_1+15*x4_4)*x2_2+(-30*d_1*x2_4-60*d_2*x2_3)*b_1-60*b_2*d_1*x2_3+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, -d_1+y_faux2_1, -d_2+y_faux2_2, -d_3+y_faux2_3, -d_4+y_faux2_4, -d_5+y_faux2_5, -d_6+y_faux2_6, -d_7+y_faux2_7, y_faux3_0-x4_7]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = d_0, y_faux2_1 = d_1, y_faux2_2 = d_2, y_faux2_3 = d_3, y_faux2_4 = d_4, y_faux2_5 = d_5, y_faux2_6 = d_6, y_faux2_7 = d_7, y_faux2_8 = d_8, y_faux2_9 = d_9, y_faux2_10 = d_10, y_faux2_11 = d_11, y_faux2_12 = d_12, y_faux2_13 = d_13, y_faux2_14 = d_14, y_faux3_0 = x4_7]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability without tr. basis:  525956485400000000000000
Random sample for the outputs and inputs is generated from  [a = .2442742567e24, k3 = .2954989988e24, k4 = .1492141169e24, k5 = .2374724074e23, k6 = .5682880332e24, k7 = .4843476619e24, b_0 = .3183588226e24, d_0 = .1527719999e24, x1_0 = .1715524460e24, x2_0 = .5828496592e24, x3_0 = .4419517615e24, x4_0 = .3941020358e24, x5_0 = .6488158605e24]
The polynomial system widehat{E^t} contains  83 equations in  68  variables
            "new_logs/Tumor/transcendence_169_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, x3(0), x3_1]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b}
Algebraically independent parameters among derivatives: {x3_1, x3(0)}
	Adding ODEs: [diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t)]
	New system: [diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t)]

=== Input info ===
State variables:          [b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t)]
Input variables:          []
Parameters in equations:  [a, d, k3, k4, k5, k6, k7]
===================

memory used=16518.3MB, alloc=215.8MB, time=151.96
	Adding new y-equations: [y_faux2_0 = x3_0, y_faux3_0 = x3_1]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a-x3_0-x4_0)*x2_1-x2_0*(-b_1*d+x3_1+x4_1))*k5+k4*x2_1-k6*x3_1-k6*x4_1-x1_1*k3+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a-x3_0-x4_0)*x2_2+(b_2*d-x3_2-x4_2)*x2_0-2*x2_1*(-b_1*d+x3_1+x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a-x3_0-x4_0)*x2_3+(3*b_1*x2_2+3*b_2*x2_1+b_3*x2_0)*d+(-x3_3-x4_3)*x2_0+(-3*x3_2-3*x4_2)*x2_1-3*x2_2*(x3_1+x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3)*x2_1+(-6*x3_2-6*x4_2)*x2_2-4*x2_3*(x3_1+x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(a-x3_0-x4_0)*x2_5+(-x3_5-x4_5)*x2_0+(-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3)*x2_2+(-10*x3_2-10*x4_2)*x2_3-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(a-x3_0-x4_0)*x2_6+(-x3_6-x4_6)*x2_0+(-6*x3_5-6*x4_5)*x2_1+(-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3)*x2_3+(-15*x3_2-15*x4_2)*x2_4-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(a-x3_0-x4_0)*x2_7+(-x3_7-x4_7)*x2_0+(-7*x3_6-7*x4_6)*x2_1+(-21*x3_5-21*x4_5)*x2_2+(-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, y_faux2_0-x3_0, y_faux3_0-x3_1]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = x3_0, y_faux3_0 = x3_1]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability without tr. basis:  525956485400000000000000
Random sample for the outputs and inputs is generated from  [a = .6279355632e24, d = .3559117324e24, k3 = .1202442817e24, k4 = .3864179653e24, k5 = .5734719141e24, k6 = .5289497395e24, k7 = .1542369461e24, b_0 = .4748090526e23, x1_0 = .1466522278e23, x2_0 = .2458372932e24, x3_0 = .6421851063e24, x4_0 = .2523496550e24, x5_0 = .4870689642e23]
The polynomial system widehat{E^t} contains  69 equations in  61  variables
            "new_logs/Tumor/transcendence_170_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, x3(0), x3_2]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b}
Algebraically independent parameters among derivatives: {x3_2, x3(0)}
	Adding ODEs: [diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t)]
	New system: [diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t)]

=== Input info ===
State variables:          [b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t)]
Input variables:          []
Parameters in equations:  [a, d, k3, k4, k5, k6, k7]
===================

memory used=16665.9MB, alloc=215.8MB, time=153.42
memory used=16797.2MB, alloc=215.8MB, time=154.50
	Adding new y-equations: [y_faux2_0 = x3_0, y_faux3_0 = x3_2]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a-x3_0-x4_0)*x2_1-x2_0*(-b_1*d+x3_1+x4_1))*k5+k4*x2_1-k6*x3_1-k6*x4_1-x1_1*k3+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a-x3_0-x4_0)*x2_2+(b_2*d-x3_2-x4_2)*x2_0-2*x2_1*(-b_1*d+x3_1+x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a-x3_0-x4_0)*x2_3+(3*b_1*x2_2+3*b_2*x2_1+b_3*x2_0)*d+(-x3_3-x4_3)*x2_0+(-3*x3_2-3*x4_2)*x2_1-3*x2_2*(x3_1+x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3)*x2_1+(-6*x3_2-6*x4_2)*x2_2-4*x2_3*(x3_1+x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(a-x3_0-x4_0)*x2_5+(-x3_5-x4_5)*x2_0+(-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3)*x2_2+(-10*x3_2-10*x4_2)*x2_3-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(a-x3_0-x4_0)*x2_6+(-x3_6-x4_6)*x2_0+(-6*x3_5-6*x4_5)*x2_1+(-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3)*x2_3+(-15*x3_2-15*x4_2)*x2_4-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(a-x3_0-x4_0)*x2_7+(-x3_7-x4_7)*x2_0+(-7*x3_6-7*x4_6)*x2_1+(-21*x3_5-21*x4_5)*x2_2+(-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, y_faux2_0-x3_0, y_faux3_0-x3_2]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = x3_0, y_faux3_0 = x3_2]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability without tr. basis:  525956485400000000000000
Random sample for the outputs and inputs is generated from  [a = .5719695928e24, d = .5625307874e24, k3 = .2895374112e24, k4 = .3151001711e24, k5 = .6999523479e24, k6 = .3115627928e24, k7 = .2180470920e24, b_0 = .5100807816e24, x1_0 = .1730619647e24, x2_0 = .2794446744e24, x3_0 = .6688392797e23, x4_0 = .1511674849e24, x5_0 = .8827813169e23]
The polynomial system widehat{E^t} contains  69 equations in  61  variables
            "new_logs/Tumor/transcendence_171_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, x3(0), x3_3]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b}
Algebraically independent parameters among derivatives: {x3_3, x3(0)}
	Adding ODEs: [diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t)]
	New system: [diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t)]

=== Input info ===
State variables:          [b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t)]
Input variables:          []
Parameters in equations:  [a, d, k3, k4, k5, k6, k7]
===================

memory used=16945.7MB, alloc=215.8MB, time=155.97
	Adding new y-equations: [y_faux2_0 = x3_0, y_faux3_0 = x3_3]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a-x3_0-x4_0)*x2_1-x2_0*(-b_1*d+x3_1+x4_1))*k5+k4*x2_1-k6*x3_1-k6*x4_1-x1_1*k3+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a-x3_0-x4_0)*x2_2+(b_2*d-x3_2-x4_2)*x2_0-2*x2_1*(-b_1*d+x3_1+x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a-x3_0-x4_0)*x2_3+(3*b_1*x2_2+3*b_2*x2_1+b_3*x2_0)*d+(-x3_3-x4_3)*x2_0+(-3*x3_2-3*x4_2)*x2_1-3*x2_2*(x3_1+x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3)*x2_1+(-6*x3_2-6*x4_2)*x2_2-4*x2_3*(x3_1+x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(a-x3_0-x4_0)*x2_5+(-x3_5-x4_5)*x2_0+(-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3)*x2_2+(-10*x3_2-10*x4_2)*x2_3-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(a-x3_0-x4_0)*x2_6+(-x3_6-x4_6)*x2_0+(-6*x3_5-6*x4_5)*x2_1+(-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3)*x2_3+(-15*x3_2-15*x4_2)*x2_4-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(a-x3_0-x4_0)*x2_7+(-x3_7-x4_7)*x2_0+(-7*x3_6-7*x4_6)*x2_1+(-21*x3_5-21*x4_5)*x2_2+(-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, y_faux2_0-x3_0, y_faux3_0-x3_3]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = x3_0, y_faux3_0 = x3_3]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability without tr. basis:  525956485400000000000000
Random sample for the outputs and inputs is generated from  [a = .2371054993e24, d = .1903960673e24, k3 = .5053809183e24, k4 = .3440123364e23, k5 = .6332438503e24, k6 = .3617953029e24, k7 = .2608011462e24, b_0 = .1375730673e24, x1_0 = .9170795715e23, x2_0 = .4674490524e24, x3_0 = .6344507020e24, x4_0 = .1036915666e24, x5_0 = .3127717823e24]
The polynomial system widehat{E^t} contains  69 equations in  61  variables
            "new_logs/Tumor/transcendence_172_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, x3(0), x3_4]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b}
Algebraically independent parameters among derivatives: {x3_4, x3(0)}
	Adding ODEs: [diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t)]
	New system: [diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t)]

=== Input info ===
State variables:          [b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t)]
Input variables:          []
Parameters in equations:  [a, d, k3, k4, k5, k6, k7]
===================

memory used=17095.8MB, alloc=215.8MB, time=157.38
memory used=17231.2MB, alloc=215.8MB, time=158.50
	Adding new y-equations: [y_faux2_0 = x3_0, y_faux3_0 = x3_4]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a-x3_0-x4_0)*x2_1-x2_0*(-b_1*d+x3_1+x4_1))*k5+k4*x2_1-k6*x3_1-k6*x4_1-x1_1*k3+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a-x3_0-x4_0)*x2_2+(b_2*d-x3_2-x4_2)*x2_0-2*x2_1*(-b_1*d+x3_1+x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a-x3_0-x4_0)*x2_3+(3*b_1*x2_2+3*b_2*x2_1+b_3*x2_0)*d+(-x3_3-x4_3)*x2_0+(-3*x3_2-3*x4_2)*x2_1-3*x2_2*(x3_1+x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3)*x2_1+(-6*x3_2-6*x4_2)*x2_2-4*x2_3*(x3_1+x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(a-x3_0-x4_0)*x2_5+(-x3_5-x4_5)*x2_0+(-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3)*x2_2+(-10*x3_2-10*x4_2)*x2_3-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(a-x3_0-x4_0)*x2_6+(-x3_6-x4_6)*x2_0+(-6*x3_5-6*x4_5)*x2_1+(-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3)*x2_3+(-15*x3_2-15*x4_2)*x2_4-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(a-x3_0-x4_0)*x2_7+(-x3_7-x4_7)*x2_0+(-7*x3_6-7*x4_6)*x2_1+(-21*x3_5-21*x4_5)*x2_2+(-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, y_faux2_0-x3_0, y_faux3_0-x3_4]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = x3_0, y_faux3_0 = x3_4]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability without tr. basis:  525956485400000000000000
Random sample for the outputs and inputs is generated from  [a = .2623708900e24, d = .5414926680e24, k3 = .8608225122e23, k4 = .1889564304e24, k5 = .3282917683e24, k6 = .1568460179e24, k7 = .6164833510e24, b_0 = .1837124248e24, x1_0 = .1892005300e24, x2_0 = .2127134186e22, x3_0 = .4465834409e24, x4_0 = .3467685075e24, x5_0 = .5974597777e24]
The polynomial system widehat{E^t} contains  69 equations in  61  variables
            "new_logs/Tumor/transcendence_173_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, x3(0), x3_5]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b}
Algebraically independent parameters among derivatives: {x3_5, x3(0)}
	Adding ODEs: [diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t)]
	New system: [diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t)]

=== Input info ===
State variables:          [b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t)]
Input variables:          []
Parameters in equations:  [a, d, k3, k4, k5, k6, k7]
===================

memory used=17380.2MB, alloc=215.8MB, time=159.93
	Adding new y-equations: [y_faux2_0 = x3_0, y_faux3_0 = x3_5]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a-x3_0-x4_0)*x2_1-x2_0*(-b_1*d+x3_1+x4_1))*k5+k4*x2_1-k6*x3_1-k6*x4_1-x1_1*k3+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a-x3_0-x4_0)*x2_2+(b_2*d-x3_2-x4_2)*x2_0-2*x2_1*(-b_1*d+x3_1+x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a-x3_0-x4_0)*x2_3+(3*b_1*x2_2+3*b_2*x2_1+b_3*x2_0)*d+(-x3_3-x4_3)*x2_0+(-3*x3_2-3*x4_2)*x2_1-3*x2_2*(x3_1+x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3)*x2_1+(-6*x3_2-6*x4_2)*x2_2-4*x2_3*(x3_1+x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(a-x3_0-x4_0)*x2_5+(-x3_5-x4_5)*x2_0+(-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3)*x2_2+(-10*x3_2-10*x4_2)*x2_3-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(a-x3_0-x4_0)*x2_6+(-x3_6-x4_6)*x2_0+(-6*x3_5-6*x4_5)*x2_1+(-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3)*x2_3+(-15*x3_2-15*x4_2)*x2_4-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(a-x3_0-x4_0)*x2_7+(-x3_7-x4_7)*x2_0+(-7*x3_6-7*x4_6)*x2_1+(-21*x3_5-21*x4_5)*x2_2+(-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, y_faux2_0-x3_0, y_faux3_0-x3_5]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = x3_0, y_faux3_0 = x3_5]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability without tr. basis:  525956485400000000000000
Random sample for the outputs and inputs is generated from  [a = .5742153466e24, d = .3397069110e24, k3 = .4666102663e24, k4 = .3824707512e23, k5 = .6239388530e24, k6 = .3708762481e24, k7 = .1703580648e24, b_0 = .1910359772e24, x1_0 = .7089262175e23, x2_0 = .1140173126e24, x3_0 = .1375972808e24, x4_0 = .1532112338e24, x5_0 = .6597276875e24]
The polynomial system widehat{E^t} contains  69 equations in  61  variables
            "new_logs/Tumor/transcendence_174_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, x3(0), x3_6]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b}
Algebraically independent parameters among derivatives: {x3_6, x3(0)}
	Adding ODEs: [diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t)]
	New system: [diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t)]

=== Input info ===
State variables:          [b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t)]
Input variables:          []
Parameters in equations:  [a, d, k3, k4, k5, k6, k7]
===================

memory used=17532.4MB, alloc=215.8MB, time=161.36
memory used=17667.9MB, alloc=215.8MB, time=162.47
	Adding new y-equations: [y_faux2_0 = x3_0, y_faux3_0 = x3_6]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a-x3_0-x4_0)*x2_1-x2_0*(-b_1*d+x3_1+x4_1))*k5+k4*x2_1-k6*x3_1-k6*x4_1-x1_1*k3+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a-x3_0-x4_0)*x2_2+(b_2*d-x3_2-x4_2)*x2_0-2*x2_1*(-b_1*d+x3_1+x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a-x3_0-x4_0)*x2_3+(3*b_1*x2_2+3*b_2*x2_1+b_3*x2_0)*d+(-x3_3-x4_3)*x2_0+(-3*x3_2-3*x4_2)*x2_1-3*x2_2*(x3_1+x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3)*x2_1+(-6*x3_2-6*x4_2)*x2_2-4*x2_3*(x3_1+x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(a-x3_0-x4_0)*x2_5+(-x3_5-x4_5)*x2_0+(-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3)*x2_2+(-10*x3_2-10*x4_2)*x2_3-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(a-x3_0-x4_0)*x2_6+(-x3_6-x4_6)*x2_0+(-6*x3_5-6*x4_5)*x2_1+(-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3)*x2_3+(-15*x3_2-15*x4_2)*x2_4-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(a-x3_0-x4_0)*x2_7+(-x3_7-x4_7)*x2_0+(-7*x3_6-7*x4_6)*x2_1+(-21*x3_5-21*x4_5)*x2_2+(-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, y_faux2_0-x3_0, y_faux3_0-x3_6]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = x3_0, y_faux3_0 = x3_6]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability without tr. basis:  525956485400000000000000
Random sample for the outputs and inputs is generated from  [a = .3908597816e24, d = .2901017483e24, k3 = .6494071224e24, k4 = .4161800311e24, k5 = .6929284683e24, k6 = .1191578310e24, k7 = .5185044895e24, b_0 = .2056121568e24, x1_0 = .1969001041e24, x2_0 = .1084218399e24, x3_0 = .3898858873e23, x4_0 = .2838722521e24, x5_0 = .5924585653e24]
The polynomial system widehat{E^t} contains  69 equations in  61  variables
            "new_logs/Tumor/transcendence_175_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, x3(0), x3_7]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b}
Algebraically independent parameters among derivatives: {x3_7, x3(0)}
	Adding ODEs: [diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t)]
	New system: [diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t)]

=== Input info ===
State variables:          [b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t)]
Input variables:          []
Parameters in equations:  [a, d, k3, k4, k5, k6, k7]
===================

memory used=17817.2MB, alloc=215.8MB, time=163.92
	Adding new y-equations: [y_faux2_0 = x3_0, y_faux3_0 = x3_7]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a-x3_0-x4_0)*x2_1-x2_0*(-b_1*d+x3_1+x4_1))*k5+k4*x2_1-k6*x3_1-k6*x4_1-x1_1*k3+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a-x3_0-x4_0)*x2_2+(b_2*d-x3_2-x4_2)*x2_0-2*x2_1*(-b_1*d+x3_1+x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a-x3_0-x4_0)*x2_3+(3*b_1*x2_2+3*b_2*x2_1+b_3*x2_0)*d+(-x3_3-x4_3)*x2_0+(-3*x3_2-3*x4_2)*x2_1-3*x2_2*(x3_1+x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3)*x2_1+(-6*x3_2-6*x4_2)*x2_2-4*x2_3*(x3_1+x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(a-x3_0-x4_0)*x2_5+(-x3_5-x4_5)*x2_0+(-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3)*x2_2+(-10*x3_2-10*x4_2)*x2_3-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(a-x3_0-x4_0)*x2_6+(-x3_6-x4_6)*x2_0+(-6*x3_5-6*x4_5)*x2_1+(-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3)*x2_3+(-15*x3_2-15*x4_2)*x2_4-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(a-x3_0-x4_0)*x2_7+(-x3_7-x4_7)*x2_0+(-7*x3_6-7*x4_6)*x2_1+(-21*x3_5-21*x4_5)*x2_2+(-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, y_faux2_0-x3_0, y_faux3_0-x3_7]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = x3_0, y_faux3_0 = x3_7]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability without tr. basis:  525956485400000000000000
Random sample for the outputs and inputs is generated from  [a = .3919629054e24, d = .5305321178e24, k3 = .8778848926e23, k4 = .1338455196e24, k5 = .5900431500e24, k6 = .1153071209e24, k7 = .3958172350e24, b_0 = .4052699334e24, x1_0 = .5414513110e24, x2_0 = .4218102843e24, x3_0 = .3185128601e24, x4_0 = .2838276906e24, x5_0 = .5598165751e24]
The polynomial system widehat{E^t} contains  69 equations in  61  variables
            "new_logs/Tumor/transcendence_176_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, x3(0), x4(0)]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [b, x3(0), x4_1]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b}
Algebraically independent parameters among derivatives: {x4_1, x3(0)}
	Adding ODEs: [diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t)]
	New system: [diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t)]

=== Input info ===
State variables:          [b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t)]
Input variables:          []
Parameters in equations:  [a, d, k3, k4, k5, k6, k7]
===================

memory used=17971.3MB, alloc=215.8MB, time=165.31
memory used=18116.7MB, alloc=215.8MB, time=166.53
	Adding new y-equations: [y_faux2_0 = x3_0, y_faux3_0 = x4_1]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a-x3_0-x4_0)*x2_1-x2_0*(-b_1*d+x3_1+x4_1))*k5+k4*x2_1-k6*x3_1-k6*x4_1-x1_1*k3+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a-x3_0-x4_0)*x2_2+(b_2*d-x3_2-x4_2)*x2_0-2*x2_1*(-b_1*d+x3_1+x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a-x3_0-x4_0)*x2_3+(3*b_1*x2_2+3*b_2*x2_1+b_3*x2_0)*d+(-x3_3-x4_3)*x2_0+(-3*x3_2-3*x4_2)*x2_1-3*x2_2*(x3_1+x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3)*x2_1+(-6*x3_2-6*x4_2)*x2_2-4*x2_3*(x3_1+x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(a-x3_0-x4_0)*x2_5+(-x3_5-x4_5)*x2_0+(-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3)*x2_2+(-10*x3_2-10*x4_2)*x2_3-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(a-x3_0-x4_0)*x2_6+(-x3_6-x4_6)*x2_0+(-6*x3_5-6*x4_5)*x2_1+(-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3)*x2_3+(-15*x3_2-15*x4_2)*x2_4-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(a-x3_0-x4_0)*x2_7+(-x3_7-x4_7)*x2_0+(-7*x3_6-7*x4_6)*x2_1+(-21*x3_5-21*x4_5)*x2_2+(-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, y_faux2_0-x3_0, y_faux3_0-x4_1]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = x3_0, y_faux3_0 = x4_1]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability without tr. basis:  525956485400000000000000
Random sample for the outputs and inputs is generated from  [a = .5432178653e24, d = .6777632663e23, k3 = .1614028371e24, k4 = .8586252864e23, k5 = .2873073279e24, k6 = .1945247400e24, k7 = .9681098043e23, b_0 = .8056377146e23, x1_0 = .5468191897e24, x2_0 = .6168383730e24, x3_0 = .2033472630e24, x4_0 = .3264739075e23, x5_0 = .9392613836e23]
The polynomial system widehat{E^t} contains  69 equations in  61  variables
            "new_logs/Tumor/transcendence_178_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, x3(0), x4_2]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b}
Algebraically independent parameters among derivatives: {x4_2, x3(0)}
	Adding ODEs: [diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t)]
	New system: [diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t)]

=== Input info ===
State variables:          [b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t)]
Input variables:          []
Parameters in equations:  [a, d, k3, k4, k5, k6, k7]
===================

memory used=18268.6MB, alloc=215.8MB, time=167.99
	Adding new y-equations: [y_faux2_0 = x3_0, y_faux3_0 = x4_2]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a-x3_0-x4_0)*x2_1-x2_0*(-b_1*d+x3_1+x4_1))*k5+k4*x2_1-k6*x3_1-k6*x4_1-x1_1*k3+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a-x3_0-x4_0)*x2_2+(b_2*d-x3_2-x4_2)*x2_0-2*x2_1*(-b_1*d+x3_1+x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a-x3_0-x4_0)*x2_3+(3*b_1*x2_2+3*b_2*x2_1+b_3*x2_0)*d+(-x3_3-x4_3)*x2_0+(-3*x3_2-3*x4_2)*x2_1-3*x2_2*(x3_1+x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3)*x2_1+(-6*x3_2-6*x4_2)*x2_2-4*x2_3*(x3_1+x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(a-x3_0-x4_0)*x2_5+(-x3_5-x4_5)*x2_0+(-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3)*x2_2+(-10*x3_2-10*x4_2)*x2_3-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(a-x3_0-x4_0)*x2_6+(-x3_6-x4_6)*x2_0+(-6*x3_5-6*x4_5)*x2_1+(-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3)*x2_3+(-15*x3_2-15*x4_2)*x2_4-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(a-x3_0-x4_0)*x2_7+(-x3_7-x4_7)*x2_0+(-7*x3_6-7*x4_6)*x2_1+(-21*x3_5-21*x4_5)*x2_2+(-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, y_faux2_0-x3_0, y_faux3_0-x4_2]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = x3_0, y_faux3_0 = x4_2]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability without tr. basis:  525956485400000000000000
Random sample for the outputs and inputs is generated from  [a = .5590446105e24, d = .9900821940e23, k3 = .6745758105e24, k4 = .2480041796e24, k5 = .6061103234e24, k6 = .7000726230e24, k7 = .2339936591e24, b_0 = .2948998917e24, x1_0 = .3281974840e23, x2_0 = .6004129541e24, x3_0 = .1279225396e24, x4_0 = .1831475253e24, x5_0 = .4712357018e24]
The polynomial system widehat{E^t} contains  69 equations in  61  variables
            "new_logs/Tumor/transcendence_179_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, x3(0), x4_3]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b}
Algebraically independent parameters among derivatives: {x4_3, x3(0)}
	Adding ODEs: [diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t)]
	New system: [diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t)]

=== Input info ===
State variables:          [b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t)]
Input variables:          []
Parameters in equations:  [a, d, k3, k4, k5, k6, k7]
===================

memory used=18420.9MB, alloc=215.8MB, time=169.38
memory used=18552.7MB, alloc=215.8MB, time=170.48
	Adding new y-equations: [y_faux2_0 = x3_0, y_faux3_0 = x4_3]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a-x3_0-x4_0)*x2_1-x2_0*(-b_1*d+x3_1+x4_1))*k5+k4*x2_1-k6*x3_1-k6*x4_1-x1_1*k3+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a-x3_0-x4_0)*x2_2+(b_2*d-x3_2-x4_2)*x2_0-2*x2_1*(-b_1*d+x3_1+x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a-x3_0-x4_0)*x2_3+(3*b_1*x2_2+3*b_2*x2_1+b_3*x2_0)*d+(-x3_3-x4_3)*x2_0+(-3*x3_2-3*x4_2)*x2_1-3*x2_2*(x3_1+x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3)*x2_1+(-6*x3_2-6*x4_2)*x2_2-4*x2_3*(x3_1+x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(a-x3_0-x4_0)*x2_5+(-x3_5-x4_5)*x2_0+(-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3)*x2_2+(-10*x3_2-10*x4_2)*x2_3-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(a-x3_0-x4_0)*x2_6+(-x3_6-x4_6)*x2_0+(-6*x3_5-6*x4_5)*x2_1+(-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3)*x2_3+(-15*x3_2-15*x4_2)*x2_4-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(a-x3_0-x4_0)*x2_7+(-x3_7-x4_7)*x2_0+(-7*x3_6-7*x4_6)*x2_1+(-21*x3_5-21*x4_5)*x2_2+(-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, y_faux2_0-x3_0, y_faux3_0-x4_3]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = x3_0, y_faux3_0 = x4_3]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability without tr. basis:  525956485400000000000000
Random sample for the outputs and inputs is generated from  [a = .3079688896e24, d = .1685450180e24, k3 = .4404159613e24, k4 = .2912385737e24, k5 = .5919452243e24, k6 = .8890741785e22, k7 = .4566870431e24, b_0 = .6919009369e24, x1_0 = .1078259567e24, x2_0 = .8037536326e23, x3_0 = .4870219873e24, x4_0 = .4600417908e24, x5_0 = .4882696291e24]
The polynomial system widehat{E^t} contains  69 equations in  61  variables
            "new_logs/Tumor/transcendence_180_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, x3(0), x4_4]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b}
Algebraically independent parameters among derivatives: {x4_4, x3(0)}
	Adding ODEs: [diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t)]
	New system: [diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t)]

=== Input info ===
State variables:          [b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t)]
Input variables:          []
Parameters in equations:  [a, d, k3, k4, k5, k6, k7]
===================

memory used=18704.4MB, alloc=215.8MB, time=171.96
	Adding new y-equations: [y_faux2_0 = x3_0, y_faux3_0 = x4_4]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a-x3_0-x4_0)*x2_1-x2_0*(-b_1*d+x3_1+x4_1))*k5+k4*x2_1-k6*x3_1-k6*x4_1-x1_1*k3+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a-x3_0-x4_0)*x2_2+(b_2*d-x3_2-x4_2)*x2_0-2*x2_1*(-b_1*d+x3_1+x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a-x3_0-x4_0)*x2_3+(3*b_1*x2_2+3*b_2*x2_1+b_3*x2_0)*d+(-x3_3-x4_3)*x2_0+(-3*x3_2-3*x4_2)*x2_1-3*x2_2*(x3_1+x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3)*x2_1+(-6*x3_2-6*x4_2)*x2_2-4*x2_3*(x3_1+x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(a-x3_0-x4_0)*x2_5+(-x3_5-x4_5)*x2_0+(-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3)*x2_2+(-10*x3_2-10*x4_2)*x2_3-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(a-x3_0-x4_0)*x2_6+(-x3_6-x4_6)*x2_0+(-6*x3_5-6*x4_5)*x2_1+(-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3)*x2_3+(-15*x3_2-15*x4_2)*x2_4-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(a-x3_0-x4_0)*x2_7+(-x3_7-x4_7)*x2_0+(-7*x3_6-7*x4_6)*x2_1+(-21*x3_5-21*x4_5)*x2_2+(-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, y_faux2_0-x3_0, y_faux3_0-x4_4]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = x3_0, y_faux3_0 = x4_4]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability without tr. basis:  525956485400000000000000
Random sample for the outputs and inputs is generated from  [a = .3327813984e24, d = .5844028777e24, k3 = .4567964502e24, k4 = .6542000373e23, k5 = .4304336603e24, k6 = .3012185959e24, k7 = .1969652140e24, b_0 = .6400466656e24, x1_0 = .2433390593e23, x2_0 = .2865428970e24, x3_0 = .3141761507e24, x4_0 = .5185181661e24, x5_0 = .6592880340e24]
The polynomial system widehat{E^t} contains  69 equations in  61  variables
            "new_logs/Tumor/transcendence_181_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, x3(0), x4_5]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b}
Algebraically independent parameters among derivatives: {x4_5, x3(0)}
	Adding ODEs: [diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t)]
	New system: [diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t)]

=== Input info ===
State variables:          [b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t)]
Input variables:          []
Parameters in equations:  [a, d, k3, k4, k5, k6, k7]
===================

memory used=18857.3MB, alloc=215.8MB, time=173.46
memory used=18989.5MB, alloc=215.8MB, time=174.60
	Adding new y-equations: [y_faux2_0 = x3_0, y_faux3_0 = x4_5]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a-x3_0-x4_0)*x2_1-x2_0*(-b_1*d+x3_1+x4_1))*k5+k4*x2_1-k6*x3_1-k6*x4_1-x1_1*k3+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a-x3_0-x4_0)*x2_2+(b_2*d-x3_2-x4_2)*x2_0-2*x2_1*(-b_1*d+x3_1+x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a-x3_0-x4_0)*x2_3+(3*b_1*x2_2+3*b_2*x2_1+b_3*x2_0)*d+(-x3_3-x4_3)*x2_0+(-3*x3_2-3*x4_2)*x2_1-3*x2_2*(x3_1+x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3)*x2_1+(-6*x3_2-6*x4_2)*x2_2-4*x2_3*(x3_1+x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(a-x3_0-x4_0)*x2_5+(-x3_5-x4_5)*x2_0+(-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3)*x2_2+(-10*x3_2-10*x4_2)*x2_3-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(a-x3_0-x4_0)*x2_6+(-x3_6-x4_6)*x2_0+(-6*x3_5-6*x4_5)*x2_1+(-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3)*x2_3+(-15*x3_2-15*x4_2)*x2_4-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(a-x3_0-x4_0)*x2_7+(-x3_7-x4_7)*x2_0+(-7*x3_6-7*x4_6)*x2_1+(-21*x3_5-21*x4_5)*x2_2+(-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, y_faux2_0-x3_0, y_faux3_0-x4_5]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = x3_0, y_faux3_0 = x4_5]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability without tr. basis:  525956485400000000000000
Random sample for the outputs and inputs is generated from  [a = .2192592029e24, d = .6818237651e24, k3 = .1552278361e24, k4 = .3382337730e24, k5 = .1890565982e24, k6 = .6424130954e24, k7 = .6833125647e24, b_0 = .4221806596e24, x1_0 = .6596179631e24, x2_0 = .5516600258e24, x3_0 = .4268725890e24, x4_0 = .5972012894e24, x5_0 = .5053378923e24]
The polynomial system widehat{E^t} contains  69 equations in  61  variables
            "new_logs/Tumor/transcendence_182_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, x3(0), x4_6]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b}
Algebraically independent parameters among derivatives: {x4_6, x3(0)}
	Adding ODEs: [diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t)]
	New system: [diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t)]

=== Input info ===
State variables:          [b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t)]
Input variables:          []
Parameters in equations:  [a, d, k3, k4, k5, k6, k7]
===================

memory used=19141.5MB, alloc=215.8MB, time=176.03
	Adding new y-equations: [y_faux2_0 = x3_0, y_faux3_0 = x4_6]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a-x3_0-x4_0)*x2_1-x2_0*(-b_1*d+x3_1+x4_1))*k5+k4*x2_1-k6*x3_1-k6*x4_1-x1_1*k3+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a-x3_0-x4_0)*x2_2+(b_2*d-x3_2-x4_2)*x2_0-2*x2_1*(-b_1*d+x3_1+x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a-x3_0-x4_0)*x2_3+(3*b_1*x2_2+3*b_2*x2_1+b_3*x2_0)*d+(-x3_3-x4_3)*x2_0+(-3*x3_2-3*x4_2)*x2_1-3*x2_2*(x3_1+x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3)*x2_1+(-6*x3_2-6*x4_2)*x2_2-4*x2_3*(x3_1+x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(a-x3_0-x4_0)*x2_5+(-x3_5-x4_5)*x2_0+(-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3)*x2_2+(-10*x3_2-10*x4_2)*x2_3-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(a-x3_0-x4_0)*x2_6+(-x3_6-x4_6)*x2_0+(-6*x3_5-6*x4_5)*x2_1+(-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3)*x2_3+(-15*x3_2-15*x4_2)*x2_4-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(a-x3_0-x4_0)*x2_7+(-x3_7-x4_7)*x2_0+(-7*x3_6-7*x4_6)*x2_1+(-21*x3_5-21*x4_5)*x2_2+(-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, y_faux2_0-x3_0, y_faux3_0-x4_6]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = x3_0, y_faux3_0 = x4_6]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability without tr. basis:  525956485400000000000000
Random sample for the outputs and inputs is generated from  [a = .3960734783e24, d = .5620998221e24, k3 = .5565855330e24, k4 = .1375006364e24, k5 = .3184954686e24, k6 = .5624504842e24, k7 = .6819197947e24, b_0 = .5800905145e24, x1_0 = .2809963208e24, x2_0 = .6259875995e24, x3_0 = .6174949489e24, x4_0 = .5417739312e23, x5_0 = .6052698047e24]
The polynomial system widehat{E^t} contains  69 equations in  61  variables
            "new_logs/Tumor/transcendence_183_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, x3(0), x4_7]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b}
Algebraically independent parameters among derivatives: {x4_7, x3(0)}
	Adding ODEs: [diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t)]
	New system: [diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t)]

=== Input info ===
State variables:          [b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t)]
Input variables:          []
Parameters in equations:  [a, d, k3, k4, k5, k6, k7]
===================

memory used=19295.2MB, alloc=215.8MB, time=177.43
memory used=19426.5MB, alloc=215.8MB, time=178.42
	Adding new y-equations: [y_faux2_0 = x3_0, y_faux3_0 = x4_7]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a-x3_0-x4_0)*x2_1-x2_0*(-b_1*d+x3_1+x4_1))*k5+k4*x2_1-k6*x3_1-k6*x4_1-x1_1*k3+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a-x3_0-x4_0)*x2_2+(b_2*d-x3_2-x4_2)*x2_0-2*x2_1*(-b_1*d+x3_1+x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a-x3_0-x4_0)*x2_3+(3*b_1*x2_2+3*b_2*x2_1+b_3*x2_0)*d+(-x3_3-x4_3)*x2_0+(-3*x3_2-3*x4_2)*x2_1-3*x2_2*(x3_1+x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3)*x2_1+(-6*x3_2-6*x4_2)*x2_2-4*x2_3*(x3_1+x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(a-x3_0-x4_0)*x2_5+(-x3_5-x4_5)*x2_0+(-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3)*x2_2+(-10*x3_2-10*x4_2)*x2_3-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(a-x3_0-x4_0)*x2_6+(-x3_6-x4_6)*x2_0+(-6*x3_5-6*x4_5)*x2_1+(-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3)*x2_3+(-15*x3_2-15*x4_2)*x2_4-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(a-x3_0-x4_0)*x2_7+(-x3_7-x4_7)*x2_0+(-7*x3_6-7*x4_6)*x2_1+(-21*x3_5-21*x4_5)*x2_2+(-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, y_faux2_0-x3_0, y_faux3_0-x4_7]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = x3_0, y_faux3_0 = x4_7]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability without tr. basis:  525956485400000000000000
Random sample for the outputs and inputs is generated from  [a = .2524546581e23, d = .4794396083e23, k3 = .5376506118e24, k4 = .1944212404e24, k5 = .5459332240e24, k6 = .6652065966e24, k7 = .4659679890e24, b_0 = .2428256638e23, x1_0 = .3678097831e24, x2_0 = .1038225906e24, x3_0 = .6103819458e24, x4_0 = .6816270534e24, x5_0 = .4420461744e24]
The polynomial system widehat{E^t} contains  69 equations in  61  variables
            "new_logs/Tumor/transcendence_184_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, x3_1, x3_2]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b}
Algebraically independent parameters among derivatives: {x3_1, x3_2}
	Adding ODEs: [diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t)]
	New system: [diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t)]

=== Input info ===
State variables:          [b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t)]
Input variables:          []
Parameters in equations:  [a, d, k3, k4, k5, k6, k7]
===================

memory used=19579.4MB, alloc=215.8MB, time=179.87
	Adding new y-equations: [y_faux2_0 = x3_1, y_faux3_0 = x3_2]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a-x3_0-x4_0)*x2_1-x2_0*(-b_1*d+x3_1+x4_1))*k5+k4*x2_1-k6*x3_1-k6*x4_1-x1_1*k3+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a-x3_0-x4_0)*x2_2+(b_2*d-x3_2-x4_2)*x2_0-2*x2_1*(-b_1*d+x3_1+x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a-x3_0-x4_0)*x2_3+(3*b_1*x2_2+3*b_2*x2_1+b_3*x2_0)*d+(-x3_3-x4_3)*x2_0+(-3*x3_2-3*x4_2)*x2_1-3*x2_2*(x3_1+x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3)*x2_1+(-6*x3_2-6*x4_2)*x2_2-4*x2_3*(x3_1+x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(a-x3_0-x4_0)*x2_5+(-x3_5-x4_5)*x2_0+(-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3)*x2_2+(-10*x3_2-10*x4_2)*x2_3-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(a-x3_0-x4_0)*x2_6+(-x3_6-x4_6)*x2_0+(-6*x3_5-6*x4_5)*x2_1+(-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3)*x2_3+(-15*x3_2-15*x4_2)*x2_4-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(a-x3_0-x4_0)*x2_7+(-x3_7-x4_7)*x2_0+(-7*x3_6-7*x4_6)*x2_1+(-21*x3_5-21*x4_5)*x2_2+(-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, y_faux2_0-x3_1, y_faux3_0-x3_2]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = x3_1, y_faux3_0 = x3_2]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability without tr. basis:  525956485400000000000000
Random sample for the outputs and inputs is generated from  [a = .6989760213e24, d = .1643909306e24, k3 = .2693090089e23, k4 = .4256870800e24, k5 = .3917750291e24, k6 = .4464654542e24, k7 = .1322426879e24, b_0 = .4174529745e24, x1_0 = .3958988404e24, x2_0 = .4647336219e24, x3_0 = .7392029622e23, x4_0 = .1095878613e23, x5_0 = .3511784526e23]
The polynomial system widehat{E^t} contains  69 equations in  61  variables
            "new_logs/Tumor/transcendence_185_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, x3_1, x3_3]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b}
Algebraically independent parameters among derivatives: {x3_1, x3_3}
	Adding ODEs: [diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t)]
	New system: [diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t)]

=== Input info ===
State variables:          [b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t)]
Input variables:          []
Parameters in equations:  [a, d, k3, k4, k5, k6, k7]
===================

memory used=19734.1MB, alloc=215.8MB, time=181.25
memory used=19864.8MB, alloc=215.8MB, time=182.22
	Adding new y-equations: [y_faux2_0 = x3_1, y_faux3_0 = x3_3]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a-x3_0-x4_0)*x2_1-x2_0*(-b_1*d+x3_1+x4_1))*k5+k4*x2_1-k6*x3_1-k6*x4_1-x1_1*k3+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a-x3_0-x4_0)*x2_2+(b_2*d-x3_2-x4_2)*x2_0-2*x2_1*(-b_1*d+x3_1+x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a-x3_0-x4_0)*x2_3+(3*b_1*x2_2+3*b_2*x2_1+b_3*x2_0)*d+(-x3_3-x4_3)*x2_0+(-3*x3_2-3*x4_2)*x2_1-3*x2_2*(x3_1+x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3)*x2_1+(-6*x3_2-6*x4_2)*x2_2-4*x2_3*(x3_1+x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(a-x3_0-x4_0)*x2_5+(-x3_5-x4_5)*x2_0+(-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3)*x2_2+(-10*x3_2-10*x4_2)*x2_3-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(a-x3_0-x4_0)*x2_6+(-x3_6-x4_6)*x2_0+(-6*x3_5-6*x4_5)*x2_1+(-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3)*x2_3+(-15*x3_2-15*x4_2)*x2_4-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(a-x3_0-x4_0)*x2_7+(-x3_7-x4_7)*x2_0+(-7*x3_6-7*x4_6)*x2_1+(-21*x3_5-21*x4_5)*x2_2+(-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, y_faux2_0-x3_1, y_faux3_0-x3_3]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = x3_1, y_faux3_0 = x3_3]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability without tr. basis:  525956485400000000000000
Random sample for the outputs and inputs is generated from  [a = .6114518405e24, d = .6753215085e24, k3 = .3019437693e24, k4 = .1387376344e24, k5 = .4472475067e24, k6 = .1047162003e24, k7 = .6590662962e24, b_0 = .4602305615e23, x1_0 = .8550352878e23, x2_0 = .9789967308e23, x3_0 = .4944643632e24, x4_0 = .6600264153e24, x5_0 = .1337306178e24]
The polynomial system widehat{E^t} contains  69 equations in  61  variables
            "new_logs/Tumor/transcendence_186_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, x3_1, x3_4]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b}
Algebraically independent parameters among derivatives: {x3_1, x3_4}
	Adding ODEs: [diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t)]
	New system: [diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t)]

=== Input info ===
State variables:          [b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t)]
Input variables:          []
Parameters in equations:  [a, d, k3, k4, k5, k6, k7]
===================

memory used=20010.8MB, alloc=215.8MB, time=183.55
	Adding new y-equations: [y_faux2_0 = x3_1, y_faux3_0 = x3_4]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a-x3_0-x4_0)*x2_1-x2_0*(-b_1*d+x3_1+x4_1))*k5+k4*x2_1-k6*x3_1-k6*x4_1-x1_1*k3+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a-x3_0-x4_0)*x2_2+(b_2*d-x3_2-x4_2)*x2_0-2*x2_1*(-b_1*d+x3_1+x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a-x3_0-x4_0)*x2_3+(3*b_1*x2_2+3*b_2*x2_1+b_3*x2_0)*d+(-x3_3-x4_3)*x2_0+(-3*x3_2-3*x4_2)*x2_1-3*x2_2*(x3_1+x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3)*x2_1+(-6*x3_2-6*x4_2)*x2_2-4*x2_3*(x3_1+x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(a-x3_0-x4_0)*x2_5+(-x3_5-x4_5)*x2_0+(-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3)*x2_2+(-10*x3_2-10*x4_2)*x2_3-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(a-x3_0-x4_0)*x2_6+(-x3_6-x4_6)*x2_0+(-6*x3_5-6*x4_5)*x2_1+(-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3)*x2_3+(-15*x3_2-15*x4_2)*x2_4-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(a-x3_0-x4_0)*x2_7+(-x3_7-x4_7)*x2_0+(-7*x3_6-7*x4_6)*x2_1+(-21*x3_5-21*x4_5)*x2_2+(-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, y_faux2_0-x3_1, y_faux3_0-x3_4]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = x3_1, y_faux3_0 = x3_4]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability without tr. basis:  525956485400000000000000
Random sample for the outputs and inputs is generated from  [a = .3499916490e24, d = .6249699873e24, k3 = .1066949482e24, k4 = .4403731319e24, k5 = .3983169295e24, k6 = .8937342722e23, k7 = .4228987574e23, b_0 = .4925929599e24, x1_0 = .2050433748e24, x2_0 = .3814709748e24, x3_0 = .1128688057e24, x4_0 = .3836991417e24, x5_0 = .7186061739e23]
The polynomial system widehat{E^t} contains  69 equations in  61  variables
            "new_logs/Tumor/transcendence_187_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, x3_1, x3_5]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b}
Algebraically independent parameters among derivatives: {x3_1, x3_5}
	Adding ODEs: [diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t)]
	New system: [diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t)]

=== Input info ===
State variables:          [b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t)]
Input variables:          []
Parameters in equations:  [a, d, k3, k4, k5, k6, k7]
===================

memory used=20167.4MB, alloc=215.8MB, time=185.04
memory used=20299.3MB, alloc=215.8MB, time=186.03
	Adding new y-equations: [y_faux2_0 = x3_1, y_faux3_0 = x3_5]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a-x3_0-x4_0)*x2_1-x2_0*(-b_1*d+x3_1+x4_1))*k5+k4*x2_1-k6*x3_1-k6*x4_1-x1_1*k3+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a-x3_0-x4_0)*x2_2+(b_2*d-x3_2-x4_2)*x2_0-2*x2_1*(-b_1*d+x3_1+x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a-x3_0-x4_0)*x2_3+(3*b_1*x2_2+3*b_2*x2_1+b_3*x2_0)*d+(-x3_3-x4_3)*x2_0+(-3*x3_2-3*x4_2)*x2_1-3*x2_2*(x3_1+x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3)*x2_1+(-6*x3_2-6*x4_2)*x2_2-4*x2_3*(x3_1+x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(a-x3_0-x4_0)*x2_5+(-x3_5-x4_5)*x2_0+(-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3)*x2_2+(-10*x3_2-10*x4_2)*x2_3-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(a-x3_0-x4_0)*x2_6+(-x3_6-x4_6)*x2_0+(-6*x3_5-6*x4_5)*x2_1+(-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3)*x2_3+(-15*x3_2-15*x4_2)*x2_4-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(a-x3_0-x4_0)*x2_7+(-x3_7-x4_7)*x2_0+(-7*x3_6-7*x4_6)*x2_1+(-21*x3_5-21*x4_5)*x2_2+(-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, y_faux2_0-x3_1, y_faux3_0-x3_5]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = x3_1, y_faux3_0 = x3_5]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability without tr. basis:  525956485400000000000000
Random sample for the outputs and inputs is generated from  [a = .3406928022e24, d = .4979501311e24, k3 = .6227461383e24, k4 = .5338027574e24, k5 = .2257508932e24, k6 = .6862742239e24, k7 = .6170156559e24, b_0 = .5078249330e24, x1_0 = .4063819968e24, x2_0 = .2836102256e24, x3_0 = .5142327194e24, x4_0 = .1830199275e23, x5_0 = .7234144294e23]
The polynomial system widehat{E^t} contains  69 equations in  61  variables
            "new_logs/Tumor/transcendence_188_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, x3_1, x3_6]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b}
Algebraically independent parameters among derivatives: {x3_1, x3_6}
	Adding ODEs: [diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t)]
	New system: [diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t)]

=== Input info ===
State variables:          [b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t)]
Input variables:          []
Parameters in equations:  [a, d, k3, k4, k5, k6, k7]
===================

memory used=20450.8MB, alloc=215.8MB, time=187.40
	Adding new y-equations: [y_faux2_0 = x3_1, y_faux3_0 = x3_6]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a-x3_0-x4_0)*x2_1-x2_0*(-b_1*d+x3_1+x4_1))*k5+k4*x2_1-k6*x3_1-k6*x4_1-x1_1*k3+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a-x3_0-x4_0)*x2_2+(b_2*d-x3_2-x4_2)*x2_0-2*x2_1*(-b_1*d+x3_1+x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a-x3_0-x4_0)*x2_3+(3*b_1*x2_2+3*b_2*x2_1+b_3*x2_0)*d+(-x3_3-x4_3)*x2_0+(-3*x3_2-3*x4_2)*x2_1-3*x2_2*(x3_1+x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3)*x2_1+(-6*x3_2-6*x4_2)*x2_2-4*x2_3*(x3_1+x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(a-x3_0-x4_0)*x2_5+(-x3_5-x4_5)*x2_0+(-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3)*x2_2+(-10*x3_2-10*x4_2)*x2_3-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(a-x3_0-x4_0)*x2_6+(-x3_6-x4_6)*x2_0+(-6*x3_5-6*x4_5)*x2_1+(-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3)*x2_3+(-15*x3_2-15*x4_2)*x2_4-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(a-x3_0-x4_0)*x2_7+(-x3_7-x4_7)*x2_0+(-7*x3_6-7*x4_6)*x2_1+(-21*x3_5-21*x4_5)*x2_2+(-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, y_faux2_0-x3_1, y_faux3_0-x3_6]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = x3_1, y_faux3_0 = x3_6]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability without tr. basis:  525956485400000000000000
Random sample for the outputs and inputs is generated from  [a = .4447348825e24, d = .4524932822e24, k3 = .6969868891e24, k4 = .1510216697e24, k5 = .2690576556e24, k6 = .4583910159e24, k7 = .6222393477e24, b_0 = .1693191694e24, x1_0 = .6227594776e24, x2_0 = .4019271243e24, x3_0 = .6188174879e23, x4_0 = .6034630709e24, x5_0 = .3035320847e24]
The polynomial system widehat{E^t} contains  69 equations in  61  variables
            "new_logs/Tumor/transcendence_189_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, x3_1, x3_7]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b}
Algebraically independent parameters among derivatives: {x3_1, x3_7}
	Adding ODEs: [diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t)]
	New system: [diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t)]

=== Input info ===
State variables:          [b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t)]
Input variables:          []
Parameters in equations:  [a, d, k3, k4, k5, k6, k7]
===================

memory used=20606.9MB, alloc=215.8MB, time=188.77
memory used=20737.9MB, alloc=215.8MB, time=189.79
	Adding new y-equations: [y_faux2_0 = x3_1, y_faux3_0 = x3_7]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a-x3_0-x4_0)*x2_1-x2_0*(-b_1*d+x3_1+x4_1))*k5+k4*x2_1-k6*x3_1-k6*x4_1-x1_1*k3+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a-x3_0-x4_0)*x2_2+(b_2*d-x3_2-x4_2)*x2_0-2*x2_1*(-b_1*d+x3_1+x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a-x3_0-x4_0)*x2_3+(3*b_1*x2_2+3*b_2*x2_1+b_3*x2_0)*d+(-x3_3-x4_3)*x2_0+(-3*x3_2-3*x4_2)*x2_1-3*x2_2*(x3_1+x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3)*x2_1+(-6*x3_2-6*x4_2)*x2_2-4*x2_3*(x3_1+x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(a-x3_0-x4_0)*x2_5+(-x3_5-x4_5)*x2_0+(-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3)*x2_2+(-10*x3_2-10*x4_2)*x2_3-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(a-x3_0-x4_0)*x2_6+(-x3_6-x4_6)*x2_0+(-6*x3_5-6*x4_5)*x2_1+(-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3)*x2_3+(-15*x3_2-15*x4_2)*x2_4-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(a-x3_0-x4_0)*x2_7+(-x3_7-x4_7)*x2_0+(-7*x3_6-7*x4_6)*x2_1+(-21*x3_5-21*x4_5)*x2_2+(-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, y_faux2_0-x3_1, y_faux3_0-x3_7]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = x3_1, y_faux3_0 = x3_7]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability without tr. basis:  525956485400000000000000
Random sample for the outputs and inputs is generated from  [a = .4023466124e24, d = .5052117766e24, k3 = .3463429260e24, k4 = .2097104765e24, k5 = .5361870256e24, k6 = .5825056804e24, k7 = .5599743357e24, b_0 = .4657542945e24, x1_0 = .2631429584e24, x2_0 = .5565543834e24, x3_0 = .5782003981e24, x4_0 = .4510380328e24, x5_0 = .2088406820e24]
The polynomial system widehat{E^t} contains  69 equations in  61  variables
            "new_logs/Tumor/transcendence_190_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, x3_1, x4(0)]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b}
Algebraically independent parameters among derivatives: {x3_1, x4(0)}
	Adding ODEs: [diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t)]
	New system: [diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t)]

=== Input info ===
State variables:          [b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t)]
Input variables:          []
Parameters in equations:  [a, d, k3, k4, k5, k6, k7]
===================

memory used=20891.6MB, alloc=215.8MB, time=191.17
	Adding new y-equations: [y_faux2_0 = x3_1, y_faux3_0 = x4_0]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a-x3_0-x4_0)*x2_1-x2_0*(-b_1*d+x3_1+x4_1))*k5+k4*x2_1-k6*x3_1-k6*x4_1-x1_1*k3+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a-x3_0-x4_0)*x2_2+(b_2*d-x3_2-x4_2)*x2_0-2*x2_1*(-b_1*d+x3_1+x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a-x3_0-x4_0)*x2_3+(3*b_1*x2_2+3*b_2*x2_1+b_3*x2_0)*d+(-x3_3-x4_3)*x2_0+(-3*x3_2-3*x4_2)*x2_1-3*x2_2*(x3_1+x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3)*x2_1+(-6*x3_2-6*x4_2)*x2_2-4*x2_3*(x3_1+x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(a-x3_0-x4_0)*x2_5+(-x3_5-x4_5)*x2_0+(-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3)*x2_2+(-10*x3_2-10*x4_2)*x2_3-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(a-x3_0-x4_0)*x2_6+(-x3_6-x4_6)*x2_0+(-6*x3_5-6*x4_5)*x2_1+(-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3)*x2_3+(-15*x3_2-15*x4_2)*x2_4-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(a-x3_0-x4_0)*x2_7+(-x3_7-x4_7)*x2_0+(-7*x3_6-7*x4_6)*x2_1+(-21*x3_5-21*x4_5)*x2_2+(-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, y_faux2_0-x3_1, y_faux3_0-x4_0]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = x3_1, y_faux3_0 = x4_0]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability without tr. basis:  525956485400000000000000
Random sample for the outputs and inputs is generated from  [a = .6153576686e24, d = .2854639294e23, k3 = .2092036744e24, k4 = .5773379626e24, k5 = .3260058445e24, k6 = .4159096199e24, k7 = .3777023992e24, b_0 = .2105060887e24, x1_0 = .4675348556e24, x2_0 = .2892145319e24, x3_0 = .1639692893e24, x4_0 = .4610867082e24, x5_0 = .8028004575e23]
The polynomial system widehat{E^t} contains  69 equations in  61  variables
            "new_logs/Tumor/transcendence_191_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, x3_1, x4_1]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters (candidates) [b, x3_1, x4_2]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b}
Algebraically independent parameters among derivatives: {x3_1, x4_2}
	Adding ODEs: [diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t)]
	New system: [diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t)]

=== Input info ===
State variables:          [b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t)]
Input variables:          []
Parameters in equations:  [a, d, k3, k4, k5, k6, k7]
===================

memory used=21050.3MB, alloc=215.8MB, time=192.58
memory used=21182.8MB, alloc=215.8MB, time=193.64
	Adding new y-equations: [y_faux2_0 = x3_1, y_faux3_0 = x4_2]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a-x3_0-x4_0)*x2_1-x2_0*(-b_1*d+x3_1+x4_1))*k5+k4*x2_1-k6*x3_1-k6*x4_1-x1_1*k3+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a-x3_0-x4_0)*x2_2+(b_2*d-x3_2-x4_2)*x2_0-2*x2_1*(-b_1*d+x3_1+x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a-x3_0-x4_0)*x2_3+(3*b_1*x2_2+3*b_2*x2_1+b_3*x2_0)*d+(-x3_3-x4_3)*x2_0+(-3*x3_2-3*x4_2)*x2_1-3*x2_2*(x3_1+x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3)*x2_1+(-6*x3_2-6*x4_2)*x2_2-4*x2_3*(x3_1+x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(a-x3_0-x4_0)*x2_5+(-x3_5-x4_5)*x2_0+(-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3)*x2_2+(-10*x3_2-10*x4_2)*x2_3-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(a-x3_0-x4_0)*x2_6+(-x3_6-x4_6)*x2_0+(-6*x3_5-6*x4_5)*x2_1+(-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3)*x2_3+(-15*x3_2-15*x4_2)*x2_4-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(a-x3_0-x4_0)*x2_7+(-x3_7-x4_7)*x2_0+(-7*x3_6-7*x4_6)*x2_1+(-21*x3_5-21*x4_5)*x2_2+(-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, y_faux2_0-x3_1, y_faux3_0-x4_2]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = x3_1, y_faux3_0 = x4_2]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability without tr. basis:  525956485400000000000000
Random sample for the outputs and inputs is generated from  [a = .3553086969e24, d = .6855380167e24, k3 = .5122879239e23, k4 = .5579973458e24, k5 = .6309240978e24, k6 = .3577726389e24, k7 = .2623469705e24, b_0 = .6077409157e24, x1_0 = .1243322211e24, x2_0 = .5272553377e24, x3_0 = .3062872575e24, x4_0 = .3139051281e24, x5_0 = .5662912266e24]
The polynomial system widehat{E^t} contains  69 equations in  61  variables
            "new_logs/Tumor/transcendence_193_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, x3_1, x4_3]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b}
Algebraically independent parameters among derivatives: {x3_1, x4_3}
	Adding ODEs: [diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t)]
	New system: [diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t)]

=== Input info ===
State variables:          [b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t)]
Input variables:          []
Parameters in equations:  [a, d, k3, k4, k5, k6, k7]
===================

memory used=21341.1MB, alloc=215.8MB, time=195.11
	Adding new y-equations: [y_faux2_0 = x3_1, y_faux3_0 = x4_3]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a-x3_0-x4_0)*x2_1-x2_0*(-b_1*d+x3_1+x4_1))*k5+k4*x2_1-k6*x3_1-k6*x4_1-x1_1*k3+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a-x3_0-x4_0)*x2_2+(b_2*d-x3_2-x4_2)*x2_0-2*x2_1*(-b_1*d+x3_1+x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a-x3_0-x4_0)*x2_3+(3*b_1*x2_2+3*b_2*x2_1+b_3*x2_0)*d+(-x3_3-x4_3)*x2_0+(-3*x3_2-3*x4_2)*x2_1-3*x2_2*(x3_1+x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3)*x2_1+(-6*x3_2-6*x4_2)*x2_2-4*x2_3*(x3_1+x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(a-x3_0-x4_0)*x2_5+(-x3_5-x4_5)*x2_0+(-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3)*x2_2+(-10*x3_2-10*x4_2)*x2_3-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(a-x3_0-x4_0)*x2_6+(-x3_6-x4_6)*x2_0+(-6*x3_5-6*x4_5)*x2_1+(-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3)*x2_3+(-15*x3_2-15*x4_2)*x2_4-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(a-x3_0-x4_0)*x2_7+(-x3_7-x4_7)*x2_0+(-7*x3_6-7*x4_6)*x2_1+(-21*x3_5-21*x4_5)*x2_2+(-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, y_faux2_0-x3_1, y_faux3_0-x4_3]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = x3_1, y_faux3_0 = x4_3]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability without tr. basis:  525956485400000000000000
Random sample for the outputs and inputs is generated from  [a = .2302709846e24, d = .8707195477e22, k3 = .7881633137e23, k4 = .4500581914e24, k5 = .1349110914e24, k6 = .4930377919e24, k7 = .6936955153e24, b_0 = .4742639632e24, x1_0 = .6238416505e24, x2_0 = .2302782344e24, x3_0 = .4926621114e23, x4_0 = .2561296022e24, x5_0 = .4796680273e24]
The polynomial system widehat{E^t} contains  69 equations in  61  variables
            "new_logs/Tumor/transcendence_194_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, x3_1, x4_4]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b}
Algebraically independent parameters among derivatives: {x3_1, x4_4}
	Adding ODEs: [diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t)]
	New system: [diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t)]

=== Input info ===
State variables:          [b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t)]
Input variables:          []
Parameters in equations:  [a, d, k3, k4, k5, k6, k7]
===================

memory used=21499.6MB, alloc=215.8MB, time=196.53
memory used=21626.9MB, alloc=215.8MB, time=197.52
	Adding new y-equations: [y_faux2_0 = x3_1, y_faux3_0 = x4_4]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a-x3_0-x4_0)*x2_1-x2_0*(-b_1*d+x3_1+x4_1))*k5+k4*x2_1-k6*x3_1-k6*x4_1-x1_1*k3+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a-x3_0-x4_0)*x2_2+(b_2*d-x3_2-x4_2)*x2_0-2*x2_1*(-b_1*d+x3_1+x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a-x3_0-x4_0)*x2_3+(3*b_1*x2_2+3*b_2*x2_1+b_3*x2_0)*d+(-x3_3-x4_3)*x2_0+(-3*x3_2-3*x4_2)*x2_1-3*x2_2*(x3_1+x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3)*x2_1+(-6*x3_2-6*x4_2)*x2_2-4*x2_3*(x3_1+x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(a-x3_0-x4_0)*x2_5+(-x3_5-x4_5)*x2_0+(-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3)*x2_2+(-10*x3_2-10*x4_2)*x2_3-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(a-x3_0-x4_0)*x2_6+(-x3_6-x4_6)*x2_0+(-6*x3_5-6*x4_5)*x2_1+(-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3)*x2_3+(-15*x3_2-15*x4_2)*x2_4-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(a-x3_0-x4_0)*x2_7+(-x3_7-x4_7)*x2_0+(-7*x3_6-7*x4_6)*x2_1+(-21*x3_5-21*x4_5)*x2_2+(-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, y_faux2_0-x3_1, y_faux3_0-x4_4]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = x3_1, y_faux3_0 = x4_4]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability without tr. basis:  525956485400000000000000
Random sample for the outputs and inputs is generated from  [a = .3722237064e24, d = .2688574756e24, k3 = .3452719436e24, k4 = .1045984413e24, k5 = .1342121358e24, k6 = .5317517788e24, k7 = .1678993677e24, b_0 = .5358089438e24, x1_0 = .4306841591e24, x2_0 = .5885319853e24, x3_0 = .6460626384e24, x4_0 = .1467965707e24, x5_0 = .4705022610e24]
The polynomial system widehat{E^t} contains  69 equations in  61  variables
            "new_logs/Tumor/transcendence_195_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, x3_1, x4_5]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b}
Algebraically independent parameters among derivatives: {x3_1, x4_5}
	Adding ODEs: [diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t)]
	New system: [diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t)]

=== Input info ===
State variables:          [b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t)]
Input variables:          []
Parameters in equations:  [a, d, k3, k4, k5, k6, k7]
===================

memory used=21786.5MB, alloc=215.8MB, time=199.01
	Adding new y-equations: [y_faux2_0 = x3_1, y_faux3_0 = x4_5]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a-x3_0-x4_0)*x2_1-x2_0*(-b_1*d+x3_1+x4_1))*k5+k4*x2_1-k6*x3_1-k6*x4_1-x1_1*k3+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a-x3_0-x4_0)*x2_2+(b_2*d-x3_2-x4_2)*x2_0-2*x2_1*(-b_1*d+x3_1+x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a-x3_0-x4_0)*x2_3+(3*b_1*x2_2+3*b_2*x2_1+b_3*x2_0)*d+(-x3_3-x4_3)*x2_0+(-3*x3_2-3*x4_2)*x2_1-3*x2_2*(x3_1+x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3)*x2_1+(-6*x3_2-6*x4_2)*x2_2-4*x2_3*(x3_1+x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(a-x3_0-x4_0)*x2_5+(-x3_5-x4_5)*x2_0+(-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3)*x2_2+(-10*x3_2-10*x4_2)*x2_3-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(a-x3_0-x4_0)*x2_6+(-x3_6-x4_6)*x2_0+(-6*x3_5-6*x4_5)*x2_1+(-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3)*x2_3+(-15*x3_2-15*x4_2)*x2_4-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(a-x3_0-x4_0)*x2_7+(-x3_7-x4_7)*x2_0+(-7*x3_6-7*x4_6)*x2_1+(-21*x3_5-21*x4_5)*x2_2+(-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, y_faux2_0-x3_1, y_faux3_0-x4_5]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = x3_1, y_faux3_0 = x4_5]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability without tr. basis:  525956485400000000000000
Random sample for the outputs and inputs is generated from  [a = .3666271509e24, d = .4302042654e24, k3 = .5967851366e24, k4 = .4994460156e24, k5 = .3780144210e24, k6 = .1404020966e24, k7 = .2661389496e24, b_0 = .5199562955e23, x1_0 = .6977662454e24, x2_0 = .6651196816e24, x3_0 = .4357418263e24, x4_0 = .2464689889e24, x5_0 = .4308121410e23]
The polynomial system widehat{E^t} contains  69 equations in  61  variables
            "new_logs/Tumor/transcendence_196_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, x3_1, x4_6]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b}
Algebraically independent parameters among derivatives: {x3_1, x4_6}
	Adding ODEs: [diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t)]
	New system: [diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t)]

=== Input info ===
State variables:          [b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t)]
Input variables:          []
Parameters in equations:  [a, d, k3, k4, k5, k6, k7]
===================

memory used=21945.7MB, alloc=215.8MB, time=200.52
memory used=22071.2MB, alloc=215.8MB, time=201.49
	Adding new y-equations: [y_faux2_0 = x3_1, y_faux3_0 = x4_6]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a-x3_0-x4_0)*x2_1-x2_0*(-b_1*d+x3_1+x4_1))*k5+k4*x2_1-k6*x3_1-k6*x4_1-x1_1*k3+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a-x3_0-x4_0)*x2_2+(b_2*d-x3_2-x4_2)*x2_0-2*x2_1*(-b_1*d+x3_1+x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a-x3_0-x4_0)*x2_3+(3*b_1*x2_2+3*b_2*x2_1+b_3*x2_0)*d+(-x3_3-x4_3)*x2_0+(-3*x3_2-3*x4_2)*x2_1-3*x2_2*(x3_1+x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3)*x2_1+(-6*x3_2-6*x4_2)*x2_2-4*x2_3*(x3_1+x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(a-x3_0-x4_0)*x2_5+(-x3_5-x4_5)*x2_0+(-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3)*x2_2+(-10*x3_2-10*x4_2)*x2_3-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(a-x3_0-x4_0)*x2_6+(-x3_6-x4_6)*x2_0+(-6*x3_5-6*x4_5)*x2_1+(-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3)*x2_3+(-15*x3_2-15*x4_2)*x2_4-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(a-x3_0-x4_0)*x2_7+(-x3_7-x4_7)*x2_0+(-7*x3_6-7*x4_6)*x2_1+(-21*x3_5-21*x4_5)*x2_2+(-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, y_faux2_0-x3_1, y_faux3_0-x4_6]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = x3_1, y_faux3_0 = x4_6]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability without tr. basis:  525956485400000000000000
Random sample for the outputs and inputs is generated from  [a = .1672418616e24, d = .3591146601e24, k3 = .4896336142e24, k4 = .6052426890e24, k5 = .2801292027e24, k6 = .5856952700e24, k7 = .5818843566e24, b_0 = .4898075942e24, x1_0 = .4678139031e24, x2_0 = .5664528217e24, x3_0 = .5850799095e24, x4_0 = .6773270299e24, x5_0 = .6425028831e23]
The polynomial system widehat{E^t} contains  69 equations in  61  variables
            "new_logs/Tumor/transcendence_197_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, x3_1, x4_7]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b}
Algebraically independent parameters among derivatives: {x3_1, x4_7}
	Adding ODEs: [diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t)]
	New system: [diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t)]

=== Input info ===
State variables:          [b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t)]
Input variables:          []
Parameters in equations:  [a, d, k3, k4, k5, k6, k7]
===================

memory used=22222.6MB, alloc=215.8MB, time=202.98
	Adding new y-equations: [y_faux2_0 = x3_1, y_faux3_0 = x4_7]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a-x3_0-x4_0)*x2_1-x2_0*(-b_1*d+x3_1+x4_1))*k5+k4*x2_1-k6*x3_1-k6*x4_1-x1_1*k3+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a-x3_0-x4_0)*x2_2+(b_2*d-x3_2-x4_2)*x2_0-2*x2_1*(-b_1*d+x3_1+x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a-x3_0-x4_0)*x2_3+(3*b_1*x2_2+3*b_2*x2_1+b_3*x2_0)*d+(-x3_3-x4_3)*x2_0+(-3*x3_2-3*x4_2)*x2_1-3*x2_2*(x3_1+x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3)*x2_1+(-6*x3_2-6*x4_2)*x2_2-4*x2_3*(x3_1+x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(a-x3_0-x4_0)*x2_5+(-x3_5-x4_5)*x2_0+(-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3)*x2_2+(-10*x3_2-10*x4_2)*x2_3-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(a-x3_0-x4_0)*x2_6+(-x3_6-x4_6)*x2_0+(-6*x3_5-6*x4_5)*x2_1+(-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3)*x2_3+(-15*x3_2-15*x4_2)*x2_4-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(a-x3_0-x4_0)*x2_7+(-x3_7-x4_7)*x2_0+(-7*x3_6-7*x4_6)*x2_1+(-21*x3_5-21*x4_5)*x2_2+(-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, y_faux2_0-x3_1, y_faux3_0-x4_7]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = x3_1, y_faux3_0 = x4_7]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability without tr. basis:  525956485400000000000000
Random sample for the outputs and inputs is generated from  [a = .4635639141e24, d = .1326915289e24, k3 = .6227179126e24, k4 = .2410738568e24, k5 = .2330986340e24, k6 = .5964151177e24, k7 = .4350061154e24, b_0 = .4194297938e24, x1_0 = .2842698208e24, x2_0 = .1398125984e23, x3_0 = .5858953411e24, x4_0 = .8071768579e23, x5_0 = .5232623588e24]
The polynomial system widehat{E^t} contains  69 equations in  61  variables
            "new_logs/Tumor/transcendence_198_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, x3_2, x3_3]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b}
Algebraically independent parameters among derivatives: {x3_2, x3_3}
	Adding ODEs: [diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t)]
	New system: [diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t)]

=== Input info ===
State variables:          [b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t)]
Input variables:          []
Parameters in equations:  [a, d, k3, k4, k5, k6, k7]
===================

memory used=22378.8MB, alloc=215.8MB, time=204.37
memory used=22504.7MB, alloc=215.8MB, time=205.30
	Adding new y-equations: [y_faux2_0 = x3_2, y_faux3_0 = x3_3]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a-x3_0-x4_0)*x2_1-x2_0*(-b_1*d+x3_1+x4_1))*k5+k4*x2_1-k6*x3_1-k6*x4_1-x1_1*k3+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a-x3_0-x4_0)*x2_2+(b_2*d-x3_2-x4_2)*x2_0-2*x2_1*(-b_1*d+x3_1+x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a-x3_0-x4_0)*x2_3+(3*b_1*x2_2+3*b_2*x2_1+b_3*x2_0)*d+(-x3_3-x4_3)*x2_0+(-3*x3_2-3*x4_2)*x2_1-3*x2_2*(x3_1+x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3)*x2_1+(-6*x3_2-6*x4_2)*x2_2-4*x2_3*(x3_1+x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(a-x3_0-x4_0)*x2_5+(-x3_5-x4_5)*x2_0+(-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3)*x2_2+(-10*x3_2-10*x4_2)*x2_3-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(a-x3_0-x4_0)*x2_6+(-x3_6-x4_6)*x2_0+(-6*x3_5-6*x4_5)*x2_1+(-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3)*x2_3+(-15*x3_2-15*x4_2)*x2_4-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(a-x3_0-x4_0)*x2_7+(-x3_7-x4_7)*x2_0+(-7*x3_6-7*x4_6)*x2_1+(-21*x3_5-21*x4_5)*x2_2+(-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, y_faux2_0-x3_2, y_faux3_0-x3_3]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = x3_2, y_faux3_0 = x3_3]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability without tr. basis:  525956485400000000000000
Random sample for the outputs and inputs is generated from  [a = .6613544154e23, d = .4898099918e24, k3 = .8754025112e23, k4 = .7962384662e23, k5 = .1352518263e24, k6 = .5662223773e24, k7 = .3498246265e24, b_0 = .5751999570e24, x1_0 = .3847821160e24, x2_0 = .4024644154e24, x3_0 = .9854019698e23, x4_0 = .6631677779e23, x5_0 = .2279018514e24]
The polynomial system widehat{E^t} contains  69 equations in  61  variables
            "new_logs/Tumor/transcendence_199_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, x3_2, x3_4]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b}
Algebraically independent parameters among derivatives: {x3_2, x3_4}
	Adding ODEs: [diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t)]
	New system: [diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t)]

=== Input info ===
State variables:          [b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t)]
Input variables:          []
Parameters in equations:  [a, d, k3, k4, k5, k6, k7]
===================

memory used=22661.5MB, alloc=215.8MB, time=206.75
	Adding new y-equations: [y_faux2_0 = x3_2, y_faux3_0 = x3_4]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a-x3_0-x4_0)*x2_1-x2_0*(-b_1*d+x3_1+x4_1))*k5+k4*x2_1-k6*x3_1-k6*x4_1-x1_1*k3+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a-x3_0-x4_0)*x2_2+(b_2*d-x3_2-x4_2)*x2_0-2*x2_1*(-b_1*d+x3_1+x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a-x3_0-x4_0)*x2_3+(3*b_1*x2_2+3*b_2*x2_1+b_3*x2_0)*d+(-x3_3-x4_3)*x2_0+(-3*x3_2-3*x4_2)*x2_1-3*x2_2*(x3_1+x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3)*x2_1+(-6*x3_2-6*x4_2)*x2_2-4*x2_3*(x3_1+x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(a-x3_0-x4_0)*x2_5+(-x3_5-x4_5)*x2_0+(-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3)*x2_2+(-10*x3_2-10*x4_2)*x2_3-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(a-x3_0-x4_0)*x2_6+(-x3_6-x4_6)*x2_0+(-6*x3_5-6*x4_5)*x2_1+(-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3)*x2_3+(-15*x3_2-15*x4_2)*x2_4-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(a-x3_0-x4_0)*x2_7+(-x3_7-x4_7)*x2_0+(-7*x3_6-7*x4_6)*x2_1+(-21*x3_5-21*x4_5)*x2_2+(-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, y_faux2_0-x3_2, y_faux3_0-x3_4]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = x3_2, y_faux3_0 = x3_4]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability without tr. basis:  525956485400000000000000
Random sample for the outputs and inputs is generated from  [a = .1083469112e24, d = .4177110839e24, k3 = .5206666497e24, k4 = .2073931666e24, k5 = .5647232568e24, k6 = .2278911387e24, k7 = .2196069879e24, b_0 = .4757951249e23, x1_0 = .6650533806e24, x2_0 = .6269514305e23, x3_0 = .2401921518e24, x4_0 = .3086688119e24, x5_0 = .5342091675e24]
The polynomial system widehat{E^t} contains  69 equations in  61  variables
            "new_logs/Tumor/transcendence_200_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, x3_2, x3_5]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b}
Algebraically independent parameters among derivatives: {x3_2, x3_5}
	Adding ODEs: [diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t)]
	New system: [diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t)]

=== Input info ===
State variables:          [b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t)]
Input variables:          []
Parameters in equations:  [a, d, k3, k4, k5, k6, k7]
===================

memory used=22823.6MB, alloc=215.8MB, time=208.17
memory used=22948.7MB, alloc=215.8MB, time=209.13
	Adding new y-equations: [y_faux2_0 = x3_2, y_faux3_0 = x3_5]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a-x3_0-x4_0)*x2_1-x2_0*(-b_1*d+x3_1+x4_1))*k5+k4*x2_1-k6*x3_1-k6*x4_1-x1_1*k3+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a-x3_0-x4_0)*x2_2+(b_2*d-x3_2-x4_2)*x2_0-2*x2_1*(-b_1*d+x3_1+x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a-x3_0-x4_0)*x2_3+(3*b_1*x2_2+3*b_2*x2_1+b_3*x2_0)*d+(-x3_3-x4_3)*x2_0+(-3*x3_2-3*x4_2)*x2_1-3*x2_2*(x3_1+x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3)*x2_1+(-6*x3_2-6*x4_2)*x2_2-4*x2_3*(x3_1+x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(a-x3_0-x4_0)*x2_5+(-x3_5-x4_5)*x2_0+(-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3)*x2_2+(-10*x3_2-10*x4_2)*x2_3-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(a-x3_0-x4_0)*x2_6+(-x3_6-x4_6)*x2_0+(-6*x3_5-6*x4_5)*x2_1+(-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3)*x2_3+(-15*x3_2-15*x4_2)*x2_4-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(a-x3_0-x4_0)*x2_7+(-x3_7-x4_7)*x2_0+(-7*x3_6-7*x4_6)*x2_1+(-21*x3_5-21*x4_5)*x2_2+(-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, y_faux2_0-x3_2, y_faux3_0-x3_5]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = x3_2, y_faux3_0 = x3_5]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability without tr. basis:  525956485400000000000000
Random sample for the outputs and inputs is generated from  [a = .5182723453e24, d = .4700086489e24, k3 = .3199434419e24, k4 = .3073107567e24, k5 = .6758351146e24, k6 = .2963470664e24, k7 = .3812250971e24, b_0 = .2793689178e24, x1_0 = .9118100324e23, x2_0 = .1445281248e24, x3_0 = .6025090712e24, x4_0 = .3198073237e24, x5_0 = .2026906264e24]
The polynomial system widehat{E^t} contains  69 equations in  61  variables
            "new_logs/Tumor/transcendence_201_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, x3_2, x3_6]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b}
Algebraically independent parameters among derivatives: {x3_2, x3_6}
	Adding ODEs: [diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t)]
	New system: [diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t)]

=== Input info ===
State variables:          [b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t)]
Input variables:          []
Parameters in equations:  [a, d, k3, k4, k5, k6, k7]
===================

memory used=23110.9MB, alloc=215.8MB, time=210.58
	Adding new y-equations: [y_faux2_0 = x3_2, y_faux3_0 = x3_6]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a-x3_0-x4_0)*x2_1-x2_0*(-b_1*d+x3_1+x4_1))*k5+k4*x2_1-k6*x3_1-k6*x4_1-x1_1*k3+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a-x3_0-x4_0)*x2_2+(b_2*d-x3_2-x4_2)*x2_0-2*x2_1*(-b_1*d+x3_1+x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a-x3_0-x4_0)*x2_3+(3*b_1*x2_2+3*b_2*x2_1+b_3*x2_0)*d+(-x3_3-x4_3)*x2_0+(-3*x3_2-3*x4_2)*x2_1-3*x2_2*(x3_1+x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3)*x2_1+(-6*x3_2-6*x4_2)*x2_2-4*x2_3*(x3_1+x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(a-x3_0-x4_0)*x2_5+(-x3_5-x4_5)*x2_0+(-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3)*x2_2+(-10*x3_2-10*x4_2)*x2_3-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(a-x3_0-x4_0)*x2_6+(-x3_6-x4_6)*x2_0+(-6*x3_5-6*x4_5)*x2_1+(-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3)*x2_3+(-15*x3_2-15*x4_2)*x2_4-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(a-x3_0-x4_0)*x2_7+(-x3_7-x4_7)*x2_0+(-7*x3_6-7*x4_6)*x2_1+(-21*x3_5-21*x4_5)*x2_2+(-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, y_faux2_0-x3_2, y_faux3_0-x3_6]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = x3_2, y_faux3_0 = x3_6]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability without tr. basis:  525956485400000000000000
Random sample for the outputs and inputs is generated from  [a = .1712162506e24, d = .6571010595e24, k3 = .1295033018e24, k4 = .6635007477e24, k5 = .4816177157e24, k6 = .7074342031e23, k7 = .1344949818e24, b_0 = .3530508851e24, x1_0 = .4144653132e24, x2_0 = .2755898959e23, x3_0 = .8302300319e23, x4_0 = .4008059546e24, x5_0 = .3282320795e24]
The polynomial system widehat{E^t} contains  69 equations in  61  variables
            "new_logs/Tumor/transcendence_202_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, x3_2, x3_7]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b}
Algebraically independent parameters among derivatives: {x3_2, x3_7}
	Adding ODEs: [diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t)]
	New system: [diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t)]

=== Input info ===
State variables:          [b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t)]
Input variables:          []
Parameters in equations:  [a, d, k3, k4, k5, k6, k7]
===================

memory used=23262.4MB, alloc=215.8MB, time=211.98
memory used=23387.2MB, alloc=215.8MB, time=212.95
	Adding new y-equations: [y_faux2_0 = x3_2, y_faux3_0 = x3_7]
	New system: [y1_0-x5_0, -k7*x1_0+x5_1, y_faux1_0-b_0, b_1, -x5_1+y1_1, -k7*x1_1+x5_2, k3*x1_0-k4*x2_0+k7*x1_0+x1_1, -x5_2+y1_2, -k7*x1_2+x5_3, (k3+k7)*x1_1+x1_2-k4*x2_1, b_0*d*k5*x2_0+a*k5*x2_0-k5*x2_0*x3_0-k5*x2_0*x4_0-k3*x1_0+k4*x2_0-k6*x3_0-k6*x4_0+x2_1, -x5_3+y1_3, -k7*x1_3+x5_4, (k3+k7)*x1_2+x1_3-k4*x2_2, ((b_0*d+a-x3_0-x4_0)*x2_1-x2_0*(-b_1*d+x3_1+x4_1))*k5+k4*x2_1-k6*x3_1-k6*x4_1-x1_1*k3+x2_2, -a*k5*x2_0+k5*x2_0*x3_0+k6*x3_0+x3_1, -b_0*d*k5*x2_0+k5*x2_0*x4_0+k6*x4_0+x4_1, -x5_4+y1_4, -k7*x1_4+x5_5, (k3+k7)*x1_3+x1_4-k4*x2_3, ((b_0*d+a-x3_0-x4_0)*x2_2+(b_2*d-x3_2-x4_2)*x2_0-2*x2_1*(-b_1*d+x3_1+x4_1))*k5-x1_2*k3+k4*x2_2-k6*x3_2-k6*x4_2+x2_3, b_2, ((-a+x3_0)*x2_1+x2_0*x3_1)*k5+k6*x3_1+x3_2, ((-b_1*d+x4_1)*x2_0-x2_1*(b_0*d-x4_0))*k5+k6*x4_1+x4_2, -x5_5+y1_5, -k7*x1_5+x5_6, (k3+k7)*x1_4+x1_5-k4*x2_4, ((b_0*d+a-x3_0-x4_0)*x2_3+(3*b_1*x2_2+3*b_2*x2_1+b_3*x2_0)*d+(-x3_3-x4_3)*x2_0+(-3*x3_2-3*x4_2)*x2_1-3*x2_2*(x3_1+x4_1))*k5-x1_3*k3+k4*x2_3-k6*x3_3-k6*x4_3+x2_4, b_3, ((-a+x3_0)*x2_2+x2_0*x3_2+2*x2_1*x3_1)*k5+k6*x3_2+x3_3, ((-b_0*x2_2-2*b_1*x2_1-b_2*x2_0)*d+x4_0*x2_2+2*x2_1*x4_1+x4_2*x2_0)*k5+k6*x4_2+x4_3, -x5_6+y1_6, -k7*x1_6+x5_7, (k3+k7)*x1_5+x1_6-k4*x2_5, ((b_0*d+a-x3_0-x4_0)*x2_4+(4*b_1*x2_3+6*b_2*x2_2+4*b_3*x2_1+b_4*x2_0)*d+(-x3_4-x4_4)*x2_0+(-4*x3_3-4*x4_3)*x2_1+(-6*x3_2-6*x4_2)*x2_2-4*x2_3*(x3_1+x4_1))*k5-x1_4*k3+k4*x2_4-k6*x3_4-k6*x4_4+x2_5, b_4, ((-a+x3_0)*x2_3+3*x3_2*x2_1+x3_3*x2_0+3*x2_2*x3_1)*k5+k6*x3_3+x3_4, ((-b_0*x2_3-3*b_1*x2_2-3*b_2*x2_1-b_3*x2_0)*d+3*x4_1*x2_2+x2_3*x4_0+3*x4_2*x2_1+x4_3*x2_0)*k5+k6*x4_3+x4_4, -x5_7+y1_7, -k7*x1_7+x5_8, (k3+k7)*x1_6+x1_7-k4*x2_6, ((b_0*x2_5+5*b_1*x2_4+10*b_2*x2_3+10*b_3*x2_2+5*b_4*x2_1+b_5*x2_0)*d+(a-x3_0-x4_0)*x2_5+(-x3_5-x4_5)*x2_0+(-5*x3_4-5*x4_4)*x2_1+(-10*x3_3-10*x4_3)*x2_2+(-10*x3_2-10*x4_2)*x2_3-5*x2_4*(x3_1+x4_1))*k5-x1_5*k3+k4*x2_5-k6*x3_5-k6*x4_5+x2_6, b_5, ((-a+x3_0)*x2_4+4*x3_1*x2_3+6*x3_2*x2_2+4*x3_3*x2_1+x3_4*x2_0)*k5+k6*x3_4+x3_5, ((-b_0*x2_4-4*b_1*x2_3-6*b_2*x2_2-4*b_3*x2_1-b_4*x2_0)*d+4*x4_3*x2_1+6*x4_2*x2_2+4*x4_1*x2_3+x4_0*x2_4+x4_4*x2_0)*k5+k6*x4_4+x4_5, -x5_8+y1_8, -k7*x1_8+x5_9, (k3+k7)*x1_7+x1_8-k4*x2_7, ((b_0*x2_6+6*b_1*x2_5+15*b_2*x2_4+20*b_3*x2_3+15*b_4*x2_2+6*b_5*x2_1+b_6*x2_0)*d+(a-x3_0-x4_0)*x2_6+(-x3_6-x4_6)*x2_0+(-6*x3_5-6*x4_5)*x2_1+(-15*x3_4-15*x4_4)*x2_2+(-20*x3_3-20*x4_3)*x2_3+(-15*x3_2-15*x4_2)*x2_4-6*x2_5*(x3_1+x4_1))*k5-x1_6*k3+k4*x2_6-k6*x3_6-k6*x4_6+x2_7, b_6, ((-a+x3_0)*x2_5+5*x3_1*x2_4+10*x3_2*x2_3+10*x3_3*x2_2+5*x3_4*x2_1+x3_5*x2_0)*k5+k6*x3_5+x3_6, ((-b_0*x2_5-5*b_1*x2_4-10*b_2*x2_3-10*b_3*x2_2-5*b_4*x2_1-b_5*x2_0)*d+x2_0*x4_5+5*x4_4*x2_1+10*x4_3*x2_2+10*x4_2*x2_3+5*x4_1*x2_4+x4_0*x2_5)*k5+k6*x4_5+x4_6, -x5_9+y1_9, -k7*x1_9+x5_10, (k3+k7)*x1_8+x1_9-k4*x2_8, ((b_0*x2_7+7*b_1*x2_6+21*b_2*x2_5+35*b_3*x2_4+35*b_4*x2_3+21*b_5*x2_2+7*b_6*x2_1+b_7*x2_0)*d+(a-x3_0-x4_0)*x2_7+(-x3_7-x4_7)*x2_0+(-7*x3_6-7*x4_6)*x2_1+(-21*x3_5-21*x4_5)*x2_2+(-35*x3_4-35*x4_4)*x2_3+(-35*x3_3-35*x4_3)*x2_4+(-21*x3_2-21*x4_2)*x2_5-7*x2_6*(x3_1+x4_1))*k5-x1_7*k3+k4*x2_7-k6*x3_7-k6*x4_7+x2_8, b_7, ((-a+x3_0)*x2_6+6*x3_1*x2_5+15*x3_2*x2_4+20*x3_3*x2_3+15*x3_4*x2_2+6*x2_1*x3_5+x3_6*x2_0)*k5+k6*x3_6+x3_7, ((-b_0*x2_6-6*b_1*x2_5-15*b_2*x2_4-20*b_3*x2_3-15*b_4*x2_2-6*b_5*x2_1-b_6*x2_0)*d+x2_0*x4_6+6*x4_5*x2_1+15*x4_4*x2_2+20*x4_3*x2_3+15*x4_2*x2_4+6*x2_5*x4_1+x4_0*x2_6)*k5+k6*x4_6+x4_7, -x5_10+y1_10, -b_1+y_faux1_1, -b_2+y_faux1_2, -b_3+y_faux1_3, -b_4+y_faux1_4, -b_5+y_faux1_5, -b_6+y_faux1_6, -b_7+y_faux1_7, y_faux2_0-x3_2, y_faux3_0-x3_7]
	New system: [y1_0 = x5_0, y1_1 = x5_1, y1_2 = x5_2, y1_3 = x5_3, y1_4 = x5_4, y1_5 = x5_5, y1_6 = x5_6, y1_7 = x5_7, y1_8 = x5_8, y1_9 = x5_9, y1_10 = x5_10, y1_11 = x5_11, y1_12 = x5_12, y1_13 = x5_13, y1_14 = x5_14, y_faux1_0 = b_0, y_faux1_1 = b_1, y_faux1_2 = b_2, y_faux1_3 = b_3, y_faux1_4 = b_4, y_faux1_5 = b_5, y_faux1_6 = b_6, y_faux1_7 = b_7, y_faux1_8 = b_8, y_faux1_9 = b_9, y_faux1_10 = b_10, y_faux1_11 = b_11, y_faux1_12 = b_12, y_faux1_13 = b_13, y_faux1_14 = b_14, y_faux2_0 = x3_2, y_faux3_0 = x3_7]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability without tr. basis:  525956485400000000000000
Random sample for the outputs and inputs is generated from  [a = .5121219967e24, d = .3367480744e24, k3 = .1491216532e23, k4 = .5827772604e24, k5 = .4780458548e24, k6 = .5426417393e24, k7 = .3356422554e24, b_0 = .3207539807e24, x1_0 = .5477471317e24, x2_0 = .1487377853e24, x3_0 = .3245153484e24, x4_0 = .8751747876e23, x5_0 = .6749738865e24]
The polynomial system widehat{E^t} contains  69 equations in  61  variables
            "new_logs/Tumor/transcendence_203_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [b, x3_2, x4(0)]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {b}
Algebraically independent parameters among derivatives: {x3_2, x4(0)}
	Adding ODEs: [diff(b(t),t) = 0]
	Adding output functions: [y_faux1(t) = b(t)]
	New system: [diff(b(t),t) = 0, diff(x1(t),t) = -(k3+k7)*x1(t)+k4*x2(t), diff(x2(t),t) = k3*x1(t)-(b(t)*d*k5+a*k5+k4)*x2(t)+k6*x3(t)+k6*x4(t)+k5*x2(t)*x3(t)+k5*x2(t)*x4(t), diff(x3(t),t) = a*k5*x2(t)-k6*x3(t)-k5*x2(t)*x3(t), diff(x4(t),t) = b(t)*d*k5*x2(t)-k6*x4(t)-k5*x2(t)*x4(t), diff(x5(t),t) = k7*x1(t), y1(t) = x5(t), y_faux1(t) = b(t)]

=== Input info ===
State variables:          [b(t), x1(t), x2(t), x3(t), x4(t), x5(t)]
Output variables:         [y1(t), y_faux1(t)]
Input variables:          []
Parameters in equations:  [a, d, k3, k4, k5, k6, k7]
===================

