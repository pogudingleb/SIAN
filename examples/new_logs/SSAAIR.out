    |\^/|     Maple 2021 (X86 64 LINUX)
._|\|   |/|_. Copyright (c) Maplesoft, a division of Waterloo Maple Inc. 2021
 \  MAPLE  /  All rights reserved. Maple is a trademark of
 <____ ____>  Waterloo Maple Inc.
      |       Type ? for help.
> read "../generate_tr_bases.mpl";
Warning, (in IdentifiabilityODE) `degrees` is implicitly declared local
|../generate_tr_bases.mpl:321|
Warning, (in IdentifiabilityODE) `degree_table` is implicitly declared local
|../generate_tr_bases.mpl:451|
Warning, (in IdentifiabilityODE) `occurrence_table` is implicitly declared local
|../generate_tr_bases.mpl:452|

> sigma := [
>   diff(Sd(t), t) = -eps_s * b_a * (An(t) + eps_a * Ad(t)) * Sd(t) - h1 * Sd(t) + h2 * Sn(t) - eps_s * b_i * Sd(t) * In(t),
>   diff(Sn(t), t) = -b_i * Sn(t) * In(t) - b_a * (An(t) + eps_a*Ad(t)) * Sn(t) + h1 * Sd(t) - h2 * Sn(t),
>   diff(Ad(t), t) = eps_s * b_i * Sd(t) * In(t) + eps_s * b_a * (An(t) + eps_a * Ad(t)) * Sn(t) + h2 * An(t) - g_ai * Ad(t) - h1 * Ad(t), 
>   diff(An(t), t) = b_i * Sn(t) * In(t) + b_a * (An(t) + eps_a * Ad(t)) * Sn(t) + h1 * Ad(t) - g_ai * An(t) - h2 * An(t), 
>   diff(In(t), t) = f * g_ai * (Ad(t) + An(t)) - dlt * In(t) - g_ir * In(t),
>   diff(R(t), t) = (1-f) * g_ai * (Ad(t) + An(t)) + g_ir * In(t),
>   y1(t) = Sd(t),
>   y2(t) = In(t)
> ]: 
> IdentifiabilityODE(sigma, GetParameters(sigma), "new_logs/SSAAIR", sub_transc=true):
memory used=3.6MB, alloc=40.3MB, time=0.18

=======================================================
0. Extracting states, inputs, outputs, and parameters from the system
=======================================================

=== Input info ===
State variables:          [Sd(t), Sn(t), Ad(t), An(t), In(t), R(t)]
Output variables:         [y1(t), y2(t)]
Input variables:          []
Parameters in equations:  [b_a, b_i, dlt, eps_a, eps_s, f, g_ai, g_ir, h1, h2]
===================


=======================================================
1. Constructing the maximal polynomial system
=======================================================
memory used=8.2MB, alloc=73.3MB, time=0.30
memory used=45.8MB, alloc=109.3MB, time=0.70
memory used=75.2MB, alloc=108.3MB, time=1.02
memory used=148.6MB, alloc=112.3MB, time=1.78

=======================================================
2. Truncating the polynomial system based on the Jacobian condition
=======================================================
Bound D_1 for testing the rank of the Jacobian probabilistically:  306544000
Orders of prolongations of the outputs (beta) =  [8, 8]
Orders of prolongations of the state variables (alpha) =  [8, 7, 7, 7, 8, 1]

=======================================================
3. Assessing local identifiability
=======================================================
memory used=222.9MB, alloc=115.4MB, time=2.44
memory used=294.8MB, alloc=151.7MB, time=2.95
Locally identifiable paramters:  [b_a, b_i, eps_a, eps_s, f, g_ai, h1, h2, Sd(0), Sn(0), Ad(0), An(0), In(0)]
Nonidentifiable parameter:  [R(0), dlt, g_ir]
Number of transcendence basis choices before "filtering": 595
Number of transcendence basis choices after "filtering": 3

=======================================================
Creating Truncated system (old)
=======================================================
Bound D_2 for assessing global identifiability:  28298170370000000000000000
Random sample for the outputs and inputs is generated from  [b_a = 15073023475476581398834180, b_i = 26569503693221358932920767, dlt = 25086275610128578347274849, eps_a = 21377107926036754190629083, eps_s = 7285844355396327966290340, f = 22807766831748340865238411, g_ai = 17186288177919949126854754, g_ir = 28261706475376293678438804, h1 = 18646131636580781883332873, h2 = 9357493653414264671711395, Sd_0 = 25686332649834325390790674, Sn_0 = 25427854678449725131695593, Ad_0 = 3672014097973516505455232, An_0 = 10731014756334988553001842, In_0 = 11065916108928118799225665, R_0 = 11200901891878156295920296]
The polynomial system widehat{E^t} contains  48 equations in  47  variables
Algebraically independent parameters (candidates) [R(0), dlt]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {dlt}
Algebraically independent parameters among derivatives: {R(0)}
	Adding ODEs: [diff(dlt(t),t) = 0]
	Adding output functions: [y_faux1(t) = dlt(t)]
	New system: [diff(dlt(t),t) = 0, diff(Sd(t),t) = -eps_s*b_a*(An(t)+eps_a*Ad(t))*Sd(t)-h1*Sd(t)+h2*Sn(t)-eps_s*b_i*Sd(t)*In(t), diff(Sn(t),t) = -b_i*Sn(t)*In(t)-b_a*(An(t)+eps_a*Ad(t))*Sn(t)+h1*Sd(t)-h2*Sn(t), diff(Ad(t),t) = eps_s*b_i*Sd(t)*In(t)+eps_s*b_a*(An(t)+eps_a*Ad(t))*Sn(t)+h2*An(t)-g_ai*Ad(t)-h1*Ad(t), diff(An(t),t) = b_i*Sn(t)*In(t)+b_a*(An(t)+eps_a*Ad(t))*Sn(t)+h1*Ad(t)-g_ai*An(t)-h2*An(t), diff(In(t),t) = f*g_ai*(Ad(t)+An(t))-dlt(t)*In(t)-g_ir*In(t), diff(R(t),t) = (1-f)*g_ai*(Ad(t)+An(t))+g_ir*In(t), y1(t) = Sd(t), y2(t) = In(t), y_faux1(t) = dlt(t)]

=== Input info ===
State variables:          [dlt(t), Sd(t), Sn(t), Ad(t), An(t), In(t), R(t)]
Output variables:         [y1(t), y2(t), y_faux1(t)]
Input variables:          []
Parameters in equations:  [b_a, b_i, eps_a, eps_s, f, g_ai, g_ir, h1, h2]
===================

memory used=404.3MB, alloc=151.7MB, time=3.88
memory used=465.4MB, alloc=151.7MB, time=4.56
memory used=532.1MB, alloc=151.7MB, time=5.33
memory used=640.6MB, alloc=161.0MB, time=6.23
	Adding new y-equations: [y_faux2_0 = R_0]
	New system: [y1_0-Sd_0, Ad_0*Sd_0*b_a*eps_a*eps_s+An_0*Sd_0*b_a*eps_s+In_0*Sd_0*b_i*eps_s+Sd_0*h1-Sn_0*h2+Sd_1, y2_0-In_0, -Ad_0*f*g_ai-An_0*f*g_ai+In_0*dlt_0+In_0*g_ir+In_1, y_faux1_0-dlt_0, dlt_1, -Sd_1+y1_1, (((Ad_0*eps_a+An_0)*b_a+b_i*In_0)*Sd_1+Sd_0*((Ad_1*eps_a+An_1)*b_a+In_1*b_i))*eps_s+Sd_1*h1-h2*Sn_1+Sd_2, -Ad_0*Sn_0*b_a*eps_a*eps_s-An_0*Sn_0*b_a*eps_s-In_0*Sd_0*b_i*eps_s+Ad_0*g_ai+Ad_0*h1-An_0*h2+Ad_1, -Ad_0*Sn_0*b_a*eps_a-An_0*Sn_0*b_a-In_0*Sn_0*b_i-Ad_0*h1+An_0*g_ai+An_0*h2+An_1, Ad_0*Sn_0*b_a*eps_a+An_0*Sn_0*b_a+In_0*Sn_0*b_i-Sd_0*h1+Sn_0*h2+Sn_1, -In_1+y2_1, (dlt_0+g_ir)*In_1-f*(Ad_1+An_1)*g_ai+In_0*dlt_1+In_2, -Sd_2+y1_2, (((Ad_0*eps_a+An_0)*Sd_2+(2*Ad_1*Sd_1+Ad_2*Sd_0)*eps_a+An_2*Sd_0+2*Sd_1*An_1)*b_a+b_i*(In_0*Sd_2+2*In_1*Sd_1+In_2*Sd_0))*eps_s+Sd_2*h1-h2*Sn_2+Sd_3, ((-Ad_0*Sn_1*eps_a-Ad_1*Sn_0*eps_a-An_0*Sn_1-An_1*Sn_0)*b_a-b_i*(In_0*Sd_1+In_1*Sd_0))*eps_s+(h1+g_ai)*Ad_1-An_1*h2+Ad_2, (-An_1*Sn_0-Ad_1*Sn_0*eps_a-Sn_1*(Ad_0*eps_a+An_0))*b_a+(g_ai+h2)*An_1-In_0*Sn_1*b_i-Sn_0*b_i*In_1-Ad_1*h1+An_2, ((Ad_0*eps_a+An_0)*b_a+b_i*In_0+h2)*Sn_1+Sn_0*(Ad_1*eps_a+An_1)*b_a+Sn_0*b_i*In_1-Sd_1*h1+Sn_2, -In_2+y2_2, (dlt_0+g_ir)*In_2-f*(Ad_2+An_2)*g_ai+2*dlt_1*In_1+In_0*dlt_2+In_3, dlt_2, -Sd_3+y1_3, (((Ad_0*Sd_3+3*Ad_1*Sd_2+3*Ad_2*Sd_1+Ad_3*Sd_0)*eps_a+3*An_1*Sd_2+3*An_2*Sd_1+An_3*Sd_0+Sd_3*An_0)*b_a+b_i*(In_0*Sd_3+3*In_1*Sd_2+3*In_2*Sd_1+In_3*Sd_0))*eps_s+Sd_3*h1-h2*Sn_3+Sd_4, (((-Ad_0*Sn_2-2*Ad_1*Sn_1-Ad_2*Sn_0)*eps_a-2*Sn_1*An_1-An_2*Sn_0-Sn_2*An_0)*b_a-b_i*(In_0*Sd_2+2*In_1*Sd_1+In_2*Sd_0))*eps_s+(h1+g_ai)*Ad_2-An_2*h2+Ad_3, ((-Ad_0*Sn_2-2*Ad_1*Sn_1-Ad_2*Sn_0)*eps_a-2*Sn_1*An_1-An_2*Sn_0-Sn_2*An_0)*b_a+(g_ai+h2)*An_2-In_0*Sn_2*b_i-2*b_i*Sn_1*In_1-Sn_0*b_i*In_2-Ad_2*h1+An_3, ((Ad_0*eps_a+An_0)*Sn_2+(2*Ad_1*Sn_1+Ad_2*Sn_0)*eps_a+An_2*Sn_0+2*Sn_1*An_1)*b_a+(In_0*b_i+h2)*Sn_2+2*b_i*Sn_1*In_1+Sn_0*b_i*In_2-Sd_2*h1+Sn_3, -In_3+y2_3, (dlt_0+g_ir)*In_3-f*(Ad_3+An_3)*g_ai+3*dlt_1*In_2+3*dlt_2*In_1+In_0*dlt_3+In_4, dlt_3, -Sd_4+y1_4, (((Ad_0*Sd_4+4*Ad_1*Sd_3+6*Ad_2*Sd_2+4*Ad_3*Sd_1+Ad_4*Sd_0)*eps_a+An_0*Sd_4+4*An_1*Sd_3+6*An_2*Sd_2+4*An_3*Sd_1+An_4*Sd_0)*b_a+b_i*(In_0*Sd_4+4*In_1*Sd_3+6*In_2*Sd_2+4*In_3*Sd_1+In_4*Sd_0))*eps_s+Sd_4*h1-h2*Sn_4+Sd_5, (((-Ad_0*Sn_3-3*Ad_1*Sn_2-3*Ad_2*Sn_1-Ad_3*Sn_0)*eps_a-Sn_3*An_0-3*An_1*Sn_2-3*An_2*Sn_1-An_3*Sn_0)*b_a-b_i*(In_0*Sd_3+3*In_1*Sd_2+3*In_2*Sd_1+In_3*Sd_0))*eps_s+(h1+g_ai)*Ad_3-An_3*h2+Ad_4, ((-Ad_0*Sn_3-3*Ad_1*Sn_2-3*Ad_2*Sn_1-Ad_3*Sn_0)*eps_a-Sn_3*An_0-3*An_1*Sn_2-3*An_2*Sn_1-An_3*Sn_0)*b_a+(-In_0*Sn_3-3*In_1*Sn_2-3*In_2*Sn_1-In_3*Sn_0)*b_i+(g_ai+h2)*An_3-Ad_3*h1+An_4, ((Ad_0*Sn_3+3*Ad_1*Sn_2+3*Ad_2*Sn_1+Ad_3*Sn_0)*eps_a+3*An_1*Sn_2+3*An_2*Sn_1+An_3*Sn_0+Sn_3*An_0)*b_a+(In_0*b_i+h2)*Sn_3+(3*In_1*Sn_2+3*In_2*Sn_1+In_3*Sn_0)*b_i-Sd_3*h1+Sn_4, -In_4+y2_4, (dlt_0+g_ir)*In_4-f*(Ad_4+An_4)*g_ai+4*dlt_1*In_3+6*dlt_2*In_2+4*dlt_3*In_1+In_0*dlt_4+In_5, dlt_4, -Sd_5+y1_5, (((Ad_0*Sd_5+5*Ad_1*Sd_4+10*Ad_2*Sd_3+10*Ad_3*Sd_2+5*Ad_4*Sd_1+Ad_5*Sd_0)*eps_a+An_0*Sd_5+5*An_1*Sd_4+10*An_2*Sd_3+10*An_3*Sd_2+5*An_4*Sd_1+An_5*Sd_0)*b_a+b_i*(In_0*Sd_5+5*In_1*Sd_4+10*In_2*Sd_3+10*In_3*Sd_2+5*In_4*Sd_1+In_5*Sd_0))*eps_s+Sd_5*h1-h2*Sn_5+Sd_6, (((-Ad_0*Sn_4-4*Ad_1*Sn_3-6*Ad_2*Sn_2-4*Ad_3*Sn_1-Ad_4*Sn_0)*eps_a-An_0*Sn_4-4*An_1*Sn_3-6*An_2*Sn_2-4*An_3*Sn_1-An_4*Sn_0)*b_a-b_i*(In_0*Sd_4+4*In_1*Sd_3+6*In_2*Sd_2+4*In_3*Sd_1+In_4*Sd_0))*eps_s+(h1+g_ai)*Ad_4-An_4*h2+Ad_5, ((-Ad_0*Sn_4-4*Ad_1*Sn_3-6*Ad_2*Sn_2-4*Ad_3*Sn_1-Ad_4*Sn_0)*eps_a-An_0*Sn_4-4*An_1*Sn_3-6*An_2*Sn_2-4*An_3*Sn_1-An_4*Sn_0)*b_a+(-In_0*Sn_4-4*In_1*Sn_3-6*In_2*Sn_2-4*In_3*Sn_1-In_4*Sn_0)*b_i+(g_ai+h2)*An_4-Ad_4*h1+An_5, ((Ad_0*Sn_4+4*Ad_1*Sn_3+6*Ad_2*Sn_2+4*Ad_3*Sn_1+Ad_4*Sn_0)*eps_a+An_0*Sn_4+4*An_1*Sn_3+6*An_2*Sn_2+4*An_3*Sn_1+An_4*Sn_0)*b_a+(In_0*Sn_4+4*In_1*Sn_3+6*In_2*Sn_2+4*In_3*Sn_1+In_4*Sn_0)*b_i-Sd_4*h1+h2*Sn_4+Sn_5, -In_5+y2_5, (dlt_0+g_ir)*In_5-f*(Ad_5+An_5)*g_ai+5*dlt_1*In_4+10*dlt_2*In_3+10*dlt_3*In_2+5*dlt_4*In_1+In_0*dlt_5+In_6, dlt_5, -Sd_6+y1_6, (((Ad_0*Sd_6+6*Ad_1*Sd_5+15*Ad_2*Sd_4+20*Ad_3*Sd_3+15*Ad_4*Sd_2+6*Ad_5*Sd_1+Ad_6*Sd_0)*eps_a+An_0*Sd_6+6*Sd_5*An_1+15*Sd_4*An_2+20*Sd_3*An_3+15*Sd_2*An_4+6*Sd_1*An_5+Sd_0*An_6)*b_a+b_i*(In_0*Sd_6+6*In_1*Sd_5+15*In_2*Sd_4+20*In_3*Sd_3+15*In_4*Sd_2+6*In_5*Sd_1+In_6*Sd_0))*eps_s+Sd_6*h1-h2*Sn_6+Sd_7, (((-Ad_0*Sn_5-5*Ad_1*Sn_4-10*Ad_2*Sn_3-10*Ad_3*Sn_2-5*Ad_4*Sn_1-Ad_5*Sn_0)*eps_a-An_0*Sn_5-5*Sn_4*An_1-10*Sn_3*An_2-10*Sn_2*An_3-5*An_4*Sn_1-An_5*Sn_0)*b_a-b_i*(In_0*Sd_5+5*In_1*Sd_4+10*In_2*Sd_3+10*In_3*Sd_2+5*In_4*Sd_1+In_5*Sd_0))*eps_s+(h1+g_ai)*Ad_5-An_5*h2+Ad_6, ((-Ad_0*Sn_5-5*Ad_1*Sn_4-10*Ad_2*Sn_3-10*Ad_3*Sn_2-5*Ad_4*Sn_1-Ad_5*Sn_0)*eps_a-An_0*Sn_5-5*Sn_4*An_1-10*Sn_3*An_2-10*Sn_2*An_3-5*An_4*Sn_1-An_5*Sn_0)*b_a+(-In_0*Sn_5-5*In_1*Sn_4-10*In_2*Sn_3-10*In_3*Sn_2-5*In_4*Sn_1-In_5*Sn_0)*b_i+(g_ai+h2)*An_5-Ad_5*h1+An_6, ((Ad_0*Sn_5+5*Ad_1*Sn_4+10*Ad_2*Sn_3+10*Ad_3*Sn_2+5*Ad_4*Sn_1+Ad_5*Sn_0)*eps_a+An_0*Sn_5+5*Sn_4*An_1+10*Sn_3*An_2+10*Sn_2*An_3+5*An_4*Sn_1+An_5*Sn_0)*b_a+(In_0*Sn_5+5*In_1*Sn_4+10*In_2*Sn_3+10*In_3*Sn_2+5*In_4*Sn_1+In_5*Sn_0)*b_i-Sd_5*h1+h2*Sn_5+Sn_6, -In_6+y2_6, (dlt_0+g_ir)*In_6-f*(Ad_6+An_6)*g_ai+6*dlt_1*In_5+15*dlt_2*In_4+20*dlt_3*In_3+15*dlt_4*In_2+6*dlt_5*In_1+In_0*dlt_6+In_7, dlt_6, -Sd_7+y1_7, -In_7+y2_7, -dlt_1+y_faux1_1, -dlt_2+y_faux1_2, -dlt_3+y_faux1_3, -dlt_4+y_faux1_4, -dlt_5+y_faux1_5, -dlt_6+y_faux1_6, y_faux2_0-R_0]
	New system: [y1_0 = Sd_0, y1_1 = Sd_1, y1_2 = Sd_2, y1_3 = Sd_3, y1_4 = Sd_4, y1_5 = Sd_5, y1_6 = Sd_6, y1_7 = Sd_7, y1_8 = Sd_8, y1_9 = Sd_9, y1_10 = Sd_10, y1_11 = Sd_11, y1_12 = Sd_12, y1_13 = Sd_13, y1_14 = Sd_14, y1_15 = Sd_15, y1_16 = Sd_16, y1_17 = Sd_17, y2_0 = In_0, y2_1 = In_1, y2_2 = In_2, y2_3 = In_3, y2_4 = In_4, y2_5 = In_5, y2_6 = In_6, y2_7 = In_7, y2_8 = In_8, y2_9 = In_9, y2_10 = In_10, y2_11 = In_11, y2_12 = In_12, y2_13 = In_13, y2_14 = In_14, y2_15 = In_15, y2_16 = In_16, y2_17 = In_17, y_faux1_0 = dlt_0, y_faux1_1 = dlt_1, y_faux1_2 = dlt_2, y_faux1_3 = dlt_3, y_faux1_4 = dlt_4, y_faux1_5 = dlt_5, y_faux1_6 = dlt_6, y_faux1_7 = dlt_7, y_faux1_8 = dlt_8, y_faux1_9 = dlt_9, y_faux1_10 = dlt_10, y_faux1_11 = dlt_11, y_faux1_12 = dlt_12, y_faux1_13 = dlt_13, y_faux1_14 = dlt_14, y_faux1_15 = dlt_15, y_faux1_16 = dlt_16, y_faux1_17 = dlt_17, y_faux2_0 = R_0]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability:  32651735040000000000000000
Random sample for the outputs and inputs is generated from  [b_a = 12364627891520088265104370, b_i = 28060122397052614411808283, eps_a = 29546471139164519156320851, eps_s = 20878189141926378845283779, f = 12136386913905124292623716, g_ai = 7217952685350577765368177, g_ir = 14316013309375815174073205, h1 = 24401430955380561498906996, h2 = 19388955848488398825827322, dlt_0 = 18801170241616188327315303, Sd_0 = 9193631998142764287704636, Sn_0 = 21138661548451584394591271, Ad_0 = 30806255298518497692581332, An_0 = 16821585441170723706891538, In_0 = 21848389361711627824544081, R_0 = 6568141858772936383399387]
The polynomial system widehat{E^t} contains  62 equations in  54  variables
            "new_logs/SSAAIR/transcendence_1_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [R(0), g_ir]

=======================================================
Substituting transcendence basis.
=======================================================
memory used=752.4MB, alloc=161.0MB, time=7.07
Algebraically independent parameters among nonidentifiable: {g_ir}
Algebraically independent parameters among derivatives: {R(0)}
	Adding ODEs: [diff(g_ir(t),t) = 0]
	Adding output functions: [y_faux1(t) = g_ir(t)]
	New system: [diff(g_ir(t),t) = 0, diff(Sd(t),t) = -eps_s*b_a*(An(t)+eps_a*Ad(t))*Sd(t)-h1*Sd(t)+h2*Sn(t)-eps_s*b_i*Sd(t)*In(t), diff(Sn(t),t) = -b_i*Sn(t)*In(t)-b_a*(An(t)+eps_a*Ad(t))*Sn(t)+h1*Sd(t)-h2*Sn(t), diff(Ad(t),t) = eps_s*b_i*Sd(t)*In(t)+eps_s*b_a*(An(t)+eps_a*Ad(t))*Sn(t)+h2*An(t)-g_ai*Ad(t)-h1*Ad(t), diff(An(t),t) = b_i*Sn(t)*In(t)+b_a*(An(t)+eps_a*Ad(t))*Sn(t)+h1*Ad(t)-g_ai*An(t)-h2*An(t), diff(In(t),t) = f*g_ai*(Ad(t)+An(t))-dlt*In(t)-g_ir(t)*In(t), diff(R(t),t) = (1-f)*g_ai*(Ad(t)+An(t))+g_ir(t)*In(t), y1(t) = Sd(t), y2(t) = In(t), y_faux1(t) = g_ir(t)]

=== Input info ===
State variables:          [g_ir(t), Sd(t), Sn(t), Ad(t), An(t), In(t), R(t)]
Output variables:         [y1(t), y2(t), y_faux1(t)]
Input variables:          []
Parameters in equations:  [b_a, b_i, dlt, eps_a, eps_s, f, g_ai, h1, h2]
===================

memory used=819.8MB, alloc=161.0MB, time=7.83
memory used=881.4MB, alloc=161.0MB, time=8.55
memory used=963.5MB, alloc=161.0MB, time=9.33
memory used=1095.8MB, alloc=180.1MB, time=10.13
	Adding new y-equations: [y_faux2_0 = R_0]
	New system: [y1_0-Sd_0, Ad_0*Sd_0*b_a*eps_a*eps_s+An_0*Sd_0*b_a*eps_s+In_0*Sd_0*b_i*eps_s+Sd_0*h1-Sn_0*h2+Sd_1, y2_0-In_0, -Ad_0*f*g_ai-An_0*f*g_ai+In_0*dlt+In_0*g_ir_0+In_1, y_faux1_0-g_ir_0, g_ir_1, -Sd_1+y1_1, (((Ad_0*eps_a+An_0)*b_a+b_i*In_0)*Sd_1+Sd_0*((Ad_1*eps_a+An_1)*b_a+In_1*b_i))*eps_s+Sd_1*h1-h2*Sn_1+Sd_2, -Ad_0*Sn_0*b_a*eps_a*eps_s-An_0*Sn_0*b_a*eps_s-In_0*Sd_0*b_i*eps_s+Ad_0*g_ai+Ad_0*h1-An_0*h2+Ad_1, -Ad_0*Sn_0*b_a*eps_a-An_0*Sn_0*b_a-In_0*Sn_0*b_i-Ad_0*h1+An_0*g_ai+An_0*h2+An_1, Ad_0*Sn_0*b_a*eps_a+An_0*Sn_0*b_a+In_0*Sn_0*b_i-Sd_0*h1+Sn_0*h2+Sn_1, -In_1+y2_1, (dlt+g_ir_0)*In_1-f*(Ad_1+An_1)*g_ai+In_0*g_ir_1+In_2, -Sd_2+y1_2, (((Ad_0*eps_a+An_0)*Sd_2+(2*Ad_1*Sd_1+Ad_2*Sd_0)*eps_a+An_2*Sd_0+2*Sd_1*An_1)*b_a+b_i*(In_0*Sd_2+2*In_1*Sd_1+In_2*Sd_0))*eps_s+Sd_2*h1-h2*Sn_2+Sd_3, ((-Ad_0*Sn_1*eps_a-Ad_1*Sn_0*eps_a-An_0*Sn_1-An_1*Sn_0)*b_a-b_i*(In_0*Sd_1+In_1*Sd_0))*eps_s+(h1+g_ai)*Ad_1-An_1*h2+Ad_2, (-An_1*Sn_0-Ad_1*Sn_0*eps_a-Sn_1*(Ad_0*eps_a+An_0))*b_a+(g_ai+h2)*An_1-In_0*Sn_1*b_i-Sn_0*b_i*In_1-Ad_1*h1+An_2, ((Ad_0*eps_a+An_0)*b_a+b_i*In_0+h2)*Sn_1+Sn_0*(Ad_1*eps_a+An_1)*b_a+Sn_0*b_i*In_1-Sd_1*h1+Sn_2, -In_2+y2_2, (dlt+g_ir_0)*In_2-f*(Ad_2+An_2)*g_ai+2*g_ir_1*In_1+In_0*g_ir_2+In_3, g_ir_2, -Sd_3+y1_3, (((Ad_0*Sd_3+3*Ad_1*Sd_2+3*Ad_2*Sd_1+Ad_3*Sd_0)*eps_a+3*An_1*Sd_2+3*An_2*Sd_1+An_3*Sd_0+Sd_3*An_0)*b_a+b_i*(In_0*Sd_3+3*In_1*Sd_2+3*In_2*Sd_1+In_3*Sd_0))*eps_s+Sd_3*h1-h2*Sn_3+Sd_4, (((-Ad_0*Sn_2-2*Ad_1*Sn_1-Ad_2*Sn_0)*eps_a-2*Sn_1*An_1-An_2*Sn_0-Sn_2*An_0)*b_a-b_i*(In_0*Sd_2+2*In_1*Sd_1+In_2*Sd_0))*eps_s+(h1+g_ai)*Ad_2-An_2*h2+Ad_3, ((-Ad_0*Sn_2-2*Ad_1*Sn_1-Ad_2*Sn_0)*eps_a-2*Sn_1*An_1-An_2*Sn_0-Sn_2*An_0)*b_a+(g_ai+h2)*An_2-In_0*Sn_2*b_i-2*b_i*Sn_1*In_1-Sn_0*b_i*In_2-Ad_2*h1+An_3, ((Ad_0*eps_a+An_0)*Sn_2+(2*Ad_1*Sn_1+Ad_2*Sn_0)*eps_a+An_2*Sn_0+2*Sn_1*An_1)*b_a+(In_0*b_i+h2)*Sn_2+2*b_i*Sn_1*In_1+Sn_0*b_i*In_2-Sd_2*h1+Sn_3, -In_3+y2_3, (dlt+g_ir_0)*In_3-f*(Ad_3+An_3)*g_ai+3*g_ir_1*In_2+3*g_ir_2*In_1+In_0*g_ir_3+In_4, g_ir_3, -Sd_4+y1_4, (((Ad_0*Sd_4+4*Ad_1*Sd_3+6*Ad_2*Sd_2+4*Ad_3*Sd_1+Ad_4*Sd_0)*eps_a+An_0*Sd_4+4*An_1*Sd_3+6*An_2*Sd_2+4*An_3*Sd_1+An_4*Sd_0)*b_a+b_i*(In_0*Sd_4+4*In_1*Sd_3+6*In_2*Sd_2+4*In_3*Sd_1+In_4*Sd_0))*eps_s+Sd_4*h1-h2*Sn_4+Sd_5, (((-Ad_0*Sn_3-3*Ad_1*Sn_2-3*Ad_2*Sn_1-Ad_3*Sn_0)*eps_a-Sn_3*An_0-3*An_1*Sn_2-3*An_2*Sn_1-An_3*Sn_0)*b_a-b_i*(In_0*Sd_3+3*In_1*Sd_2+3*In_2*Sd_1+In_3*Sd_0))*eps_s+(h1+g_ai)*Ad_3-An_3*h2+Ad_4, ((-Ad_0*Sn_3-3*Ad_1*Sn_2-3*Ad_2*Sn_1-Ad_3*Sn_0)*eps_a-Sn_3*An_0-3*An_1*Sn_2-3*An_2*Sn_1-An_3*Sn_0)*b_a+(-In_0*Sn_3-3*In_1*Sn_2-3*In_2*Sn_1-In_3*Sn_0)*b_i+(g_ai+h2)*An_3-Ad_3*h1+An_4, ((Ad_0*Sn_3+3*Ad_1*Sn_2+3*Ad_2*Sn_1+Ad_3*Sn_0)*eps_a+3*An_1*Sn_2+3*An_2*Sn_1+An_3*Sn_0+Sn_3*An_0)*b_a+(In_0*b_i+h2)*Sn_3+(3*In_1*Sn_2+3*In_2*Sn_1+In_3*Sn_0)*b_i-Sd_3*h1+Sn_4, -In_4+y2_4, (dlt+g_ir_0)*In_4-f*(Ad_4+An_4)*g_ai+4*g_ir_1*In_3+6*g_ir_2*In_2+4*g_ir_3*In_1+In_0*g_ir_4+In_5, g_ir_4, -Sd_5+y1_5, (((Ad_0*Sd_5+5*Ad_1*Sd_4+10*Ad_2*Sd_3+10*Ad_3*Sd_2+5*Ad_4*Sd_1+Ad_5*Sd_0)*eps_a+An_0*Sd_5+5*An_1*Sd_4+10*An_2*Sd_3+10*An_3*Sd_2+5*An_4*Sd_1+An_5*Sd_0)*b_a+b_i*(In_0*Sd_5+5*In_1*Sd_4+10*In_2*Sd_3+10*In_3*Sd_2+5*In_4*Sd_1+In_5*Sd_0))*eps_s+Sd_5*h1-h2*Sn_5+Sd_6, (((-Ad_0*Sn_4-4*Ad_1*Sn_3-6*Ad_2*Sn_2-4*Ad_3*Sn_1-Ad_4*Sn_0)*eps_a-An_0*Sn_4-4*An_1*Sn_3-6*An_2*Sn_2-4*An_3*Sn_1-An_4*Sn_0)*b_a-b_i*(In_0*Sd_4+4*In_1*Sd_3+6*In_2*Sd_2+4*In_3*Sd_1+In_4*Sd_0))*eps_s+(h1+g_ai)*Ad_4-An_4*h2+Ad_5, ((-Ad_0*Sn_4-4*Ad_1*Sn_3-6*Ad_2*Sn_2-4*Ad_3*Sn_1-Ad_4*Sn_0)*eps_a-An_0*Sn_4-4*An_1*Sn_3-6*An_2*Sn_2-4*An_3*Sn_1-An_4*Sn_0)*b_a+(-In_0*Sn_4-4*In_1*Sn_3-6*In_2*Sn_2-4*In_3*Sn_1-In_4*Sn_0)*b_i+(g_ai+h2)*An_4-Ad_4*h1+An_5, ((Ad_0*Sn_4+4*Ad_1*Sn_3+6*Ad_2*Sn_2+4*Ad_3*Sn_1+Ad_4*Sn_0)*eps_a+An_0*Sn_4+4*An_1*Sn_3+6*An_2*Sn_2+4*An_3*Sn_1+An_4*Sn_0)*b_a+(In_0*Sn_4+4*In_1*Sn_3+6*In_2*Sn_2+4*In_3*Sn_1+In_4*Sn_0)*b_i-Sd_4*h1+h2*Sn_4+Sn_5, -In_5+y2_5, (dlt+g_ir_0)*In_5-f*(Ad_5+An_5)*g_ai+5*g_ir_1*In_4+10*g_ir_2*In_3+10*g_ir_3*In_2+5*g_ir_4*In_1+In_0*g_ir_5+In_6, g_ir_5, -Sd_6+y1_6, (((Ad_0*Sd_6+6*Ad_1*Sd_5+15*Ad_2*Sd_4+20*Ad_3*Sd_3+15*Ad_4*Sd_2+6*Ad_5*Sd_1+Ad_6*Sd_0)*eps_a+An_0*Sd_6+6*Sd_5*An_1+15*Sd_4*An_2+20*Sd_3*An_3+15*Sd_2*An_4+6*Sd_1*An_5+Sd_0*An_6)*b_a+b_i*(In_0*Sd_6+6*In_1*Sd_5+15*In_2*Sd_4+20*In_3*Sd_3+15*In_4*Sd_2+6*In_5*Sd_1+In_6*Sd_0))*eps_s+Sd_6*h1-h2*Sn_6+Sd_7, (((-Ad_0*Sn_5-5*Ad_1*Sn_4-10*Ad_2*Sn_3-10*Ad_3*Sn_2-5*Ad_4*Sn_1-Ad_5*Sn_0)*eps_a-An_0*Sn_5-5*Sn_4*An_1-10*Sn_3*An_2-10*Sn_2*An_3-5*An_4*Sn_1-An_5*Sn_0)*b_a-b_i*(In_0*Sd_5+5*In_1*Sd_4+10*In_2*Sd_3+10*In_3*Sd_2+5*In_4*Sd_1+In_5*Sd_0))*eps_s+(h1+g_ai)*Ad_5-An_5*h2+Ad_6, ((-Ad_0*Sn_5-5*Ad_1*Sn_4-10*Ad_2*Sn_3-10*Ad_3*Sn_2-5*Ad_4*Sn_1-Ad_5*Sn_0)*eps_a-An_0*Sn_5-5*Sn_4*An_1-10*Sn_3*An_2-10*Sn_2*An_3-5*An_4*Sn_1-An_5*Sn_0)*b_a+(-In_0*Sn_5-5*In_1*Sn_4-10*In_2*Sn_3-10*In_3*Sn_2-5*In_4*Sn_1-In_5*Sn_0)*b_i+(g_ai+h2)*An_5-Ad_5*h1+An_6, ((Ad_0*Sn_5+5*Ad_1*Sn_4+10*Ad_2*Sn_3+10*Ad_3*Sn_2+5*Ad_4*Sn_1+Ad_5*Sn_0)*eps_a+An_0*Sn_5+5*Sn_4*An_1+10*Sn_3*An_2+10*Sn_2*An_3+5*An_4*Sn_1+An_5*Sn_0)*b_a+(In_0*Sn_5+5*In_1*Sn_4+10*In_2*Sn_3+10*In_3*Sn_2+5*In_4*Sn_1+In_5*Sn_0)*b_i-Sd_5*h1+h2*Sn_5+Sn_6, -In_6+y2_6, (dlt+g_ir_0)*In_6-f*(Ad_6+An_6)*g_ai+6*g_ir_1*In_5+15*g_ir_2*In_4+20*g_ir_3*In_3+15*g_ir_4*In_2+6*g_ir_5*In_1+In_0*g_ir_6+In_7, g_ir_6, -Sd_7+y1_7, -In_7+y2_7, -g_ir_1+y_faux1_1, -g_ir_2+y_faux1_2, -g_ir_3+y_faux1_3, -g_ir_4+y_faux1_4, -g_ir_5+y_faux1_5, -g_ir_6+y_faux1_6, y_faux2_0-R_0]
	New system: [y1_0 = Sd_0, y1_1 = Sd_1, y1_2 = Sd_2, y1_3 = Sd_3, y1_4 = Sd_4, y1_5 = Sd_5, y1_6 = Sd_6, y1_7 = Sd_7, y1_8 = Sd_8, y1_9 = Sd_9, y1_10 = Sd_10, y1_11 = Sd_11, y1_12 = Sd_12, y1_13 = Sd_13, y1_14 = Sd_14, y1_15 = Sd_15, y1_16 = Sd_16, y1_17 = Sd_17, y2_0 = In_0, y2_1 = In_1, y2_2 = In_2, y2_3 = In_3, y2_4 = In_4, y2_5 = In_5, y2_6 = In_6, y2_7 = In_7, y2_8 = In_8, y2_9 = In_9, y2_10 = In_10, y2_11 = In_11, y2_12 = In_12, y2_13 = In_13, y2_14 = In_14, y2_15 = In_15, y2_16 = In_16, y2_17 = In_17, y_faux1_0 = g_ir_0, y_faux1_1 = g_ir_1, y_faux1_2 = g_ir_2, y_faux1_3 = g_ir_3, y_faux1_4 = g_ir_4, y_faux1_5 = g_ir_5, y_faux1_6 = g_ir_6, y_faux1_7 = g_ir_7, y_faux1_8 = g_ir_8, y_faux1_9 = g_ir_9, y_faux1_10 = g_ir_10, y_faux1_11 = g_ir_11, y_faux1_12 = g_ir_12, y_faux1_13 = g_ir_13, y_faux1_14 = g_ir_14, y_faux1_15 = g_ir_15, y_faux1_16 = g_ir_16, y_faux1_17 = g_ir_17, y_faux2_0 = R_0]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability:  32651735040000000000000000
Random sample for the outputs and inputs is generated from  [b_a = 11473064824605751488079580, b_i = 1522651130343080270744045, dlt = 1149966594668777302584146, eps_a = 19100149271495544543367934, eps_s = 22485448570428537384427169, f = 5128217439162808358133847, g_ai = 26405484715037289520052555, h1 = 18069819161473279083885585, h2 = 31964556685317915335503209, g_ir_0 = 30353071858391595174917705, Sd_0 = 7671533552019189849778194, Sn_0 = 25014679723725537664091913, Ad_0 = 6795774065623510130465726, An_0 = 5480812808232614680873107, In_0 = 552475849935377788565422, R_0 = 24571490145343945373394008]
The polynomial system widehat{E^t} contains  62 equations in  54  variables
            "new_logs/SSAAIR/transcendence_2_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [dlt, g_ir]

=======================================================
Substituting transcendence basis.
=======================================================
> quit
memory used=1166.8MB, alloc=180.1MB, time=10.63
    |\^/|     Maple 2021 (X86 64 LINUX)
._|\|   |/|_. Copyright (c) Maplesoft, a division of Waterloo Maple Inc. 2021
 \  MAPLE  /  All rights reserved. Maple is a trademark of
 <____ ____>  Waterloo Maple Inc.
      |       Type ? for help.
> read "../generate_tr_bases.mpl";
Warning, (in IdentifiabilityODE) `degrees` is implicitly declared local
|../generate_tr_bases.mpl:321|
Warning, (in IdentifiabilityODE) `degree_table` is implicitly declared local
|../generate_tr_bases.mpl:451|
Warning, (in IdentifiabilityODE) `occurrence_table` is implicitly declared local
|../generate_tr_bases.mpl:452|

> sigma := [
>   diff(Sd(t), t) = -eps_s * b_a * (An(t) + eps_a * Ad(t)) * Sd(t) - h1 * Sd(t) + h2 * Sn(t) - eps_s * b_i * Sd(t) * In(t),
>   diff(Sn(t), t) = -b_i * Sn(t) * In(t) - b_a * (An(t) + eps_a*Ad(t)) * Sn(t) + h1 * Sd(t) - h2 * Sn(t),
>   diff(Ad(t), t) = eps_s * b_i * Sd(t) * In(t) + eps_s * b_a * (An(t) + eps_a * Ad(t)) * Sn(t) + h2 * An(t) - g_ai * Ad(t) - h1 * Ad(t), 
>   diff(An(t), t) = b_i * Sn(t) * In(t) + b_a * (An(t) + eps_a * Ad(t)) * Sn(t) + h1 * Ad(t) - g_ai * An(t) - h2 * An(t), 
>   diff(In(t), t) = f * g_ai * (Ad(t) + An(t)) - dlt * In(t) - g_ir * In(t),
>   diff(R(t), t) = (1-f) * g_ai * (Ad(t) + An(t)) + g_ir * In(t),
>   y1(t) = Sd(t),
>   y2(t) = In(t)
> ]: 
> IdentifiabilityODE(sigma, GetParameters(sigma), "new_logs/SSAAIR", sub_transc=true):
memory used=3.6MB, alloc=40.3MB, time=0.15

=======================================================
0. Extracting states, inputs, outputs, and parameters from the system
=======================================================

=== Input info ===
State variables:          [Sd(t), Sn(t), Ad(t), An(t), In(t), R(t)]
Output variables:         [y1(t), y2(t)]
Input variables:          []
Parameters in equations:  [b_a, b_i, dlt, eps_a, eps_s, f, g_ai, g_ir, h1, h2]
===================


=======================================================
1. Constructing the maximal polynomial system
=======================================================
memory used=8.2MB, alloc=73.3MB, time=0.24
memory used=45.8MB, alloc=109.3MB, time=0.62
memory used=76.6MB, alloc=108.3MB, time=0.97
memory used=149.6MB, alloc=112.3MB, time=1.66

=======================================================
2. Truncating the polynomial system based on the Jacobian condition
=======================================================
Bound D_1 for testing the rank of the Jacobian probabilistically:  306544000
Orders of prolongations of the outputs (beta) =  [8, 8]
Orders of prolongations of the state variables (alpha) =  [8, 7, 7, 7, 8, 1]

=======================================================
3. Assessing local identifiability
=======================================================
memory used=223.5MB, alloc=147.4MB, time=2.32
memory used=331.7MB, alloc=156.8MB, time=3.01
Locally identifiable paramters:  [b_a, b_i, eps_a, eps_s, f, g_ai, h1, h2, Sd(0), Sn(0), Ad(0), An(0), In(0)]
Nonidentifiable parameter:  [R(0), dlt, g_ir]
Number of transcendence basis choices before "filtering": 595
Number of transcendence basis choices after "filtering": 3

=======================================================
Creating Truncated system (old)
=======================================================
Bound D_2 for assessing global identifiability:  28298170370000000000000000
Random sample for the outputs and inputs is generated from  [b_a = 20351332159214259456973928, b_i = 20228827548321984589443927, dlt = 9812074051255048973844293, eps_a = 20845640303747899447911505, eps_s = 8319200255238063295260895, f = 13687294069116449826803556, g_ai = 7927086431102010562229989, g_ir = 24569163325580737770527176, h1 = 25059824449588177568607754, h2 = 13957869845437063747519059, Sd_0 = 3389434638628866312237615, Sn_0 = 1975072933393553306341660, Ad_0 = 10411285771629207908033977, An_0 = 26525265168565249401177956, In_0 = 19309019829875158331513028, R_0 = 13478996879132355108815126]
The polynomial system widehat{E^t} contains  48 equations in  47  variables
Algebraically independent parameters (candidates) [R(0), dlt]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {dlt}
Algebraically independent parameters among derivatives: {R(0)}
	Adding ODEs: [diff(dlt(t),t) = 0]
	Adding output functions: [y_faux1(t) = dlt(t)]
	New system: [diff(dlt(t),t) = 0, diff(Sd(t),t) = -eps_s*b_a*(An(t)+eps_a*Ad(t))*Sd(t)-h1*Sd(t)+h2*Sn(t)-eps_s*b_i*Sd(t)*In(t), diff(Sn(t),t) = -b_i*Sn(t)*In(t)-b_a*(An(t)+eps_a*Ad(t))*Sn(t)+h1*Sd(t)-h2*Sn(t), diff(Ad(t),t) = eps_s*b_i*Sd(t)*In(t)+eps_s*b_a*(An(t)+eps_a*Ad(t))*Sn(t)+h2*An(t)-g_ai*Ad(t)-h1*Ad(t), diff(An(t),t) = b_i*Sn(t)*In(t)+b_a*(An(t)+eps_a*Ad(t))*Sn(t)+h1*Ad(t)-g_ai*An(t)-h2*An(t), diff(In(t),t) = f*g_ai*(Ad(t)+An(t))-dlt(t)*In(t)-g_ir*In(t), diff(R(t),t) = (1-f)*g_ai*(Ad(t)+An(t))+g_ir*In(t), y1(t) = Sd(t), y2(t) = In(t), y_faux1(t) = dlt(t)]

=== Input info ===
State variables:          [dlt(t), Sd(t), Sn(t), Ad(t), An(t), In(t), R(t)]
Output variables:         [y1(t), y2(t), y_faux1(t)]
Input variables:          []
Parameters in equations:  [b_a, b_i, eps_a, eps_s, f, g_ai, g_ir, h1, h2]
===================

memory used=434.9MB, alloc=156.8MB, time=3.96
memory used=497.6MB, alloc=156.8MB, time=4.65
memory used=625.7MB, alloc=172.8MB, time=5.56
memory used=741.7MB, alloc=180.3MB, time=6.39
	Adding new y-equations: [y_faux2_0 = R_0]
	New system: [y1_0-Sd_0, Ad_0*Sd_0*b_a*eps_a*eps_s+An_0*Sd_0*b_a*eps_s+In_0*Sd_0*b_i*eps_s+Sd_0*h1-Sn_0*h2+Sd_1, y2_0-In_0, -Ad_0*f*g_ai-An_0*f*g_ai+In_0*dlt_0+In_0*g_ir+In_1, y_faux1_0-dlt_0, dlt_1, -Sd_1+y1_1, (((Ad_0*eps_a+An_0)*b_a+b_i*In_0)*Sd_1+((Ad_1*eps_a+An_1)*b_a+In_1*b_i)*Sd_0)*eps_s+Sd_1*h1-h2*Sn_1+Sd_2, -Ad_0*Sn_0*b_a*eps_a*eps_s-An_0*Sn_0*b_a*eps_s-In_0*Sd_0*b_i*eps_s+Ad_0*g_ai+Ad_0*h1-An_0*h2+Ad_1, -Ad_0*Sn_0*b_a*eps_a-An_0*Sn_0*b_a-In_0*Sn_0*b_i-Ad_0*h1+An_0*g_ai+An_0*h2+An_1, Ad_0*Sn_0*b_a*eps_a+An_0*Sn_0*b_a+In_0*Sn_0*b_i-Sd_0*h1+Sn_0*h2+Sn_1, -In_1+y2_1, (dlt_0+g_ir)*In_1-f*(Ad_1+An_1)*g_ai+In_0*dlt_1+In_2, -Sd_2+y1_2, (((Ad_0*eps_a+An_0)*Sd_2+(2*Ad_1*Sd_1+Ad_2*Sd_0)*eps_a+An_2*Sd_0+2*Sd_1*An_1)*b_a+b_i*(In_0*Sd_2+2*In_1*Sd_1+In_2*Sd_0))*eps_s+Sd_2*h1-h2*Sn_2+Sd_3, ((-Ad_0*Sn_1*eps_a-Ad_1*Sn_0*eps_a-An_0*Sn_1-An_1*Sn_0)*b_a-b_i*(In_0*Sd_1+In_1*Sd_0))*eps_s+(h1+g_ai)*Ad_1-An_1*h2+Ad_2, (-An_1*Sn_0-Ad_1*Sn_0*eps_a-Sn_1*(Ad_0*eps_a+An_0))*b_a+(g_ai+h2)*An_1-In_0*Sn_1*b_i-Sn_0*b_i*In_1-Ad_1*h1+An_2, ((Ad_0*eps_a+An_0)*b_a+b_i*In_0+h2)*Sn_1+Sn_0*(Ad_1*eps_a+An_1)*b_a+Sn_0*b_i*In_1-Sd_1*h1+Sn_2, -In_2+y2_2, (dlt_0+g_ir)*In_2-f*(Ad_2+An_2)*g_ai+2*dlt_1*In_1+In_0*dlt_2+In_3, dlt_2, -Sd_3+y1_3, (((Ad_0*Sd_3+3*Ad_1*Sd_2+3*Ad_2*Sd_1+Ad_3*Sd_0)*eps_a+3*An_1*Sd_2+3*An_2*Sd_1+An_3*Sd_0+Sd_3*An_0)*b_a+b_i*(In_0*Sd_3+3*In_1*Sd_2+3*In_2*Sd_1+In_3*Sd_0))*eps_s+Sd_3*h1-h2*Sn_3+Sd_4, (((-Ad_0*Sn_2-2*Ad_1*Sn_1-Ad_2*Sn_0)*eps_a-2*Sn_1*An_1-An_2*Sn_0-Sn_2*An_0)*b_a-b_i*(In_0*Sd_2+2*In_1*Sd_1+In_2*Sd_0))*eps_s+(h1+g_ai)*Ad_2-An_2*h2+Ad_3, ((-Ad_0*Sn_2-2*Ad_1*Sn_1-Ad_2*Sn_0)*eps_a-2*Sn_1*An_1-An_2*Sn_0-Sn_2*An_0)*b_a+(g_ai+h2)*An_2-In_0*Sn_2*b_i-2*b_i*Sn_1*In_1-Sn_0*b_i*In_2-Ad_2*h1+An_3, ((Ad_0*eps_a+An_0)*Sn_2+(2*Ad_1*Sn_1+Ad_2*Sn_0)*eps_a+An_2*Sn_0+2*Sn_1*An_1)*b_a+(In_0*b_i+h2)*Sn_2+2*b_i*Sn_1*In_1+Sn_0*b_i*In_2-Sd_2*h1+Sn_3, -In_3+y2_3, (dlt_0+g_ir)*In_3-f*(Ad_3+An_3)*g_ai+3*dlt_1*In_2+3*dlt_2*In_1+In_0*dlt_3+In_4, dlt_3, -Sd_4+y1_4, (((Ad_0*Sd_4+4*Ad_1*Sd_3+6*Ad_2*Sd_2+4*Ad_3*Sd_1+Ad_4*Sd_0)*eps_a+An_0*Sd_4+4*An_1*Sd_3+6*An_2*Sd_2+4*An_3*Sd_1+An_4*Sd_0)*b_a+b_i*(In_0*Sd_4+4*In_1*Sd_3+6*In_2*Sd_2+4*In_3*Sd_1+In_4*Sd_0))*eps_s+Sd_4*h1-h2*Sn_4+Sd_5, (((-Ad_0*Sn_3-3*Ad_1*Sn_2-3*Ad_2*Sn_1-Ad_3*Sn_0)*eps_a-Sn_3*An_0-3*An_1*Sn_2-3*An_2*Sn_1-An_3*Sn_0)*b_a-b_i*(In_0*Sd_3+3*In_1*Sd_2+3*In_2*Sd_1+In_3*Sd_0))*eps_s+(h1+g_ai)*Ad_3-An_3*h2+Ad_4, ((-Ad_0*Sn_3-3*Ad_1*Sn_2-3*Ad_2*Sn_1-Ad_3*Sn_0)*eps_a-Sn_3*An_0-3*An_1*Sn_2-3*An_2*Sn_1-An_3*Sn_0)*b_a+(-In_0*Sn_3-3*In_1*Sn_2-3*In_2*Sn_1-In_3*Sn_0)*b_i+(g_ai+h2)*An_3-Ad_3*h1+An_4, ((Ad_0*Sn_3+3*Ad_1*Sn_2+3*Ad_2*Sn_1+Ad_3*Sn_0)*eps_a+3*An_1*Sn_2+3*An_2*Sn_1+An_3*Sn_0+Sn_3*An_0)*b_a+(In_0*b_i+h2)*Sn_3+(3*In_1*Sn_2+3*In_2*Sn_1+In_3*Sn_0)*b_i-Sd_3*h1+Sn_4, -In_4+y2_4, (dlt_0+g_ir)*In_4-f*(Ad_4+An_4)*g_ai+4*dlt_1*In_3+6*dlt_2*In_2+4*dlt_3*In_1+In_0*dlt_4+In_5, dlt_4, -Sd_5+y1_5, (((Ad_0*Sd_5+5*Ad_1*Sd_4+10*Ad_2*Sd_3+10*Ad_3*Sd_2+5*Ad_4*Sd_1+Ad_5*Sd_0)*eps_a+An_0*Sd_5+5*An_1*Sd_4+10*An_2*Sd_3+10*An_3*Sd_2+5*An_4*Sd_1+An_5*Sd_0)*b_a+b_i*(In_0*Sd_5+5*In_1*Sd_4+10*In_2*Sd_3+10*In_3*Sd_2+5*In_4*Sd_1+In_5*Sd_0))*eps_s+Sd_5*h1-h2*Sn_5+Sd_6, (((-Ad_0*Sn_4-4*Ad_1*Sn_3-6*Ad_2*Sn_2-4*Ad_3*Sn_1-Ad_4*Sn_0)*eps_a-An_0*Sn_4-4*An_1*Sn_3-6*An_2*Sn_2-4*An_3*Sn_1-An_4*Sn_0)*b_a-b_i*(In_0*Sd_4+4*In_1*Sd_3+6*In_2*Sd_2+4*In_3*Sd_1+In_4*Sd_0))*eps_s+(h1+g_ai)*Ad_4-An_4*h2+Ad_5, ((-Ad_0*Sn_4-4*Ad_1*Sn_3-6*Ad_2*Sn_2-4*Ad_3*Sn_1-Ad_4*Sn_0)*eps_a-An_0*Sn_4-4*An_1*Sn_3-6*An_2*Sn_2-4*An_3*Sn_1-An_4*Sn_0)*b_a+(-In_0*Sn_4-4*In_1*Sn_3-6*In_2*Sn_2-4*In_3*Sn_1-In_4*Sn_0)*b_i+(g_ai+h2)*An_4-Ad_4*h1+An_5, ((Ad_0*Sn_4+4*Ad_1*Sn_3+6*Ad_2*Sn_2+4*Ad_3*Sn_1+Ad_4*Sn_0)*eps_a+An_0*Sn_4+4*An_1*Sn_3+6*An_2*Sn_2+4*An_3*Sn_1+An_4*Sn_0)*b_a+(In_0*Sn_4+4*In_1*Sn_3+6*In_2*Sn_2+4*In_3*Sn_1+In_4*Sn_0)*b_i-Sd_4*h1+h2*Sn_4+Sn_5, -In_5+y2_5, (dlt_0+g_ir)*In_5-f*(Ad_5+An_5)*g_ai+5*dlt_1*In_4+10*dlt_2*In_3+10*dlt_3*In_2+5*dlt_4*In_1+In_0*dlt_5+In_6, dlt_5, -Sd_6+y1_6, (((Ad_0*Sd_6+6*Ad_1*Sd_5+15*Ad_2*Sd_4+20*Ad_3*Sd_3+15*Ad_4*Sd_2+6*Ad_5*Sd_1+Ad_6*Sd_0)*eps_a+An_0*Sd_6+6*Sd_5*An_1+15*Sd_4*An_2+20*Sd_3*An_3+15*Sd_2*An_4+6*Sd_1*An_5+Sd_0*An_6)*b_a+b_i*(In_0*Sd_6+6*In_1*Sd_5+15*In_2*Sd_4+20*In_3*Sd_3+15*In_4*Sd_2+6*In_5*Sd_1+In_6*Sd_0))*eps_s+Sd_6*h1-h2*Sn_6+Sd_7, (((-Ad_0*Sn_5-5*Ad_1*Sn_4-10*Ad_2*Sn_3-10*Ad_3*Sn_2-5*Ad_4*Sn_1-Ad_5*Sn_0)*eps_a-An_0*Sn_5-5*Sn_4*An_1-10*Sn_3*An_2-10*Sn_2*An_3-5*An_4*Sn_1-An_5*Sn_0)*b_a-b_i*(In_0*Sd_5+5*In_1*Sd_4+10*In_2*Sd_3+10*In_3*Sd_2+5*In_4*Sd_1+In_5*Sd_0))*eps_s+(h1+g_ai)*Ad_5-An_5*h2+Ad_6, ((-Ad_0*Sn_5-5*Ad_1*Sn_4-10*Ad_2*Sn_3-10*Ad_3*Sn_2-5*Ad_4*Sn_1-Ad_5*Sn_0)*eps_a-An_0*Sn_5-5*Sn_4*An_1-10*Sn_3*An_2-10*Sn_2*An_3-5*An_4*Sn_1-An_5*Sn_0)*b_a+(-In_0*Sn_5-5*In_1*Sn_4-10*In_2*Sn_3-10*In_3*Sn_2-5*In_4*Sn_1-In_5*Sn_0)*b_i+(g_ai+h2)*An_5-Ad_5*h1+An_6, ((Ad_0*Sn_5+5*Ad_1*Sn_4+10*Ad_2*Sn_3+10*Ad_3*Sn_2+5*Ad_4*Sn_1+Ad_5*Sn_0)*eps_a+An_0*Sn_5+5*Sn_4*An_1+10*Sn_3*An_2+10*Sn_2*An_3+5*An_4*Sn_1+An_5*Sn_0)*b_a+(In_0*Sn_5+5*In_1*Sn_4+10*In_2*Sn_3+10*In_3*Sn_2+5*In_4*Sn_1+In_5*Sn_0)*b_i-Sd_5*h1+h2*Sn_5+Sn_6, -In_6+y2_6, (dlt_0+g_ir)*In_6-f*(Ad_6+An_6)*g_ai+6*dlt_1*In_5+15*dlt_2*In_4+20*dlt_3*In_3+15*dlt_4*In_2+6*dlt_5*In_1+In_0*dlt_6+In_7, dlt_6, -Sd_7+y1_7, -In_7+y2_7, -dlt_1+y_faux1_1, -dlt_2+y_faux1_2, -dlt_3+y_faux1_3, -dlt_4+y_faux1_4, -dlt_5+y_faux1_5, -dlt_6+y_faux1_6, y_faux2_0-R_0]
	New system: [y1_0 = Sd_0, y1_1 = Sd_1, y1_2 = Sd_2, y1_3 = Sd_3, y1_4 = Sd_4, y1_5 = Sd_5, y1_6 = Sd_6, y1_7 = Sd_7, y1_8 = Sd_8, y1_9 = Sd_9, y1_10 = Sd_10, y1_11 = Sd_11, y1_12 = Sd_12, y1_13 = Sd_13, y1_14 = Sd_14, y1_15 = Sd_15, y1_16 = Sd_16, y1_17 = Sd_17, y2_0 = In_0, y2_1 = In_1, y2_2 = In_2, y2_3 = In_3, y2_4 = In_4, y2_5 = In_5, y2_6 = In_6, y2_7 = In_7, y2_8 = In_8, y2_9 = In_9, y2_10 = In_10, y2_11 = In_11, y2_12 = In_12, y2_13 = In_13, y2_14 = In_14, y2_15 = In_15, y2_16 = In_16, y2_17 = In_17, y_faux1_0 = dlt_0, y_faux1_1 = dlt_1, y_faux1_2 = dlt_2, y_faux1_3 = dlt_3, y_faux1_4 = dlt_4, y_faux1_5 = dlt_5, y_faux1_6 = dlt_6, y_faux1_7 = dlt_7, y_faux1_8 = dlt_8, y_faux1_9 = dlt_9, y_faux1_10 = dlt_10, y_faux1_11 = dlt_11, y_faux1_12 = dlt_12, y_faux1_13 = dlt_13, y_faux1_14 = dlt_14, y_faux1_15 = dlt_15, y_faux1_16 = dlt_16, y_faux1_17 = dlt_17, y_faux2_0 = R_0]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability:  32651735040000000000000000
Random sample for the outputs and inputs is generated from  [b_a = 28682095911322438586586184, b_i = 984866429951178095949794, eps_a = 19222037392592262983439943, eps_s = 8346835242445093476090936, f = 15577629893186173091167666, g_ai = 20951199994620797880787734, g_ir = 11404466010065959335914563, h1 = 5029113301721749616660649, h2 = 17307024110698302687941364, dlt_0 = 21801860104392008843096527, Sd_0 = 8960665876395873149847929, Sn_0 = 18340179503072516983424048, Ad_0 = 21640795399128613870947198, An_0 = 21442900637802147939477425, In_0 = 31209739308455725197877580, R_0 = 7229733331693910142477536]
The polynomial system widehat{E^t} contains  62 equations in  54  variables
            "new_logs/SSAAIR/transcendence_1_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [R(0), g_ir]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {g_ir}
Algebraically independent parameters among derivatives: {R(0)}
	Adding ODEs: [diff(g_ir(t),t) = 0]
	Adding output functions: [y_faux1(t) = g_ir(t)]
	New system: [diff(g_ir(t),t) = 0, diff(Sd(t),t) = -eps_s*b_a*(An(t)+eps_a*Ad(t))*Sd(t)-h1*Sd(t)+h2*Sn(t)-eps_s*b_i*Sd(t)*In(t), diff(Sn(t),t) = -b_i*Sn(t)*In(t)-b_a*(An(t)+eps_a*Ad(t))*Sn(t)+h1*Sd(t)-h2*Sn(t), diff(Ad(t),t) = eps_s*b_i*Sd(t)*In(t)+eps_s*b_a*(An(t)+eps_a*Ad(t))*Sn(t)+h2*An(t)-g_ai*Ad(t)-h1*Ad(t), diff(An(t),t) = b_i*Sn(t)*In(t)+b_a*(An(t)+eps_a*Ad(t))*Sn(t)+h1*Ad(t)-g_ai*An(t)-h2*An(t), diff(In(t),t) = f*g_ai*(Ad(t)+An(t))-dlt*In(t)-g_ir(t)*In(t), diff(R(t),t) = (1-f)*g_ai*(Ad(t)+An(t))+g_ir(t)*In(t), y1(t) = Sd(t), y2(t) = In(t), y_faux1(t) = g_ir(t)]

=== Input info ===
State variables:          [g_ir(t), Sd(t), Sn(t), Ad(t), An(t), In(t), R(t)]
Output variables:         [y1(t), y2(t), y_faux1(t)]
Input variables:          []
Parameters in equations:  [b_a, b_i, dlt, eps_a, eps_s, f, g_ai, h1, h2]
===================

memory used=840.6MB, alloc=172.3MB, time=7.48
memory used=940.1MB, alloc=172.3MB, time=8.59
memory used=1057.4MB, alloc=172.3MB, time=9.46
	Adding new y-equations: [y_faux2_0 = R_0]
	New system: [y1_0-Sd_0, Ad_0*Sd_0*b_a*eps_a*eps_s+An_0*Sd_0*b_a*eps_s+In_0*Sd_0*b_i*eps_s+Sd_0*h1-Sn_0*h2+Sd_1, y2_0-In_0, -Ad_0*f*g_ai-An_0*f*g_ai+In_0*dlt+In_0*g_ir_0+In_1, y_faux1_0-g_ir_0, g_ir_1, -Sd_1+y1_1, (((Ad_0*eps_a+An_0)*b_a+b_i*In_0)*Sd_1+((Ad_1*eps_a+An_1)*b_a+In_1*b_i)*Sd_0)*eps_s+Sd_1*h1-h2*Sn_1+Sd_2, -Ad_0*Sn_0*b_a*eps_a*eps_s-An_0*Sn_0*b_a*eps_s-In_0*Sd_0*b_i*eps_s+Ad_0*g_ai+Ad_0*h1-An_0*h2+Ad_1, -Ad_0*Sn_0*b_a*eps_a-An_0*Sn_0*b_a-In_0*Sn_0*b_i-Ad_0*h1+An_0*g_ai+An_0*h2+An_1, Ad_0*Sn_0*b_a*eps_a+An_0*Sn_0*b_a+In_0*Sn_0*b_i-Sd_0*h1+Sn_0*h2+Sn_1, -In_1+y2_1, (dlt+g_ir_0)*In_1-f*(Ad_1+An_1)*g_ai+In_0*g_ir_1+In_2, -Sd_2+y1_2, (((Ad_0*eps_a+An_0)*Sd_2+(2*Ad_1*Sd_1+Ad_2*Sd_0)*eps_a+An_2*Sd_0+2*Sd_1*An_1)*b_a+b_i*(In_0*Sd_2+2*In_1*Sd_1+In_2*Sd_0))*eps_s+Sd_2*h1-h2*Sn_2+Sd_3, ((-Ad_0*Sn_1*eps_a-Ad_1*Sn_0*eps_a-An_0*Sn_1-An_1*Sn_0)*b_a-b_i*(In_0*Sd_1+In_1*Sd_0))*eps_s+(h1+g_ai)*Ad_1-An_1*h2+Ad_2, (-An_1*Sn_0-Ad_1*Sn_0*eps_a-Sn_1*(Ad_0*eps_a+An_0))*b_a+(g_ai+h2)*An_1-In_0*Sn_1*b_i-Sn_0*b_i*In_1-Ad_1*h1+An_2, ((Ad_0*eps_a+An_0)*b_a+b_i*In_0+h2)*Sn_1+Sn_0*(Ad_1*eps_a+An_1)*b_a+Sn_0*b_i*In_1-Sd_1*h1+Sn_2, -In_2+y2_2, (dlt+g_ir_0)*In_2-f*(Ad_2+An_2)*g_ai+2*g_ir_1*In_1+In_0*g_ir_2+In_3, g_ir_2, -Sd_3+y1_3, (((Ad_0*Sd_3+3*Ad_1*Sd_2+3*Ad_2*Sd_1+Ad_3*Sd_0)*eps_a+3*An_1*Sd_2+3*An_2*Sd_1+An_3*Sd_0+Sd_3*An_0)*b_a+b_i*(In_0*Sd_3+3*In_1*Sd_2+3*In_2*Sd_1+In_3*Sd_0))*eps_s+Sd_3*h1-h2*Sn_3+Sd_4, (((-Ad_0*Sn_2-2*Ad_1*Sn_1-Ad_2*Sn_0)*eps_a-2*Sn_1*An_1-An_2*Sn_0-Sn_2*An_0)*b_a-b_i*(In_0*Sd_2+2*In_1*Sd_1+In_2*Sd_0))*eps_s+(h1+g_ai)*Ad_2-An_2*h2+Ad_3, ((-Ad_0*Sn_2-2*Ad_1*Sn_1-Ad_2*Sn_0)*eps_a-2*Sn_1*An_1-An_2*Sn_0-Sn_2*An_0)*b_a+(g_ai+h2)*An_2-In_0*Sn_2*b_i-2*b_i*Sn_1*In_1-Sn_0*b_i*In_2-Ad_2*h1+An_3, ((Ad_0*eps_a+An_0)*Sn_2+(2*Ad_1*Sn_1+Ad_2*Sn_0)*eps_a+An_2*Sn_0+2*Sn_1*An_1)*b_a+(In_0*b_i+h2)*Sn_2+2*b_i*Sn_1*In_1+Sn_0*b_i*In_2-Sd_2*h1+Sn_3, -In_3+y2_3, (dlt+g_ir_0)*In_3-f*(Ad_3+An_3)*g_ai+3*g_ir_1*In_2+3*g_ir_2*In_1+In_0*g_ir_3+In_4, g_ir_3, -Sd_4+y1_4, (((Ad_0*Sd_4+4*Ad_1*Sd_3+6*Ad_2*Sd_2+4*Ad_3*Sd_1+Ad_4*Sd_0)*eps_a+An_0*Sd_4+4*An_1*Sd_3+6*An_2*Sd_2+4*An_3*Sd_1+An_4*Sd_0)*b_a+b_i*(In_0*Sd_4+4*In_1*Sd_3+6*In_2*Sd_2+4*In_3*Sd_1+In_4*Sd_0))*eps_s+Sd_4*h1-h2*Sn_4+Sd_5, (((-Ad_0*Sn_3-3*Ad_1*Sn_2-3*Ad_2*Sn_1-Ad_3*Sn_0)*eps_a-Sn_3*An_0-3*An_1*Sn_2-3*An_2*Sn_1-An_3*Sn_0)*b_a-b_i*(In_0*Sd_3+3*In_1*Sd_2+3*In_2*Sd_1+In_3*Sd_0))*eps_s+(h1+g_ai)*Ad_3-An_3*h2+Ad_4, ((-Ad_0*Sn_3-3*Ad_1*Sn_2-3*Ad_2*Sn_1-Ad_3*Sn_0)*eps_a-Sn_3*An_0-3*An_1*Sn_2-3*An_2*Sn_1-An_3*Sn_0)*b_a+(-In_0*Sn_3-3*In_1*Sn_2-3*In_2*Sn_1-In_3*Sn_0)*b_i+(g_ai+h2)*An_3-Ad_3*h1+An_4, ((Ad_0*Sn_3+3*Ad_1*Sn_2+3*Ad_2*Sn_1+Ad_3*Sn_0)*eps_a+3*An_1*Sn_2+3*An_2*Sn_1+An_3*Sn_0+Sn_3*An_0)*b_a+(In_0*b_i+h2)*Sn_3+(3*In_1*Sn_2+3*In_2*Sn_1+In_3*Sn_0)*b_i-Sd_3*h1+Sn_4, -In_4+y2_4, (dlt+g_ir_0)*In_4-f*(Ad_4+An_4)*g_ai+4*g_ir_1*In_3+6*g_ir_2*In_2+4*g_ir_3*In_1+In_0*g_ir_4+In_5, g_ir_4, -Sd_5+y1_5, (((Ad_0*Sd_5+5*Ad_1*Sd_4+10*Ad_2*Sd_3+10*Ad_3*Sd_2+5*Ad_4*Sd_1+Ad_5*Sd_0)*eps_a+An_0*Sd_5+5*An_1*Sd_4+10*An_2*Sd_3+10*An_3*Sd_2+5*An_4*Sd_1+An_5*Sd_0)*b_a+b_i*(In_0*Sd_5+5*In_1*Sd_4+10*In_2*Sd_3+10*In_3*Sd_2+5*In_4*Sd_1+In_5*Sd_0))*eps_s+Sd_5*h1-h2*Sn_5+Sd_6, (((-Ad_0*Sn_4-4*Ad_1*Sn_3-6*Ad_2*Sn_2-4*Ad_3*Sn_1-Ad_4*Sn_0)*eps_a-An_0*Sn_4-4*An_1*Sn_3-6*An_2*Sn_2-4*An_3*Sn_1-An_4*Sn_0)*b_a-b_i*(In_0*Sd_4+4*In_1*Sd_3+6*In_2*Sd_2+4*In_3*Sd_1+In_4*Sd_0))*eps_s+(h1+g_ai)*Ad_4-An_4*h2+Ad_5, ((-Ad_0*Sn_4-4*Ad_1*Sn_3-6*Ad_2*Sn_2-4*Ad_3*Sn_1-Ad_4*Sn_0)*eps_a-An_0*Sn_4-4*An_1*Sn_3-6*An_2*Sn_2-4*An_3*Sn_1-An_4*Sn_0)*b_a+(-In_0*Sn_4-4*In_1*Sn_3-6*In_2*Sn_2-4*In_3*Sn_1-In_4*Sn_0)*b_i+(g_ai+h2)*An_4-Ad_4*h1+An_5, ((Ad_0*Sn_4+4*Ad_1*Sn_3+6*Ad_2*Sn_2+4*Ad_3*Sn_1+Ad_4*Sn_0)*eps_a+An_0*Sn_4+4*An_1*Sn_3+6*An_2*Sn_2+4*An_3*Sn_1+An_4*Sn_0)*b_a+(In_0*Sn_4+4*In_1*Sn_3+6*In_2*Sn_2+4*In_3*Sn_1+In_4*Sn_0)*b_i-Sd_4*h1+h2*Sn_4+Sn_5, -In_5+y2_5, (dlt+g_ir_0)*In_5-f*(Ad_5+An_5)*g_ai+5*g_ir_1*In_4+10*g_ir_2*In_3+10*g_ir_3*In_2+5*g_ir_4*In_1+In_0*g_ir_5+In_6, g_ir_5, -Sd_6+y1_6, (((Ad_0*Sd_6+6*Ad_1*Sd_5+15*Ad_2*Sd_4+20*Ad_3*Sd_3+15*Ad_4*Sd_2+6*Ad_5*Sd_1+Ad_6*Sd_0)*eps_a+An_0*Sd_6+6*Sd_5*An_1+15*Sd_4*An_2+20*Sd_3*An_3+15*Sd_2*An_4+6*Sd_1*An_5+Sd_0*An_6)*b_a+b_i*(In_0*Sd_6+6*In_1*Sd_5+15*In_2*Sd_4+20*In_3*Sd_3+15*In_4*Sd_2+6*In_5*Sd_1+In_6*Sd_0))*eps_s+Sd_6*h1-h2*Sn_6+Sd_7, (((-Ad_0*Sn_5-5*Ad_1*Sn_4-10*Ad_2*Sn_3-10*Ad_3*Sn_2-5*Ad_4*Sn_1-Ad_5*Sn_0)*eps_a-An_0*Sn_5-5*Sn_4*An_1-10*Sn_3*An_2-10*Sn_2*An_3-5*An_4*Sn_1-An_5*Sn_0)*b_a-b_i*(In_0*Sd_5+5*In_1*Sd_4+10*In_2*Sd_3+10*In_3*Sd_2+5*In_4*Sd_1+In_5*Sd_0))*eps_s+(h1+g_ai)*Ad_5-An_5*h2+Ad_6, ((-Ad_0*Sn_5-5*Ad_1*Sn_4-10*Ad_2*Sn_3-10*Ad_3*Sn_2-5*Ad_4*Sn_1-Ad_5*Sn_0)*eps_a-An_0*Sn_5-5*Sn_4*An_1-10*Sn_3*An_2-10*Sn_2*An_3-5*An_4*Sn_1-An_5*Sn_0)*b_a+(-In_0*Sn_5-5*In_1*Sn_4-10*In_2*Sn_3-10*In_3*Sn_2-5*In_4*Sn_1-In_5*Sn_0)*b_i+(g_ai+h2)*An_5-Ad_5*h1+An_6, ((Ad_0*Sn_5+5*Ad_1*Sn_4+10*Ad_2*Sn_3+10*Ad_3*Sn_2+5*Ad_4*Sn_1+Ad_5*Sn_0)*eps_a+An_0*Sn_5+5*Sn_4*An_1+10*Sn_3*An_2+10*Sn_2*An_3+5*An_4*Sn_1+An_5*Sn_0)*b_a+(In_0*Sn_5+5*In_1*Sn_4+10*In_2*Sn_3+10*In_3*Sn_2+5*In_4*Sn_1+In_5*Sn_0)*b_i-Sd_5*h1+h2*Sn_5+Sn_6, -In_6+y2_6, (dlt+g_ir_0)*In_6-f*(Ad_6+An_6)*g_ai+6*g_ir_1*In_5+15*g_ir_2*In_4+20*g_ir_3*In_3+15*g_ir_4*In_2+6*g_ir_5*In_1+In_0*g_ir_6+In_7, g_ir_6, -Sd_7+y1_7, -In_7+y2_7, -g_ir_1+y_faux1_1, -g_ir_2+y_faux1_2, -g_ir_3+y_faux1_3, -g_ir_4+y_faux1_4, -g_ir_5+y_faux1_5, -g_ir_6+y_faux1_6, y_faux2_0-R_0]
	New system: [y1_0 = Sd_0, y1_1 = Sd_1, y1_2 = Sd_2, y1_3 = Sd_3, y1_4 = Sd_4, y1_5 = Sd_5, y1_6 = Sd_6, y1_7 = Sd_7, y1_8 = Sd_8, y1_9 = Sd_9, y1_10 = Sd_10, y1_11 = Sd_11, y1_12 = Sd_12, y1_13 = Sd_13, y1_14 = Sd_14, y1_15 = Sd_15, y1_16 = Sd_16, y1_17 = Sd_17, y2_0 = In_0, y2_1 = In_1, y2_2 = In_2, y2_3 = In_3, y2_4 = In_4, y2_5 = In_5, y2_6 = In_6, y2_7 = In_7, y2_8 = In_8, y2_9 = In_9, y2_10 = In_10, y2_11 = In_11, y2_12 = In_12, y2_13 = In_13, y2_14 = In_14, y2_15 = In_15, y2_16 = In_16, y2_17 = In_17, y_faux1_0 = g_ir_0, y_faux1_1 = g_ir_1, y_faux1_2 = g_ir_2, y_faux1_3 = g_ir_3, y_faux1_4 = g_ir_4, y_faux1_5 = g_ir_5, y_faux1_6 = g_ir_6, y_faux1_7 = g_ir_7, y_faux1_8 = g_ir_8, y_faux1_9 = g_ir_9, y_faux1_10 = g_ir_10, y_faux1_11 = g_ir_11, y_faux1_12 = g_ir_12, y_faux1_13 = g_ir_13, y_faux1_14 = g_ir_14, y_faux1_15 = g_ir_15, y_faux1_16 = g_ir_16, y_faux1_17 = g_ir_17, y_faux2_0 = R_0]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability:  32651735040000000000000000
Random sample for the outputs and inputs is generated from  [b_a = 21977724693508406032200626, b_i = 13175168904831901480346307, dlt = 10718462410085509665936654, eps_a = 32536239192756354976663219, eps_s = 21874773118456834326915371, f = 23161761245303246067980109, g_ai = 8094724607259640139868597, h1 = 31994670231976637700585679, h2 = 12940529990087411155484142, g_ir_0 = 9956637663623667768156391, Sd_0 = 1909721637077289036008209, Sn_0 = 22356940039756441759671644, Ad_0 = 32620780015135051371216378, An_0 = 29762205042837697455689899, In_0 = 4969722488699233359295467, R_0 = 13138599558224736178667103]
The polynomial system widehat{E^t} contains  62 equations in  54  variables
            "new_logs/SSAAIR/transcendence_2_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [dlt, g_ir]

=======================================================
Substituting transcendence basis.
=======================================================
> quit
memory used=1165.6MB, alloc=172.3MB, time=10.17
    |\^/|     Maple 2021 (X86 64 LINUX)
._|\|   |/|_. Copyright (c) Maplesoft, a division of Waterloo Maple Inc. 2021
 \  MAPLE  /  All rights reserved. Maple is a trademark of
 <____ ____>  Waterloo Maple Inc.
      |       Type ? for help.
> read "../generate_tr_bases.mpl";
Warning, (in IdentifiabilityODE) `degrees` is implicitly declared local
|../generate_tr_bases.mpl:321|
Warning, (in IdentifiabilityODE) `degree_table` is implicitly declared local
|../generate_tr_bases.mpl:451|
Warning, (in IdentifiabilityODE) `occurrence_table` is implicitly declared local
|../generate_tr_bases.mpl:452|

> sigma := [
>   diff(Sd(t), t) = -eps_s * b_a * (An(t) + eps_a * Ad(t)) * Sd(t) - h1 * Sd(t) + h2 * Sn(t) - eps_s * b_i * Sd(t) * In(t),
>   diff(Sn(t), t) = -b_i * Sn(t) * In(t) - b_a * (An(t) + eps_a*Ad(t)) * Sn(t) + h1 * Sd(t) - h2 * Sn(t),
>   diff(Ad(t), t) = eps_s * b_i * Sd(t) * In(t) + eps_s * b_a * (An(t) + eps_a * Ad(t)) * Sn(t) + h2 * An(t) - g_ai * Ad(t) - h1 * Ad(t), 
>   diff(An(t), t) = b_i * Sn(t) * In(t) + b_a * (An(t) + eps_a * Ad(t)) * Sn(t) + h1 * Ad(t) - g_ai * An(t) - h2 * An(t), 
>   diff(In(t), t) = f * g_ai * (Ad(t) + An(t)) - dlt * In(t) - g_ir * In(t),
>   diff(R(t), t) = (1-f) * g_ai * (Ad(t) + An(t)) + g_ir * In(t),
>   y1(t) = Sd(t),
>   y2(t) = In(t)
> ]: 
> IdentifiabilityODE(sigma, GetParameters(sigma), "new_logs/SSAAIR", sub_transc=true):
memory used=3.6MB, alloc=40.3MB, time=0.15

=======================================================
0. Extracting states, inputs, outputs, and parameters from the system
=======================================================

=== Input info ===
State variables:          [Sd(t), Sn(t), Ad(t), An(t), In(t), R(t)]
Output variables:         [y1(t), y2(t)]
Input variables:          []
Parameters in equations:  [b_a, b_i, dlt, eps_a, eps_s, f, g_ai, g_ir, h1, h2]
===================


=======================================================
1. Constructing the maximal polynomial system
=======================================================
memory used=8.2MB, alloc=73.3MB, time=0.24
memory used=53.9MB, alloc=117.3MB, time=0.65
memory used=118.5MB, alloc=112.3MB, time=1.32

=======================================================
2. Truncating the polynomial system based on the Jacobian condition
=======================================================
Bound D_1 for testing the rank of the Jacobian probabilistically:  306544000
memory used=187.2MB, alloc=144.3MB, time=2.03
memory used=210.1MB, alloc=144.3MB, time=2.28
Orders of prolongations of the outputs (beta) =  [8, 8]
Orders of prolongations of the state variables (alpha) =  [8, 7, 7, 7, 8, 1]

=======================================================
3. Assessing local identifiability
=======================================================
memory used=318.5MB, alloc=157.1MB, time=2.97
Locally identifiable paramters:  [b_a, b_i, eps_a, eps_s, f, g_ai, h1, h2, Sd(0), Sn(0), Ad(0), An(0), In(0)]
Nonidentifiable parameter:  [R(0), dlt, g_ir]
Number of transcendence basis choices before "filtering": 595
Number of transcendence basis choices after "filtering": 3

=======================================================
Creating Truncated system (old)
=======================================================
Bound D_2 for assessing global identifiability:  28298170370000000000000000
Random sample for the outputs and inputs is generated from  [b_a = 9546269154154235283941131, b_i = 19946782327329240203701632, dlt = 2239018088442943899690935, eps_a = 20482468566391291522535139, eps_s = 8364880363205951472328704, f = 14819868294100026485584436, g_ai = 14790606546666865171979191, g_ir = 2852412768714496154029195, h1 = 5076022876160048604329742, h2 = 15862553762588510442283605, Sd_0 = 21975301396616781477074138, Sn_0 = 7102167012824237766853673, Ad_0 = 1060846200082054857631593, An_0 = 8496043103752092225727487, In_0 = 5152137260447915958904186, R_0 = 22673102554078362089486215]
The polynomial system widehat{E^t} contains  48 equations in  47  variables
Algebraically independent parameters (candidates) [R(0), dlt]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {dlt}
Algebraically independent parameters among derivatives: {R(0)}
	Adding ODEs: [diff(dlt(t),t) = 0]
	Adding output functions: [y_faux1(t) = dlt(t)]
	New system: [diff(dlt(t),t) = 0, diff(Sd(t),t) = -eps_s*b_a*(An(t)+eps_a*Ad(t))*Sd(t)-h1*Sd(t)+h2*Sn(t)-eps_s*b_i*Sd(t)*In(t), diff(Sn(t),t) = -b_i*Sn(t)*In(t)-b_a*(An(t)+eps_a*Ad(t))*Sn(t)+h1*Sd(t)-h2*Sn(t), diff(Ad(t),t) = eps_s*b_i*Sd(t)*In(t)+eps_s*b_a*(An(t)+eps_a*Ad(t))*Sn(t)+h2*An(t)-g_ai*Ad(t)-h1*Ad(t), diff(An(t),t) = b_i*Sn(t)*In(t)+b_a*(An(t)+eps_a*Ad(t))*Sn(t)+h1*Ad(t)-g_ai*An(t)-h2*An(t), diff(In(t),t) = f*g_ai*(Ad(t)+An(t))-dlt(t)*In(t)-g_ir*In(t), diff(R(t),t) = (1-f)*g_ai*(Ad(t)+An(t))+g_ir*In(t), y1(t) = Sd(t), y2(t) = In(t), y_faux1(t) = dlt(t)]

=== Input info ===
State variables:          [dlt(t), Sd(t), Sn(t), Ad(t), An(t), In(t), R(t)]
Output variables:         [y1(t), y2(t), y_faux1(t)]
Input variables:          []
Parameters in equations:  [b_a, b_i, eps_a, eps_s, f, g_ai, g_ir, h1, h2]
===================

memory used=426.0MB, alloc=157.1MB, time=3.88
memory used=488.1MB, alloc=157.1MB, time=4.59
memory used=614.9MB, alloc=173.1MB, time=5.56
memory used=729.4MB, alloc=179.6MB, time=6.37
	Adding new y-equations: [y_faux2_0 = R_0]
	New system: [y1_0-Sd_0, Ad_0*Sd_0*b_a*eps_a*eps_s+An_0*Sd_0*b_a*eps_s+In_0*Sd_0*b_i*eps_s+Sd_0*h1-Sn_0*h2+Sd_1, y2_0-In_0, -Ad_0*f*g_ai-An_0*f*g_ai+In_0*dlt_0+In_0*g_ir+In_1, y_faux1_0-dlt_0, dlt_1, -Sd_1+y1_1, (((Ad_0*eps_a+An_0)*b_a+b_i*In_0)*Sd_1+((Ad_1*eps_a+An_1)*b_a+In_1*b_i)*Sd_0)*eps_s+Sd_1*h1-h2*Sn_1+Sd_2, -Ad_0*Sn_0*b_a*eps_a*eps_s-An_0*Sn_0*b_a*eps_s-In_0*Sd_0*b_i*eps_s+Ad_0*g_ai+Ad_0*h1-An_0*h2+Ad_1, -Ad_0*Sn_0*b_a*eps_a-An_0*Sn_0*b_a-In_0*Sn_0*b_i-Ad_0*h1+An_0*g_ai+An_0*h2+An_1, Ad_0*Sn_0*b_a*eps_a+An_0*Sn_0*b_a+In_0*Sn_0*b_i-Sd_0*h1+Sn_0*h2+Sn_1, -In_1+y2_1, (dlt_0+g_ir)*In_1-f*(Ad_1+An_1)*g_ai+In_0*dlt_1+In_2, -Sd_2+y1_2, (((Ad_0*eps_a+An_0)*Sd_2+(2*Ad_1*Sd_1+Ad_2*Sd_0)*eps_a+An_2*Sd_0+2*Sd_1*An_1)*b_a+b_i*(In_0*Sd_2+2*In_1*Sd_1+In_2*Sd_0))*eps_s+Sd_2*h1-h2*Sn_2+Sd_3, ((-Ad_0*Sn_1*eps_a-Ad_1*Sn_0*eps_a-An_0*Sn_1-An_1*Sn_0)*b_a-b_i*(In_0*Sd_1+In_1*Sd_0))*eps_s+(h1+g_ai)*Ad_1-An_1*h2+Ad_2, (-Sn_0*An_1-Sn_0*eps_a*Ad_1-Sn_1*(Ad_0*eps_a+An_0))*b_a+(g_ai+h2)*An_1-In_0*Sn_1*b_i-Sn_0*b_i*In_1-Ad_1*h1+An_2, ((Ad_0*eps_a+An_0)*b_a+b_i*In_0+h2)*Sn_1+Sn_0*(Ad_1*eps_a+An_1)*b_a+Sn_0*b_i*In_1-Sd_1*h1+Sn_2, -In_2+y2_2, (dlt_0+g_ir)*In_2-f*(Ad_2+An_2)*g_ai+2*dlt_1*In_1+In_0*dlt_2+In_3, dlt_2, -Sd_3+y1_3, (((Ad_0*Sd_3+3*Ad_1*Sd_2+3*Ad_2*Sd_1+Ad_3*Sd_0)*eps_a+3*An_1*Sd_2+3*An_2*Sd_1+An_3*Sd_0+Sd_3*An_0)*b_a+b_i*(In_0*Sd_3+3*In_1*Sd_2+3*In_2*Sd_1+In_3*Sd_0))*eps_s+Sd_3*h1-h2*Sn_3+Sd_4, (((-Ad_0*Sn_2-2*Ad_1*Sn_1-Ad_2*Sn_0)*eps_a-2*Sn_1*An_1-An_2*Sn_0-Sn_2*An_0)*b_a-b_i*(In_0*Sd_2+2*In_1*Sd_1+In_2*Sd_0))*eps_s+(h1+g_ai)*Ad_2-An_2*h2+Ad_3, ((-Ad_0*Sn_2-2*Ad_1*Sn_1-Ad_2*Sn_0)*eps_a-2*Sn_1*An_1-An_2*Sn_0-Sn_2*An_0)*b_a+(g_ai+h2)*An_2-In_0*Sn_2*b_i-2*b_i*Sn_1*In_1-Sn_0*b_i*In_2-Ad_2*h1+An_3, ((Ad_0*eps_a+An_0)*Sn_2+(2*Ad_1*Sn_1+Ad_2*Sn_0)*eps_a+An_2*Sn_0+2*Sn_1*An_1)*b_a+(In_0*b_i+h2)*Sn_2+2*b_i*Sn_1*In_1+Sn_0*b_i*In_2-Sd_2*h1+Sn_3, -In_3+y2_3, (dlt_0+g_ir)*In_3-f*(Ad_3+An_3)*g_ai+3*dlt_1*In_2+3*dlt_2*In_1+In_0*dlt_3+In_4, dlt_3, -Sd_4+y1_4, (((Ad_0*Sd_4+4*Ad_1*Sd_3+6*Ad_2*Sd_2+4*Ad_3*Sd_1+Ad_4*Sd_0)*eps_a+An_0*Sd_4+4*An_1*Sd_3+6*An_2*Sd_2+4*An_3*Sd_1+An_4*Sd_0)*b_a+b_i*(In_0*Sd_4+4*In_1*Sd_3+6*In_2*Sd_2+4*In_3*Sd_1+In_4*Sd_0))*eps_s+Sd_4*h1-h2*Sn_4+Sd_5, (((-Ad_0*Sn_3-3*Ad_1*Sn_2-3*Ad_2*Sn_1-Ad_3*Sn_0)*eps_a-Sn_3*An_0-3*An_1*Sn_2-3*An_2*Sn_1-An_3*Sn_0)*b_a-b_i*(In_0*Sd_3+3*In_1*Sd_2+3*In_2*Sd_1+In_3*Sd_0))*eps_s+(h1+g_ai)*Ad_3-An_3*h2+Ad_4, ((-Ad_0*Sn_3-3*Ad_1*Sn_2-3*Ad_2*Sn_1-Ad_3*Sn_0)*eps_a-Sn_3*An_0-3*An_1*Sn_2-3*An_2*Sn_1-An_3*Sn_0)*b_a+(-In_0*Sn_3-3*In_1*Sn_2-3*In_2*Sn_1-In_3*Sn_0)*b_i+(g_ai+h2)*An_3-Ad_3*h1+An_4, ((Ad_0*Sn_3+3*Ad_1*Sn_2+3*Ad_2*Sn_1+Ad_3*Sn_0)*eps_a+3*An_1*Sn_2+3*An_2*Sn_1+An_3*Sn_0+Sn_3*An_0)*b_a+(In_0*b_i+h2)*Sn_3+(3*In_1*Sn_2+3*In_2*Sn_1+In_3*Sn_0)*b_i-Sd_3*h1+Sn_4, -In_4+y2_4, (dlt_0+g_ir)*In_4-f*(Ad_4+An_4)*g_ai+4*dlt_1*In_3+6*dlt_2*In_2+4*dlt_3*In_1+In_0*dlt_4+In_5, dlt_4, -Sd_5+y1_5, (((Ad_0*Sd_5+5*Ad_1*Sd_4+10*Ad_2*Sd_3+10*Ad_3*Sd_2+5*Ad_4*Sd_1+Ad_5*Sd_0)*eps_a+An_0*Sd_5+5*An_1*Sd_4+10*An_2*Sd_3+10*An_3*Sd_2+5*An_4*Sd_1+An_5*Sd_0)*b_a+b_i*(In_0*Sd_5+5*In_1*Sd_4+10*In_2*Sd_3+10*In_3*Sd_2+5*In_4*Sd_1+In_5*Sd_0))*eps_s+Sd_5*h1-h2*Sn_5+Sd_6, (((-Ad_0*Sn_4-4*Ad_1*Sn_3-6*Ad_2*Sn_2-4*Ad_3*Sn_1-Ad_4*Sn_0)*eps_a-An_0*Sn_4-4*An_1*Sn_3-6*An_2*Sn_2-4*An_3*Sn_1-An_4*Sn_0)*b_a-b_i*(In_0*Sd_4+4*In_1*Sd_3+6*In_2*Sd_2+4*In_3*Sd_1+In_4*Sd_0))*eps_s+(h1+g_ai)*Ad_4-An_4*h2+Ad_5, ((-Ad_0*Sn_4-4*Ad_1*Sn_3-6*Ad_2*Sn_2-4*Ad_3*Sn_1-Ad_4*Sn_0)*eps_a-An_0*Sn_4-4*An_1*Sn_3-6*An_2*Sn_2-4*An_3*Sn_1-An_4*Sn_0)*b_a+(-In_0*Sn_4-4*In_1*Sn_3-6*In_2*Sn_2-4*In_3*Sn_1-In_4*Sn_0)*b_i+(g_ai+h2)*An_4-Ad_4*h1+An_5, ((Ad_0*Sn_4+4*Ad_1*Sn_3+6*Ad_2*Sn_2+4*Ad_3*Sn_1+Ad_4*Sn_0)*eps_a+An_0*Sn_4+4*An_1*Sn_3+6*An_2*Sn_2+4*An_3*Sn_1+An_4*Sn_0)*b_a+(In_0*Sn_4+4*In_1*Sn_3+6*In_2*Sn_2+4*In_3*Sn_1+In_4*Sn_0)*b_i-Sd_4*h1+h2*Sn_4+Sn_5, -In_5+y2_5, (dlt_0+g_ir)*In_5-f*(Ad_5+An_5)*g_ai+5*dlt_1*In_4+10*dlt_2*In_3+10*dlt_3*In_2+5*dlt_4*In_1+In_0*dlt_5+In_6, dlt_5, -Sd_6+y1_6, (((Ad_0*Sd_6+6*Ad_1*Sd_5+15*Ad_2*Sd_4+20*Ad_3*Sd_3+15*Ad_4*Sd_2+6*Ad_5*Sd_1+Ad_6*Sd_0)*eps_a+An_0*Sd_6+6*Sd_5*An_1+15*Sd_4*An_2+20*Sd_3*An_3+15*Sd_2*An_4+6*Sd_1*An_5+Sd_0*An_6)*b_a+b_i*(In_0*Sd_6+6*In_1*Sd_5+15*In_2*Sd_4+20*In_3*Sd_3+15*In_4*Sd_2+6*In_5*Sd_1+In_6*Sd_0))*eps_s+Sd_6*h1-h2*Sn_6+Sd_7, (((-Ad_0*Sn_5-5*Ad_1*Sn_4-10*Ad_2*Sn_3-10*Ad_3*Sn_2-5*Ad_4*Sn_1-Ad_5*Sn_0)*eps_a-An_0*Sn_5-5*Sn_4*An_1-10*Sn_3*An_2-10*Sn_2*An_3-5*An_4*Sn_1-An_5*Sn_0)*b_a-b_i*(In_0*Sd_5+5*In_1*Sd_4+10*In_2*Sd_3+10*In_3*Sd_2+5*In_4*Sd_1+In_5*Sd_0))*eps_s+(h1+g_ai)*Ad_5-An_5*h2+Ad_6, ((-Ad_0*Sn_5-5*Ad_1*Sn_4-10*Ad_2*Sn_3-10*Ad_3*Sn_2-5*Ad_4*Sn_1-Ad_5*Sn_0)*eps_a-An_0*Sn_5-5*Sn_4*An_1-10*Sn_3*An_2-10*Sn_2*An_3-5*An_4*Sn_1-An_5*Sn_0)*b_a+(-In_0*Sn_5-5*In_1*Sn_4-10*In_2*Sn_3-10*In_3*Sn_2-5*In_4*Sn_1-In_5*Sn_0)*b_i+(g_ai+h2)*An_5-Ad_5*h1+An_6, ((Ad_0*Sn_5+5*Ad_1*Sn_4+10*Ad_2*Sn_3+10*Ad_3*Sn_2+5*Ad_4*Sn_1+Ad_5*Sn_0)*eps_a+An_0*Sn_5+5*Sn_4*An_1+10*Sn_3*An_2+10*Sn_2*An_3+5*An_4*Sn_1+An_5*Sn_0)*b_a+(In_0*Sn_5+5*In_1*Sn_4+10*In_2*Sn_3+10*In_3*Sn_2+5*In_4*Sn_1+In_5*Sn_0)*b_i-Sd_5*h1+h2*Sn_5+Sn_6, -In_6+y2_6, (dlt_0+g_ir)*In_6-f*(Ad_6+An_6)*g_ai+6*dlt_1*In_5+15*dlt_2*In_4+20*dlt_3*In_3+15*dlt_4*In_2+6*dlt_5*In_1+In_0*dlt_6+In_7, dlt_6, -Sd_7+y1_7, -In_7+y2_7, -dlt_1+y_faux1_1, -dlt_2+y_faux1_2, -dlt_3+y_faux1_3, -dlt_4+y_faux1_4, -dlt_5+y_faux1_5, -dlt_6+y_faux1_6, y_faux2_0-R_0]
	New system: [y1_0 = Sd_0, y1_1 = Sd_1, y1_2 = Sd_2, y1_3 = Sd_3, y1_4 = Sd_4, y1_5 = Sd_5, y1_6 = Sd_6, y1_7 = Sd_7, y1_8 = Sd_8, y1_9 = Sd_9, y1_10 = Sd_10, y1_11 = Sd_11, y1_12 = Sd_12, y1_13 = Sd_13, y1_14 = Sd_14, y1_15 = Sd_15, y1_16 = Sd_16, y1_17 = Sd_17, y2_0 = In_0, y2_1 = In_1, y2_2 = In_2, y2_3 = In_3, y2_4 = In_4, y2_5 = In_5, y2_6 = In_6, y2_7 = In_7, y2_8 = In_8, y2_9 = In_9, y2_10 = In_10, y2_11 = In_11, y2_12 = In_12, y2_13 = In_13, y2_14 = In_14, y2_15 = In_15, y2_16 = In_16, y2_17 = In_17, y_faux1_0 = dlt_0, y_faux1_1 = dlt_1, y_faux1_2 = dlt_2, y_faux1_3 = dlt_3, y_faux1_4 = dlt_4, y_faux1_5 = dlt_5, y_faux1_6 = dlt_6, y_faux1_7 = dlt_7, y_faux1_8 = dlt_8, y_faux1_9 = dlt_9, y_faux1_10 = dlt_10, y_faux1_11 = dlt_11, y_faux1_12 = dlt_12, y_faux1_13 = dlt_13, y_faux1_14 = dlt_14, y_faux1_15 = dlt_15, y_faux1_16 = dlt_16, y_faux1_17 = dlt_17, y_faux2_0 = R_0]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability:  32651735040000000000000000
Random sample for the outputs and inputs is generated from  [b_a = 8103064405580117025421585, b_i = 21564064551436131607608185, eps_a = 11452985755276532174799564, eps_s = 27517663554816394958565071, f = 17984967539840815057933149, g_ai = 22659752052702665588342945, g_ir = 11168515667020182604419581, h1 = 23981270109249206637542688, h2 = 32361760713732204195036436, dlt_0 = 896370905426958108659969, Sd_0 = 24688177406102535241920998, Sn_0 = 280253759032602942659150, Ad_0 = 29373694992122028397928464, An_0 = 14450421157838407766799911, In_0 = 7433487020521600081034544, R_0 = 25290232315103096203078163]
The polynomial system widehat{E^t} contains  62 equations in  54  variables
            "new_logs/SSAAIR/transcendence_1_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [R(0), g_ir]

=======================================================
Substituting transcendence basis.
=======================================================
Algebraically independent parameters among nonidentifiable: {g_ir}
Algebraically independent parameters among derivatives: {R(0)}
	Adding ODEs: [diff(g_ir(t),t) = 0]
	Adding output functions: [y_faux1(t) = g_ir(t)]
	New system: [diff(g_ir(t),t) = 0, diff(Sd(t),t) = -eps_s*b_a*(An(t)+eps_a*Ad(t))*Sd(t)-h1*Sd(t)+h2*Sn(t)-eps_s*b_i*Sd(t)*In(t), diff(Sn(t),t) = -b_i*Sn(t)*In(t)-b_a*(An(t)+eps_a*Ad(t))*Sn(t)+h1*Sd(t)-h2*Sn(t), diff(Ad(t),t) = eps_s*b_i*Sd(t)*In(t)+eps_s*b_a*(An(t)+eps_a*Ad(t))*Sn(t)+h2*An(t)-g_ai*Ad(t)-h1*Ad(t), diff(An(t),t) = b_i*Sn(t)*In(t)+b_a*(An(t)+eps_a*Ad(t))*Sn(t)+h1*Ad(t)-g_ai*An(t)-h2*An(t), diff(In(t),t) = f*g_ai*(Ad(t)+An(t))-dlt*In(t)-g_ir(t)*In(t), diff(R(t),t) = (1-f)*g_ai*(Ad(t)+An(t))+g_ir(t)*In(t), y1(t) = Sd(t), y2(t) = In(t), y_faux1(t) = g_ir(t)]

=== Input info ===
State variables:          [g_ir(t), Sd(t), Sn(t), Ad(t), An(t), In(t), R(t)]
Output variables:         [y1(t), y2(t), y_faux1(t)]
Input variables:          []
Parameters in equations:  [b_a, b_i, dlt, eps_a, eps_s, f, g_ai, h1, h2]
===================

memory used=829.9MB, alloc=171.6MB, time=7.35
memory used=927.8MB, alloc=171.6MB, time=8.38
memory used=1044.0MB, alloc=171.6MB, time=9.22
	Adding new y-equations: [y_faux2_0 = R_0]
	New system: [y1_0-Sd_0, Ad_0*Sd_0*b_a*eps_a*eps_s+An_0*Sd_0*b_a*eps_s+In_0*Sd_0*b_i*eps_s+Sd_0*h1-Sn_0*h2+Sd_1, y2_0-In_0, -Ad_0*f*g_ai-An_0*f*g_ai+In_0*dlt+In_0*g_ir_0+In_1, y_faux1_0-g_ir_0, g_ir_1, -Sd_1+y1_1, (((Ad_0*eps_a+An_0)*b_a+b_i*In_0)*Sd_1+((Ad_1*eps_a+An_1)*b_a+In_1*b_i)*Sd_0)*eps_s+Sd_1*h1-h2*Sn_1+Sd_2, -Ad_0*Sn_0*b_a*eps_a*eps_s-An_0*Sn_0*b_a*eps_s-In_0*Sd_0*b_i*eps_s+Ad_0*g_ai+Ad_0*h1-An_0*h2+Ad_1, -Ad_0*Sn_0*b_a*eps_a-An_0*Sn_0*b_a-In_0*Sn_0*b_i-Ad_0*h1+An_0*g_ai+An_0*h2+An_1, Ad_0*Sn_0*b_a*eps_a+An_0*Sn_0*b_a+In_0*Sn_0*b_i-Sd_0*h1+Sn_0*h2+Sn_1, -In_1+y2_1, (dlt+g_ir_0)*In_1-f*(Ad_1+An_1)*g_ai+In_0*g_ir_1+In_2, -Sd_2+y1_2, (((Ad_0*eps_a+An_0)*Sd_2+(2*Ad_1*Sd_1+Ad_2*Sd_0)*eps_a+An_2*Sd_0+2*Sd_1*An_1)*b_a+b_i*(In_0*Sd_2+2*In_1*Sd_1+In_2*Sd_0))*eps_s+Sd_2*h1-h2*Sn_2+Sd_3, ((-Ad_0*Sn_1*eps_a-Ad_1*Sn_0*eps_a-An_0*Sn_1-An_1*Sn_0)*b_a-b_i*(In_0*Sd_1+In_1*Sd_0))*eps_s+(h1+g_ai)*Ad_1-An_1*h2+Ad_2, (-Sn_0*An_1-Sn_0*eps_a*Ad_1-Sn_1*(Ad_0*eps_a+An_0))*b_a+(g_ai+h2)*An_1-In_0*Sn_1*b_i-Sn_0*b_i*In_1-Ad_1*h1+An_2, ((Ad_0*eps_a+An_0)*b_a+b_i*In_0+h2)*Sn_1+Sn_0*(Ad_1*eps_a+An_1)*b_a+Sn_0*b_i*In_1-Sd_1*h1+Sn_2, -In_2+y2_2, (dlt+g_ir_0)*In_2-f*(Ad_2+An_2)*g_ai+2*g_ir_1*In_1+In_0*g_ir_2+In_3, g_ir_2, -Sd_3+y1_3, (((Ad_0*Sd_3+3*Ad_1*Sd_2+3*Ad_2*Sd_1+Ad_3*Sd_0)*eps_a+3*An_1*Sd_2+3*An_2*Sd_1+An_3*Sd_0+Sd_3*An_0)*b_a+b_i*(In_0*Sd_3+3*In_1*Sd_2+3*In_2*Sd_1+In_3*Sd_0))*eps_s+Sd_3*h1-h2*Sn_3+Sd_4, (((-Ad_0*Sn_2-2*Ad_1*Sn_1-Ad_2*Sn_0)*eps_a-2*Sn_1*An_1-An_2*Sn_0-Sn_2*An_0)*b_a-b_i*(In_0*Sd_2+2*In_1*Sd_1+In_2*Sd_0))*eps_s+(h1+g_ai)*Ad_2-An_2*h2+Ad_3, ((-Ad_0*Sn_2-2*Ad_1*Sn_1-Ad_2*Sn_0)*eps_a-2*Sn_1*An_1-An_2*Sn_0-Sn_2*An_0)*b_a+(g_ai+h2)*An_2-In_0*Sn_2*b_i-2*b_i*Sn_1*In_1-Sn_0*b_i*In_2-Ad_2*h1+An_3, ((Ad_0*eps_a+An_0)*Sn_2+(2*Ad_1*Sn_1+Ad_2*Sn_0)*eps_a+An_2*Sn_0+2*Sn_1*An_1)*b_a+(In_0*b_i+h2)*Sn_2+2*b_i*Sn_1*In_1+Sn_0*b_i*In_2-Sd_2*h1+Sn_3, -In_3+y2_3, (dlt+g_ir_0)*In_3-f*(Ad_3+An_3)*g_ai+3*g_ir_1*In_2+3*g_ir_2*In_1+In_0*g_ir_3+In_4, g_ir_3, -Sd_4+y1_4, (((Ad_0*Sd_4+4*Ad_1*Sd_3+6*Ad_2*Sd_2+4*Ad_3*Sd_1+Ad_4*Sd_0)*eps_a+An_0*Sd_4+4*An_1*Sd_3+6*An_2*Sd_2+4*An_3*Sd_1+An_4*Sd_0)*b_a+b_i*(In_0*Sd_4+4*In_1*Sd_3+6*In_2*Sd_2+4*In_3*Sd_1+In_4*Sd_0))*eps_s+Sd_4*h1-h2*Sn_4+Sd_5, (((-Ad_0*Sn_3-3*Ad_1*Sn_2-3*Ad_2*Sn_1-Ad_3*Sn_0)*eps_a-Sn_3*An_0-3*An_1*Sn_2-3*An_2*Sn_1-An_3*Sn_0)*b_a-b_i*(In_0*Sd_3+3*In_1*Sd_2+3*In_2*Sd_1+In_3*Sd_0))*eps_s+(h1+g_ai)*Ad_3-An_3*h2+Ad_4, ((-Ad_0*Sn_3-3*Ad_1*Sn_2-3*Ad_2*Sn_1-Ad_3*Sn_0)*eps_a-Sn_3*An_0-3*An_1*Sn_2-3*An_2*Sn_1-An_3*Sn_0)*b_a+(-In_0*Sn_3-3*In_1*Sn_2-3*In_2*Sn_1-In_3*Sn_0)*b_i+(g_ai+h2)*An_3-Ad_3*h1+An_4, ((Ad_0*Sn_3+3*Ad_1*Sn_2+3*Ad_2*Sn_1+Ad_3*Sn_0)*eps_a+3*An_1*Sn_2+3*An_2*Sn_1+An_3*Sn_0+Sn_3*An_0)*b_a+(In_0*b_i+h2)*Sn_3+(3*In_1*Sn_2+3*In_2*Sn_1+In_3*Sn_0)*b_i-Sd_3*h1+Sn_4, -In_4+y2_4, (dlt+g_ir_0)*In_4-f*(Ad_4+An_4)*g_ai+4*g_ir_1*In_3+6*g_ir_2*In_2+4*g_ir_3*In_1+In_0*g_ir_4+In_5, g_ir_4, -Sd_5+y1_5, (((Ad_0*Sd_5+5*Ad_1*Sd_4+10*Ad_2*Sd_3+10*Ad_3*Sd_2+5*Ad_4*Sd_1+Ad_5*Sd_0)*eps_a+An_0*Sd_5+5*An_1*Sd_4+10*An_2*Sd_3+10*An_3*Sd_2+5*An_4*Sd_1+An_5*Sd_0)*b_a+b_i*(In_0*Sd_5+5*In_1*Sd_4+10*In_2*Sd_3+10*In_3*Sd_2+5*In_4*Sd_1+In_5*Sd_0))*eps_s+Sd_5*h1-h2*Sn_5+Sd_6, (((-Ad_0*Sn_4-4*Ad_1*Sn_3-6*Ad_2*Sn_2-4*Ad_3*Sn_1-Ad_4*Sn_0)*eps_a-An_0*Sn_4-4*An_1*Sn_3-6*An_2*Sn_2-4*An_3*Sn_1-An_4*Sn_0)*b_a-b_i*(In_0*Sd_4+4*In_1*Sd_3+6*In_2*Sd_2+4*In_3*Sd_1+In_4*Sd_0))*eps_s+(h1+g_ai)*Ad_4-An_4*h2+Ad_5, ((-Ad_0*Sn_4-4*Ad_1*Sn_3-6*Ad_2*Sn_2-4*Ad_3*Sn_1-Ad_4*Sn_0)*eps_a-An_0*Sn_4-4*An_1*Sn_3-6*An_2*Sn_2-4*An_3*Sn_1-An_4*Sn_0)*b_a+(-In_0*Sn_4-4*In_1*Sn_3-6*In_2*Sn_2-4*In_3*Sn_1-In_4*Sn_0)*b_i+(g_ai+h2)*An_4-Ad_4*h1+An_5, ((Ad_0*Sn_4+4*Ad_1*Sn_3+6*Ad_2*Sn_2+4*Ad_3*Sn_1+Ad_4*Sn_0)*eps_a+An_0*Sn_4+4*An_1*Sn_3+6*An_2*Sn_2+4*An_3*Sn_1+An_4*Sn_0)*b_a+(In_0*Sn_4+4*In_1*Sn_3+6*In_2*Sn_2+4*In_3*Sn_1+In_4*Sn_0)*b_i-Sd_4*h1+h2*Sn_4+Sn_5, -In_5+y2_5, (dlt+g_ir_0)*In_5-f*(Ad_5+An_5)*g_ai+5*g_ir_1*In_4+10*g_ir_2*In_3+10*g_ir_3*In_2+5*g_ir_4*In_1+In_0*g_ir_5+In_6, g_ir_5, -Sd_6+y1_6, (((Ad_0*Sd_6+6*Ad_1*Sd_5+15*Ad_2*Sd_4+20*Ad_3*Sd_3+15*Ad_4*Sd_2+6*Ad_5*Sd_1+Ad_6*Sd_0)*eps_a+An_0*Sd_6+6*Sd_5*An_1+15*Sd_4*An_2+20*Sd_3*An_3+15*Sd_2*An_4+6*Sd_1*An_5+Sd_0*An_6)*b_a+b_i*(In_0*Sd_6+6*In_1*Sd_5+15*In_2*Sd_4+20*In_3*Sd_3+15*In_4*Sd_2+6*In_5*Sd_1+In_6*Sd_0))*eps_s+Sd_6*h1-h2*Sn_6+Sd_7, (((-Ad_0*Sn_5-5*Ad_1*Sn_4-10*Ad_2*Sn_3-10*Ad_3*Sn_2-5*Ad_4*Sn_1-Ad_5*Sn_0)*eps_a-An_0*Sn_5-5*Sn_4*An_1-10*Sn_3*An_2-10*Sn_2*An_3-5*An_4*Sn_1-An_5*Sn_0)*b_a-b_i*(In_0*Sd_5+5*In_1*Sd_4+10*In_2*Sd_3+10*In_3*Sd_2+5*In_4*Sd_1+In_5*Sd_0))*eps_s+(h1+g_ai)*Ad_5-An_5*h2+Ad_6, ((-Ad_0*Sn_5-5*Ad_1*Sn_4-10*Ad_2*Sn_3-10*Ad_3*Sn_2-5*Ad_4*Sn_1-Ad_5*Sn_0)*eps_a-An_0*Sn_5-5*Sn_4*An_1-10*Sn_3*An_2-10*Sn_2*An_3-5*An_4*Sn_1-An_5*Sn_0)*b_a+(-In_0*Sn_5-5*In_1*Sn_4-10*In_2*Sn_3-10*In_3*Sn_2-5*In_4*Sn_1-In_5*Sn_0)*b_i+(g_ai+h2)*An_5-Ad_5*h1+An_6, ((Ad_0*Sn_5+5*Ad_1*Sn_4+10*Ad_2*Sn_3+10*Ad_3*Sn_2+5*Ad_4*Sn_1+Ad_5*Sn_0)*eps_a+An_0*Sn_5+5*Sn_4*An_1+10*Sn_3*An_2+10*Sn_2*An_3+5*An_4*Sn_1+An_5*Sn_0)*b_a+(In_0*Sn_5+5*In_1*Sn_4+10*In_2*Sn_3+10*In_3*Sn_2+5*In_4*Sn_1+In_5*Sn_0)*b_i-Sd_5*h1+h2*Sn_5+Sn_6, -In_6+y2_6, (dlt+g_ir_0)*In_6-f*(Ad_6+An_6)*g_ai+6*g_ir_1*In_5+15*g_ir_2*In_4+20*g_ir_3*In_3+15*g_ir_4*In_2+6*g_ir_5*In_1+In_0*g_ir_6+In_7, g_ir_6, -Sd_7+y1_7, -In_7+y2_7, -g_ir_1+y_faux1_1, -g_ir_2+y_faux1_2, -g_ir_3+y_faux1_3, -g_ir_4+y_faux1_4, -g_ir_5+y_faux1_5, -g_ir_6+y_faux1_6, y_faux2_0-R_0]
	New system: [y1_0 = Sd_0, y1_1 = Sd_1, y1_2 = Sd_2, y1_3 = Sd_3, y1_4 = Sd_4, y1_5 = Sd_5, y1_6 = Sd_6, y1_7 = Sd_7, y1_8 = Sd_8, y1_9 = Sd_9, y1_10 = Sd_10, y1_11 = Sd_11, y1_12 = Sd_12, y1_13 = Sd_13, y1_14 = Sd_14, y1_15 = Sd_15, y1_16 = Sd_16, y1_17 = Sd_17, y2_0 = In_0, y2_1 = In_1, y2_2 = In_2, y2_3 = In_3, y2_4 = In_4, y2_5 = In_5, y2_6 = In_6, y2_7 = In_7, y2_8 = In_8, y2_9 = In_9, y2_10 = In_10, y2_11 = In_11, y2_12 = In_12, y2_13 = In_13, y2_14 = In_14, y2_15 = In_15, y2_16 = In_16, y2_17 = In_17, y_faux1_0 = g_ir_0, y_faux1_1 = g_ir_1, y_faux1_2 = g_ir_2, y_faux1_3 = g_ir_3, y_faux1_4 = g_ir_4, y_faux1_5 = g_ir_5, y_faux1_6 = g_ir_6, y_faux1_7 = g_ir_7, y_faux1_8 = g_ir_8, y_faux1_9 = g_ir_9, y_faux1_10 = g_ir_10, y_faux1_11 = g_ir_11, y_faux1_12 = g_ir_12, y_faux1_13 = g_ir_13, y_faux1_14 = g_ir_14, y_faux1_15 = g_ir_15, y_faux1_16 = g_ir_16, y_faux1_17 = g_ir_17, y_faux2_0 = R_0]

=======================================================
4. Randomizing the truncated system
=======================================================
Bound D_2 for assessing global identifiability:  32651735040000000000000000
Random sample for the outputs and inputs is generated from  [b_a = 11733034311702533773096655, b_i = 24205645907048135933266230, dlt = 1477043303749469489402523, eps_a = 31467328536211849051841540, eps_s = 34501959054504019883070, f = 24174885022184369238008040, g_ai = 9774040772920379283883673, h1 = 7990248612996088199891828, h2 = 16762296670222228502535602, g_ir_0 = 22066186575745265753849920, Sd_0 = 14334804199495151076460448, Sn_0 = 27859031459565564197129055, Ad_0 = 5530687630179148181784555, An_0 = 28897814110478633019717676, In_0 = 7974091412365330263904217, R_0 = 16728274748314323702561978]
The polynomial system widehat{E^t} contains  62 equations in  54  variables
            "new_logs/SSAAIR/transcendence_2_entropy_heuristic.mpl"

Algebraically independent parameters (candidates) [dlt, g_ir]

=======================================================
Substituting transcendence basis.
=======================================================
memory used=1156.3MB, alloc=171.6MB, time=10.09
> quit
memory used=1163.9MB, alloc=171.6MB, time=10.16
